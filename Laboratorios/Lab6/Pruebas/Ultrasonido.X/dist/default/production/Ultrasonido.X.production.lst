

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Jul 17 12:49:15 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=1
    11                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=2
    13                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=2
    14                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=2
    15                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=2
    18                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25   000000                     
    26                           ; Generated 25/07/2024 GMT
    27                           ; 
    28                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F4550 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60   000FE0                     bsr             equ	4064
    61   000FE9                     fsr0            equ	4073
    62   000FEA                     fsr0h           equ	4074
    63   000FE9                     fsr0l           equ	4073
    64   000FE1                     fsr1            equ	4065
    65   000FE2                     fsr1h           equ	4066
    66   000FE1                     fsr1l           equ	4065
    67   000FD9                     fsr2            equ	4057
    68   000FDA                     fsr2h           equ	4058
    69   000FD9                     fsr2l           equ	4057
    70   000FEF                     indf0           equ	4079
    71   000FE7                     indf1           equ	4071
    72   000FDF                     indf2           equ	4063
    73   000FF2                     intcon          equ	4082
    74   000000                     nvmcon          equ	0
    75   000FF9                     pcl             equ	4089
    76   000FFA                     pclath          equ	4090
    77   000FFB                     pclatu          equ	4091
    78   000FEB                     plusw0          equ	4075
    79   000FE3                     plusw1          equ	4067
    80   000FDB                     plusw2          equ	4059
    81   000FED                     postdec0        equ	4077
    82   000FE5                     postdec1        equ	4069
    83   000FDD                     postdec2        equ	4061
    84   000FEE                     postinc0        equ	4078
    85   000FE6                     postinc1        equ	4070
    86   000FDE                     postinc2        equ	4062
    87   000FEC                     preinc0         equ	4076
    88   000FE4                     preinc1         equ	4068
    89   000FDC                     preinc2         equ	4060
    90   000FF3                     prod            equ	4083
    91   000FF4                     prodh           equ	4084
    92   000FF3                     prodl           equ	4083
    93   000FD8                     status          equ	4056
    94   000FF5                     tablat          equ	4085
    95   000FF6                     tblptr          equ	4086
    96   000FF7                     tblptrh         equ	4087
    97   000FF6                     tblptrl         equ	4086
    98   000FF8                     tblptru         equ	4088
    99   000FFD                     tosl            equ	4093
   100   000FE8                     wreg            equ	4072
   101   000F62                     SPPDATA         equ	3938	;# 
   102   000F63                     SPPCFG          equ	3939	;# 
   103   000F64                     SPPEPS          equ	3940	;# 
   104   000F65                     SPPCON          equ	3941	;# 
   105   000F66                     UFRM            equ	3942	;# 
   106   000F66                     UFRML           equ	3942	;# 
   107   000F67                     UFRMH           equ	3943	;# 
   108   000F68                     UIR             equ	3944	;# 
   109   000F69                     UIE             equ	3945	;# 
   110   000F6A                     UEIR            equ	3946	;# 
   111   000F6B                     UEIE            equ	3947	;# 
   112   000F6C                     USTAT           equ	3948	;# 
   113   000F6D                     UCON            equ	3949	;# 
   114   000F6E                     UADDR           equ	3950	;# 
   115   000F6F                     UCFG            equ	3951	;# 
   116   000F70                     UEP0            equ	3952	;# 
   117   000F71                     UEP1            equ	3953	;# 
   118   000F72                     UEP2            equ	3954	;# 
   119   000F73                     UEP3            equ	3955	;# 
   120   000F74                     UEP4            equ	3956	;# 
   121   000F75                     UEP5            equ	3957	;# 
   122   000F76                     UEP6            equ	3958	;# 
   123   000F77                     UEP7            equ	3959	;# 
   124   000F78                     UEP8            equ	3960	;# 
   125   000F79                     UEP9            equ	3961	;# 
   126   000F7A                     UEP10           equ	3962	;# 
   127   000F7B                     UEP11           equ	3963	;# 
   128   000F7C                     UEP12           equ	3964	;# 
   129   000F7D                     UEP13           equ	3965	;# 
   130   000F7E                     UEP14           equ	3966	;# 
   131   000F7F                     UEP15           equ	3967	;# 
   132   000F80                     PORTA           equ	3968	;# 
   133   000F81                     PORTB           equ	3969	;# 
   134   000F82                     PORTC           equ	3970	;# 
   135   000F83                     PORTD           equ	3971	;# 
   136   000F84                     PORTE           equ	3972	;# 
   137   000F89                     LATA            equ	3977	;# 
   138   000F8A                     LATB            equ	3978	;# 
   139   000F8B                     LATC            equ	3979	;# 
   140   000F8C                     LATD            equ	3980	;# 
   141   000F8D                     LATE            equ	3981	;# 
   142   000F92                     TRISA           equ	3986	;# 
   143   000F92                     DDRA            equ	3986	;# 
   144   000F93                     TRISB           equ	3987	;# 
   145   000F93                     DDRB            equ	3987	;# 
   146   000F94                     TRISC           equ	3988	;# 
   147   000F94                     DDRC            equ	3988	;# 
   148   000F95                     TRISD           equ	3989	;# 
   149   000F95                     DDRD            equ	3989	;# 
   150   000F96                     TRISE           equ	3990	;# 
   151   000F96                     DDRE            equ	3990	;# 
   152   000F9B                     OSCTUNE         equ	3995	;# 
   153   000F9D                     PIE1            equ	3997	;# 
   154   000F9E                     PIR1            equ	3998	;# 
   155   000F9F                     IPR1            equ	3999	;# 
   156   000FA0                     PIE2            equ	4000	;# 
   157   000FA1                     PIR2            equ	4001	;# 
   158   000FA2                     IPR2            equ	4002	;# 
   159   000FA6                     EECON1          equ	4006	;# 
   160   000FA7                     EECON2          equ	4007	;# 
   161   000FA8                     EEDATA          equ	4008	;# 
   162   000FA9                     EEADR           equ	4009	;# 
   163   000FAB                     RCSTA           equ	4011	;# 
   164   000FAB                     RCSTA1          equ	4011	;# 
   165   000FAC                     TXSTA           equ	4012	;# 
   166   000FAC                     TXSTA1          equ	4012	;# 
   167   000FAD                     TXREG           equ	4013	;# 
   168   000FAD                     TXREG1          equ	4013	;# 
   169   000FAE                     RCREG           equ	4014	;# 
   170   000FAE                     RCREG1          equ	4014	;# 
   171   000FAF                     SPBRG           equ	4015	;# 
   172   000FAF                     SPBRG1          equ	4015	;# 
   173   000FB0                     SPBRGH          equ	4016	;# 
   174   000FB1                     T3CON           equ	4017	;# 
   175   000FB2                     TMR3            equ	4018	;# 
   176   000FB2                     TMR3L           equ	4018	;# 
   177   000FB3                     TMR3H           equ	4019	;# 
   178   000FB4                     CMCON           equ	4020	;# 
   179   000FB5                     CVRCON          equ	4021	;# 
   180   000FB6                     ECCP1AS         equ	4022	;# 
   181   000FB6                     CCP1AS          equ	4022	;# 
   182   000FB7                     ECCP1DEL        equ	4023	;# 
   183   000FB7                     CCP1DEL         equ	4023	;# 
   184   000FB8                     BAUDCON         equ	4024	;# 
   185   000FB8                     BAUDCTL         equ	4024	;# 
   186   000FBA                     CCP2CON         equ	4026	;# 
   187   000FBB                     CCPR2           equ	4027	;# 
   188   000FBB                     CCPR2L          equ	4027	;# 
   189   000FBC                     CCPR2H          equ	4028	;# 
   190   000FBD                     CCP1CON         equ	4029	;# 
   191   000FBD                     ECCP1CON        equ	4029	;# 
   192   000FBE                     CCPR1           equ	4030	;# 
   193   000FBE                     CCPR1L          equ	4030	;# 
   194   000FBF                     CCPR1H          equ	4031	;# 
   195   000FC0                     ADCON2          equ	4032	;# 
   196   000FC1                     ADCON1          equ	4033	;# 
   197   000FC2                     ADCON0          equ	4034	;# 
   198   000FC3                     ADRES           equ	4035	;# 
   199   000FC3                     ADRESL          equ	4035	;# 
   200   000FC4                     ADRESH          equ	4036	;# 
   201   000FC5                     SSPCON2         equ	4037	;# 
   202   000FC6                     SSPCON1         equ	4038	;# 
   203   000FC7                     SSPSTAT         equ	4039	;# 
   204   000FC8                     SSPADD          equ	4040	;# 
   205   000FC9                     SSPBUF          equ	4041	;# 
   206   000FCA                     T2CON           equ	4042	;# 
   207   000FCB                     PR2             equ	4043	;# 
   208   000FCB                     MEMCON          equ	4043	;# 
   209   000FCC                     TMR2            equ	4044	;# 
   210   000FCD                     T1CON           equ	4045	;# 
   211   000FCE                     TMR1            equ	4046	;# 
   212   000FCE                     TMR1L           equ	4046	;# 
   213   000FCF                     TMR1H           equ	4047	;# 
   214   000FD0                     RCON            equ	4048	;# 
   215   000FD1                     WDTCON          equ	4049	;# 
   216   000FD2                     HLVDCON         equ	4050	;# 
   217   000FD2                     LVDCON          equ	4050	;# 
   218   000FD3                     OSCCON          equ	4051	;# 
   219   000FD5                     T0CON           equ	4053	;# 
   220   000FD6                     TMR0            equ	4054	;# 
   221   000FD6                     TMR0L           equ	4054	;# 
   222   000FD7                     TMR0H           equ	4055	;# 
   223   000FD8                     STATUS          equ	4056	;# 
   224   000FD9                     FSR2            equ	4057	;# 
   225   000FD9                     FSR2L           equ	4057	;# 
   226   000FDA                     FSR2H           equ	4058	;# 
   227   000FDB                     PLUSW2          equ	4059	;# 
   228   000FDC                     PREINC2         equ	4060	;# 
   229   000FDD                     POSTDEC2        equ	4061	;# 
   230   000FDE                     POSTINC2        equ	4062	;# 
   231   000FDF                     INDF2           equ	4063	;# 
   232   000FE0                     BSR             equ	4064	;# 
   233   000FE1                     FSR1            equ	4065	;# 
   234   000FE1                     FSR1L           equ	4065	;# 
   235   000FE2                     FSR1H           equ	4066	;# 
   236   000FE3                     PLUSW1          equ	4067	;# 
   237   000FE4                     PREINC1         equ	4068	;# 
   238   000FE5                     POSTDEC1        equ	4069	;# 
   239   000FE6                     POSTINC1        equ	4070	;# 
   240   000FE7                     INDF1           equ	4071	;# 
   241   000FE8                     WREG            equ	4072	;# 
   242   000FE9                     FSR0            equ	4073	;# 
   243   000FE9                     FSR0L           equ	4073	;# 
   244   000FEA                     FSR0H           equ	4074	;# 
   245   000FEB                     PLUSW0          equ	4075	;# 
   246   000FEC                     PREINC0         equ	4076	;# 
   247   000FED                     POSTDEC0        equ	4077	;# 
   248   000FEE                     POSTINC0        equ	4078	;# 
   249   000FEF                     INDF0           equ	4079	;# 
   250   000FF0                     INTCON3         equ	4080	;# 
   251   000FF1                     INTCON2         equ	4081	;# 
   252   000FF2                     INTCON          equ	4082	;# 
   253   000FF3                     PROD            equ	4083	;# 
   254   000FF3                     PRODL           equ	4083	;# 
   255   000FF4                     PRODH           equ	4084	;# 
   256   000FF5                     TABLAT          equ	4085	;# 
   257   000FF6                     TBLPTR          equ	4086	;# 
   258   000FF6                     TBLPTRL         equ	4086	;# 
   259   000FF7                     TBLPTRH         equ	4087	;# 
   260   000FF8                     TBLPTRU         equ	4088	;# 
   261   000FF9                     PCLAT           equ	4089	;# 
   262   000FF9                     PC              equ	4089	;# 
   263   000FF9                     PCL             equ	4089	;# 
   264   000FFA                     PCLATH          equ	4090	;# 
   265   000FFB                     PCLATU          equ	4091	;# 
   266   000FFC                     STKPTR          equ	4092	;# 
   267   000FFD                     TOS             equ	4093	;# 
   268   000FFD                     TOSL            equ	4093	;# 
   269   000FFE                     TOSH            equ	4094	;# 
   270   000FFF                     TOSU            equ	4095	;# 
   271                           
   272                           	psect	smallconst
   273   000800                     __psmallconst:
   274                           	callstack 0
   275   000800  00                 	db	0
   276   000801                     _dpowers:
   277                           	callstack 0
   278   000801  0001               	dw	1
   279   000803  000A               	dw	10
   280   000805  0064               	dw	100
   281   000807  03E8               	dw	1000
   282   000809  2710               	dw	10000
   283   00080B                     __end_of_dpowers:
   284                           	callstack 0
   285   007C49                     _LATA1          set	31817
   286   007D61                     _TRMT           set	32097
   287   007CF0                     _TMR1IF         set	31984
   288   007E68                     _TMR1ON         set	32360
   289   007C11                     _RC1            set	31761
   290   007C10                     _RC0            set	31760
   291   007D08                     _CCP2IF         set	32008
   292   007EAF                     _TMR0ON         set	32431
   293   007F97                     _GIE            set	32663
   294   007F95                     _TMR0IE         set	32661
   295   007F92                     _TMR0IF         set	32658
   296   007C60                     _LATD0          set	31840
   297   007C58                     _LATC0          set	31832
   298   007C91                     _TRISA1         set	31889
   299   007CA0                     _TRISC0         set	31904
   300   000FBB                     _CCPR2          set	4027
   301   000FCE                     _TMR1           set	4046
   302   000FD6                     _TMR0           set	4054
   303   000FAD                     _TXREG          set	4013
   304   000FBA                     _CCP2CON        set	4026
   305   000FCD                     _T1CON          set	4045
   306   000FD5                     _T0CON          set	4053
   307   000FAF                     _SPBRG          set	4015
   308   000FB8                     _BAUDCON        set	4024
   309   000FAB                     _RCSTA          set	4011
   310   000FAC                     _TXSTA          set	4012
   311   00080B                     STR_2:
   312   00080B  4C                 	db	76	;'L'
   313   00080C  61                 	db	97	;'a'
   314   00080D  20                 	db	32
   315   00080E  64                 	db	100	;'d'
   316   00080F  69                 	db	105	;'i'
   317   000810  73                 	db	115	;'s'
   318   000811  74                 	db	116	;'t'
   319   000812  61                 	db	97	;'a'
   320   000813  6E                 	db	110	;'n'
   321   000814  63                 	db	99	;'c'
   322   000815  69                 	db	105	;'i'
   323   000816  61                 	db	97	;'a'
   324   000817  20                 	db	32
   325   000818  6D                 	db	109	;'m'
   326   000819  65                 	db	101	;'e'
   327   00081A  64                 	db	100	;'d'
   328   00081B  69                 	db	105	;'i'
   329   00081C  64                 	db	100	;'d'
   330   00081D  61                 	db	97	;'a'
   331   00081E  20                 	db	32
   332   00081F  65                 	db	101	;'e'
   333   000820  73                 	db	115	;'s'
   334   000821  3A                 	db	58	;':'
   335   000822  20                 	db	32
   336   000823  25                 	db	37
   337   000824  64                 	db	100	;'d'
   338   000825  20                 	db	32
   339   000826  63                 	db	99	;'c'
   340   000827  6D                 	db	109	;'m'
   341   000828  0D                 	db	13
   342   000829  0A                 	db	10
   343   00082A  00                 	db	0
   344   00082B                     STR_1:
   345   00082B  46                 	db	70	;'F'
   346   00082C  61                 	db	97	;'a'
   347   00082D  6C                 	db	108	;'l'
   348   00082E  6C                 	db	108	;'l'
   349   00082F  61                 	db	97	;'a'
   350   000830  20                 	db	32
   351   000831  65                 	db	101	;'e'
   352   000832  6E                 	db	110	;'n'
   353   000833  20                 	db	32
   354   000834  65                 	db	101	;'e'
   355   000835  6C                 	db	108	;'l'
   356   000836  20                 	db	32
   357   000837  73                 	db	115	;'s'
   358   000838  65                 	db	101	;'e'
   359   000839  6E                 	db	110	;'n'
   360   00083A  73                 	db	115	;'s'
   361   00083B  6F                 	db	111	;'o'
   362   00083C  72                 	db	114	;'r'
   363   00083D  0D                 	db	13
   364   00083E  0A                 	db	10
   365   00083F  00                 	db	0
   366   000840  00                 	db	0	; dummy byte at the end
   367   000002                     __activetblptr  equ	2
   368                           
   369                           ; #config settings
   370                           
   371                           	psect	cinit
   372   000B58                     __pcinit:
   373                           	callstack 0
   374   000B58                     start_initialization:
   375                           	callstack 0
   376   000B58                     __initialization:
   377                           	callstack 0
   378                           
   379                           ; Clear objects allocated to COMRAM (2 bytes)
   380   000B58  6A1B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   381   000B5A  6A1A               	clrf	__pbssCOMRAM& (0+255),c
   382   000B5C                     end_of_initialization:
   383                           	callstack 0
   384   000B5C                     __end_of__initialization:
   385                           	callstack 0
   386   000B5C  901C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   387   000B5E  921C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   388   000B60  0E00               	movlw	low (__Lmediumconst shr (0+16))
   389   000B62  6EF8               	movwf	tblptru,c
   390   000B64  0100               	movlb	0
   391   000B66  EFE5  F004         	goto	_main	;jump to C main() function
   392                           
   393                           	psect	bssCOMRAM
   394   00001A                     __pbssCOMRAM:
   395                           	callstack 0
   396   00001A                     _ctimeout:
   397                           	callstack 0
   398   00001A                     	ds	1
   399   00001B                     _etimeout:
   400                           	callstack 0
   401   00001B                     	ds	1
   402                           
   403                           	psect	cstackCOMRAM
   404   000001                     __pcstackCOMRAM:
   405                           	callstack 0
   406   000001                     ?___lwdiv:
   407                           	callstack 0
   408   000001                     Transmitir@BufferT:
   409                           	callstack 0
   410   000001                     putch@data:
   411                           	callstack 0
   412   000001                     ___lbmod@divisor:
   413                           	callstack 0
   414   000001                     ___lwdiv@dividend:
   415                           	callstack 0
   416   000001                     
   417                           ; 1 bytes @ 0x0
   418   000001                     	ds	1
   419   000002                     ___lbmod@dividend:
   420                           	callstack 0
   421   000002                     
   422                           ; 1 bytes @ 0x1
   423   000002                     	ds	1
   424   000003                     ___lbmod@counter:
   425                           	callstack 0
   426   000003                     ___lwdiv@divisor:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x2
   430   000003                     	ds	1
   431   000004                     ___lbmod@rem:
   432                           	callstack 0
   433                           
   434                           ; 1 bytes @ 0x3
   435   000004                     	ds	1
   436   000005                     ___lbdiv@divisor:
   437                           	callstack 0
   438   000005                     ___lwdiv@quotient:
   439                           	callstack 0
   440   000005                     
   441                           ; 1 bytes @ 0x4
   442   000005                     	ds	1
   443   000006                     ___lbdiv@dividend:
   444                           	callstack 0
   445   000006                     
   446                           ; 1 bytes @ 0x5
   447   000006                     	ds	1
   448   000007                     ___lbdiv@counter:
   449                           	callstack 0
   450   000007                     ___lwdiv@counter:
   451                           	callstack 0
   452                           
   453                           ; 1 bytes @ 0x6
   454   000007                     	ds	1
   455   000008                     ?___lwmod:
   456                           	callstack 0
   457   000008                     MedirDistancia@aux:
   458                           	callstack 0
   459   000008                     ___lbdiv@quotient:
   460                           	callstack 0
   461   000008                     ___lwmod@dividend:
   462                           	callstack 0
   463   000008                     
   464                           ; 1 bytes @ 0x7
   465   000008                     	ds	2
   466   00000A                     ___lwmod@divisor:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0x9
   470   00000A                     	ds	2
   471   00000C                     ___lwmod@counter:
   472                           	callstack 0
   473   00000C                     
   474                           ; 1 bytes @ 0xB
   475   00000C                     	ds	1
   476   00000D                     ?_printf:
   477                           	callstack 0
   478   00000D                     printf@f:
   479                           	callstack 0
   480                           
   481                           ; 1 bytes @ 0xC
   482   00000D                     	ds	3
   483   000010                     ??_printf:
   484                           
   485                           ; 1 bytes @ 0xF
   486   000010                     	ds	1
   487   000011                     printf@ap:
   488                           	callstack 0
   489                           
   490                           ; 1 bytes @ 0x10
   491   000011                     	ds	1
   492   000012                     printf@flag:
   493                           	callstack 0
   494                           
   495                           ; 1 bytes @ 0x11
   496   000012                     	ds	1
   497   000013                     printf@prec:
   498                           	callstack 0
   499                           
   500                           ; 1 bytes @ 0x12
   501   000013                     	ds	1
   502   000014                     printf@val:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x13
   506   000014                     	ds	2
   507   000016                     printf@c:
   508                           	callstack 0
   509                           
   510                           ; 1 bytes @ 0x15
   511   000016                     	ds	1
   512   000017                     ??_main:
   513                           
   514                           ; 1 bytes @ 0x16
   515   000017                     	ds	2
   516   000019                     main@d:
   517                           	callstack 0
   518                           
   519                           ; 1 bytes @ 0x18
   520   000019                     	ds	1
   521                           
   522 ;;
   523 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   524 ;;
   525 ;; *************** function _main *****************
   526 ;; Defined at:
   527 ;;		line 14 in file "untrasonido.c"
   528 ;; Parameters:    Size  Location     Type
   529 ;;		None
   530 ;; Auto vars:     Size  Location     Type
   531 ;;  d               1   24[COMRAM] unsigned char 
   532 ;; Return value:  Size  Location     Type
   533 ;;                  1    wreg      void 
   534 ;; Registers used:
   535 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   536 ;; Tracked objects:
   537 ;;		On entry : 0/0
   538 ;;		On exit  : 0/0
   539 ;;		Unchanged: 0/0
   540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   541 ;;      Params:         0       0       0       0       0       0       0       0       0
   542 ;;      Locals:         1       0       0       0       0       0       0       0       0
   543 ;;      Temps:          2       0       0       0       0       0       0       0       0
   544 ;;      Totals:         3       0       0       0       0       0       0       0       0
   545 ;;Total ram usage:        3 bytes
   546 ;; Hardware stack levels required when called: 3
   547 ;; This function calls:
   548 ;;		_MedirDistancia
   549 ;;		_Transmitir
   550 ;;		___lbdiv
   551 ;;		___lbmod
   552 ;;		___lwdiv
   553 ;;		_printf
   554 ;; This function is called by:
   555 ;;		Startup code after reset
   556 ;; This function uses a non-reentrant model
   557 ;;
   558                           
   559                           	psect	text0
   560   0009CA                     __ptext0:
   561                           	callstack 0
   562   0009CA                     _main:
   563                           	callstack 28
   564                           
   565                           ;untrasonido.c: 16: unsigned char d;;untrasonido.c: 19: TRISC0=0;
   566                           
   567                           ;incstack = 0
   568   0009CA  9094               	bcf	3988,0,c	;volatile
   569                           
   570                           ;untrasonido.c: 20: TRISA1=0;
   571   0009CC  9292               	bcf	3986,1,c	;volatile
   572                           
   573                           ;untrasonido.c: 21: LATC0=0;
   574   0009CE  908B               	bcf	3979,0,c	;volatile
   575                           
   576                           ;untrasonido.c: 22: LATD0=0;
   577   0009D0  908C               	bcf	3980,0,c	;volatile
   578                           
   579                           ;untrasonido.c: 23: TXSTA=0b00100100;
   580   0009D2  0E24               	movlw	36
   581   0009D4  6EAC               	movwf	172,c	;volatile
   582                           
   583                           ;untrasonido.c: 24: RCSTA=0b10000000;
   584   0009D6  0E80               	movlw	128
   585   0009D8  6EAB               	movwf	171,c	;volatile
   586                           
   587                           ;untrasonido.c: 25: BAUDCON=0b00001000;
   588   0009DA  0E08               	movlw	8
   589   0009DC  6EB8               	movwf	184,c	;volatile
   590                           
   591                           ;untrasonido.c: 26: SPBRG=25;
   592   0009DE  0E19               	movlw	25
   593   0009E0  6EAF               	movwf	175,c	;volatile
   594                           
   595                           ;untrasonido.c: 27: TMR0=3036;
   596   0009E2  0E0B               	movlw	11
   597   0009E4  6ED7               	movwf	215,c	;volatile
   598   0009E6  0EDC               	movlw	220
   599   0009E8  6ED6               	movwf	214,c	;volatile
   600                           
   601                           ;untrasonido.c: 28: T0CON=0b00001000;
   602   0009EA  0E08               	movlw	8
   603   0009EC  6ED5               	movwf	213,c	;volatile
   604                           
   605                           ;untrasonido.c: 29: T1CON=0b10000000;
   606   0009EE  0E80               	movlw	128
   607   0009F0  6ECD               	movwf	205,c	;volatile
   608                           
   609                           ;untrasonido.c: 30: TMR0IF=0;
   610   0009F2  94F2               	bcf	4082,2,c	;volatile
   611                           
   612                           ;untrasonido.c: 31: TMR0IE=1;
   613   0009F4  8AF2               	bsf	4082,5,c	;volatile
   614                           
   615                           ;untrasonido.c: 32: GIE=1;
   616   0009F6  8EF2               	bsf	4082,7,c	;volatile
   617                           
   618                           ;untrasonido.c: 33: TMR0ON=1;
   619   0009F8  8ED5               	bsf	4053,7,c	;volatile
   620   0009FA                     l1300:
   621                           
   622                           ;untrasonido.c: 36: d=MedirDistancia();
   623   0009FA  ECAD  F004         	call	_MedirDistancia	;wreg free
   624   0009FE  6E19               	movwf	main@d^0,c
   625                           
   626                           ;untrasonido.c: 37: if(d==0)
   627   000A00  5019               	movf	main@d^0,w,c
   628   000A02  A4D8               	btfss	status,2,c
   629   000A04  D005               	goto	l1306
   630                           
   631                           ;untrasonido.c: 38: printf("Falla en el sensor\r\n");
   632   000A06  0E2B               	movlw	low STR_1
   633   000A08  6E0D               	movwf	printf@f^0,c
   634   000A0A  EC21  F004         	call	_printf	;wreg free
   635   000A0E  D007               	goto	l1308
   636   000A10                     l1306:
   637                           
   638                           ;untrasonido.c: 39: else;untrasonido.c: 40: printf("La distancia medida es: %d cm\r\n",d
      +                          );
   639   000A10  0E0B               	movlw	low STR_2
   640   000A12  6E0D               	movwf	printf@f^0,c
   641   000A14  C019  F00E         	movff	main@d,?_printf+1
   642   000A18  6A0F               	clrf	(?_printf+2)^0,c
   643   000A1A  EC21  F004         	call	_printf	;wreg free
   644   000A1E                     l1308:
   645                           
   646                           ;untrasonido.c: 41: _delay((unsigned long)((1000)*(1000000/4000.0)));
   647   000A1E  0E02               	movlw	2
   648   000A20  6E18               	movwf	(??_main+1)^0,c
   649   000A22  0E45               	movlw	69
   650   000A24  6E17               	movwf	??_main^0,c
   651   000A26  0EAA               	movlw	170
   652   000A28                     u577:
   653   000A28  2EE8               	decfsz	wreg,f,c
   654   000A2A  D7FE               	bra	u577
   655   000A2C  2E17               	decfsz	??_main^0,f,c
   656   000A2E  D7FC               	bra	u577
   657   000A30  2E18               	decfsz	(??_main+1)^0,f,c
   658   000A32  D7FA               	bra	u577
   659   000A34  D7E2               	goto	l1300
   660   000A36                     __end_of_main:
   661                           	callstack 0
   662                           
   663 ;; *************** function _printf *****************
   664 ;; Defined at:
   665 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\doprnt.c"
   666 ;; Parameters:    Size  Location     Type
   667 ;;  f               1   12[COMRAM] PTR const unsigned char 
   668 ;;		 -> STR_2(32), STR_1(21), 
   669 ;; Auto vars:     Size  Location     Type
   670 ;;  tmpval          4    0        struct .
   671 ;;  val             2   19[COMRAM] unsigned int 
   672 ;;  cp              2    0        PTR const unsigned char 
   673 ;;  len             2    0        unsigned int 
   674 ;;  c               1   21[COMRAM] unsigned char 
   675 ;;  prec            1   18[COMRAM] char 
   676 ;;  flag            1   17[COMRAM] unsigned char 
   677 ;;  ap              1   16[COMRAM] PTR void [1]
   678 ;;		 -> ?_printf(2), 
   679 ;; Return value:  Size  Location     Type
   680 ;;                  2   12[COMRAM] int 
   681 ;; Registers used:
   682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   683 ;; Tracked objects:
   684 ;;		On entry : 0/0
   685 ;;		On exit  : 0/0
   686 ;;		Unchanged: 0/0
   687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   688 ;;      Params:         3       0       0       0       0       0       0       0       0
   689 ;;      Locals:         6       0       0       0       0       0       0       0       0
   690 ;;      Temps:          1       0       0       0       0       0       0       0       0
   691 ;;      Totals:        10       0       0       0       0       0       0       0       0
   692 ;;Total ram usage:       10 bytes
   693 ;; Hardware stack levels used: 1
   694 ;; Hardware stack levels required when called: 2
   695 ;; This function calls:
   696 ;;		___lwdiv
   697 ;;		___lwmod
   698 ;;		_putch
   699 ;; This function is called by:
   700 ;;		_main
   701 ;; This function uses a non-reentrant model
   702 ;;
   703                           
   704                           	psect	text1
   705   000842                     __ptext1:
   706                           	callstack 0
   707   000842                     _printf:
   708                           	callstack 28
   709                           
   710                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
   711                           
   712                           ;incstack = 0
   713   000842  0E0E               	movlw	low (?_printf+1)
   714   000844  6E11               	movwf	printf@ap^0,c
   715                           
   716                           ;doprnt.c: 553: while((c = *f++)) {
   717   000846  D07B               	goto	u500
   718   000848                     l1198:
   719                           
   720                           ;doprnt.c: 555: if(c != '%')
   721   000848  0E25               	movlw	37
   722   00084A  1816               	xorwf	printf@c^0,w,c
   723   00084C  B4D8               	btfsc	status,2,c
   724   00084E  D004               	goto	l133
   725                           
   726                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
   727   000850  5016               	movf	printf@c^0,w,c
   728   000852  ECB5  F005         	call	_putch
   729                           
   730                           ;doprnt.c: 559: continue;
   731   000856  D073               	goto	u500
   732   000858                     l133:
   733                           
   734                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
   735   000858  6A12               	clrf	printf@flag^0,c
   736                           
   737                           ;doprnt.c: 661: switch(c = *f++) {
   738   00085A  2A0D               	incf	printf@f^0,f,c
   739   00085C  040D               	decf	printf@f^0,w,c
   740   00085E  6E10               	movwf	??_printf^0,c
   741   000860  C010  FFF6         	movff	??_printf,tblptrl
   742   000864                     	if	1	;There is more than 1 active tblptr byte
   743   000864  0E08               	movlw	high __smallconst
   744   000866  6EF7               	movwf	tblptrh,c
   745   000868                     	endif
   746   000868                     	if	0	;tblptru may be non-zero
   747   000868                     	endif
   748   000868                     	if	0	;tblptru may be non-zero
   749   000868                     	endif
   750   000868  0008               	tblrd		*
   751   00086A  CFF5 F016          	movff	tablat,printf@c
   752   00086E  5016               	movf	printf@c^0,w,c
   753                           
   754                           ; Switch size 1, requested type "simple"
   755                           ; Number of cases is 3, Range of values is 0 to 105
   756                           ; switch strategies available:
   757                           ; Name         Instructions Cycles
   758                           ; simple_byte           10     6 (average)
   759                           ;	Chosen strategy is simple_byte
   760   000870  0A00               	xorlw	0	; case 0
   761   000872  B4D8               	btfsc	status,2,c
   762   000874  0012               	return	
   763   000876  0A64               	xorlw	100	; case 100
   764   000878  B4D8               	btfsc	status,2,c
   765   00087A  D003               	goto	l1206
   766   00087C  0A0D               	xorlw	13	; case 105
   767   00087E  A4D8               	btfss	status,2,c
   768   000880  D05E               	goto	u500
   769   000882                     l1206:
   770                           
   771                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
   772   000882  5011               	movf	printf@ap^0,w,c
   773   000884  6ED9               	movwf	fsr2l,c
   774   000886  6ADA               	clrf	fsr2h,c
   775   000888  CFDE F014          	movff	postinc2,printf@val
   776   00088C  CFDD F015          	movff	postdec2,printf@val+1
   777   000890  0E02               	movlw	2
   778   000892  2611               	addwf	printf@ap^0,f,c
   779                           
   780                           ;doprnt.c: 1287: if((int)val < 0) {
   781   000894  AE15               	btfss	(printf@val+1)^0,7,c
   782   000896  D006               	goto	l1216
   783                           
   784                           ;doprnt.c: 1288: flag |= 0x03;
   785   000898  0E03               	movlw	3
   786   00089A  1212               	iorwf	printf@flag^0,f,c
   787                           
   788                           ;doprnt.c: 1289: val = -val;
   789   00089C  6C14               	negf	printf@val^0,c
   790   00089E  1E15               	comf	(printf@val+1)^0,f,c
   791   0008A0  B0D8               	btfsc	status,0,c
   792   0008A2  2A15               	incf	(printf@val+1)^0,f,c
   793   0008A4                     l1216:
   794                           
   795                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
   796   0008A4  0E01               	movlw	1
   797   0008A6  6E16               	movwf	printf@c^0,c
   798   0008A8                     l1222:
   799                           
   800                           ;doprnt.c: 1332: if(val < dpowers[c])
   801   0008A8  5016               	movf	printf@c^0,w,c
   802   0008AA  0D02               	mullw	2
   803   0008AC  50F3               	movf	243,w,c
   804   0008AE  0F01               	addlw	low _dpowers
   805   0008B0  6E10               	movwf	??_printf^0,c
   806   0008B2  C010  FFF6         	movff	??_printf,tblptrl
   807   0008B6                     	if	1	;There is more than 1 active tblptr byte
   808   0008B6  0E08               	movlw	high __smallconst
   809   0008B8  6EF7               	movwf	tblptrh,c
   810   0008BA                     	endif
   811   0008BA                     	if	0	;tblptru may be non-zero
   812   0008BA                     	endif
   813   0008BA                     	if	0	;tblptru may be non-zero
   814   0008BA                     	endif
   815   0008BA  0009               	tblrd		*+
   816   0008BC  50F5               	movf	tablat,w,c
   817   0008BE  5C14               	subwf	printf@val^0,w,c
   818   0008C0  0009               	tblrd		*+
   819   0008C2  50F5               	movf	tablat,w,c
   820   0008C4  5815               	subwfb	(printf@val+1)^0,w,c
   821   0008C6  A0D8               	btfss	status,0,c
   822   0008C8  D005               	goto	u480
   823   0008CA  2A16               	incf	printf@c^0,f,c
   824   0008CC  0E05               	movlw	5
   825   0008CE  1816               	xorwf	printf@c^0,w,c
   826   0008D0  A4D8               	btfss	status,2,c
   827   0008D2  D7EA               	goto	l1222
   828   0008D4                     u480:
   829                           
   830                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
   831   0008D4  C012  F010         	movff	printf@flag,??_printf
   832   0008D8  0E03               	movlw	3
   833   0008DA  1610               	andwf	??_printf^0,f,c
   834   0008DC  B4D8               	btfsc	status,2,c
   835   0008DE  D003               	goto	l1234
   836                           
   837                           ;doprnt.c: 1465: (putch('-') );
   838   0008E0  0E2D               	movlw	45
   839   0008E2  ECB5  F005         	call	_putch
   840   0008E6                     l1234:
   841                           
   842                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
   843   0008E6  C016  F013         	movff	printf@c,printf@prec
   844                           
   845                           ;doprnt.c: 1500: while(prec--) {
   846   0008EA  D025               	goto	l1240
   847   0008EC                     l1236:
   848                           
   849                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
   850   0008EC  5013               	movf	printf@prec^0,w,c
   851   0008EE  0D02               	mullw	2
   852   0008F0  50F3               	movf	243,w,c
   853   0008F2  0F01               	addlw	low _dpowers
   854   0008F4  6E10               	movwf	??_printf^0,c
   855   0008F6  C010  FFF6         	movff	??_printf,tblptrl
   856   0008FA                     	if	1	;There is more than 1 active tblptr byte
   857   0008FA  0E08               	movlw	high __smallconst
   858   0008FC  6EF7               	movwf	tblptrh,c
   859   0008FE                     	endif
   860   0008FE                     	if	0	;tblptru may be non-zero
   861   0008FE                     	endif
   862   0008FE                     	if	0	;tblptru may be non-zero
   863   0008FE                     	endif
   864   0008FE  0009               	tblrd		*+
   865   000900  CFF5 F003          	movff	tablat,___lwdiv@divisor
   866   000904  000A               	tblrd		*-
   867   000906  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
   868   00090A  C014  F001         	movff	printf@val,___lwdiv@dividend
   869   00090E  C015  F002         	movff	printf@val+1,___lwdiv@dividend+1
   870   000912  EC1B  F005         	call	___lwdiv	;wreg free
   871   000916  C001  F008         	movff	?___lwdiv,___lwmod@dividend
   872   00091A  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
   873   00091E  0E00               	movlw	0
   874   000920  6E0B               	movwf	(___lwmod@divisor+1)^0,c
   875   000922  0E0A               	movlw	10
   876   000924  6E0A               	movwf	___lwmod@divisor^0,c
   877   000926  EC44  F005         	call	___lwmod	;wreg free
   878   00092A  5008               	movf	?___lwmod^0,w,c
   879   00092C  0F30               	addlw	48
   880   00092E  6E16               	movwf	printf@c^0,c
   881                           
   882                           ;doprnt.c: 1549: };doprnt.c: 1550: (putch(c) );
   883   000930  5016               	movf	printf@c^0,w,c
   884   000932  ECB5  F005         	call	_putch
   885   000936                     l1240:
   886   000936  0613               	decf	printf@prec^0,f,c
   887   000938  2813               	incf	printf@prec^0,w,c
   888   00093A  A4D8               	btfss	status,2,c
   889   00093C  D7D7               	goto	l1236
   890   00093E                     u500:
   891   00093E  2A0D               	incf	printf@f^0,f,c
   892   000940  040D               	decf	printf@f^0,w,c
   893   000942  6E10               	movwf	??_printf^0,c
   894   000944  C010  FFF6         	movff	??_printf,tblptrl
   895   000948                     	if	1	;There is more than 1 active tblptr byte
   896   000948  0E08               	movlw	high __smallconst
   897   00094A  6EF7               	movwf	tblptrh,c
   898   00094C                     	endif
   899   00094C                     	if	0	;tblptru may be non-zero
   900   00094C                     	endif
   901   00094C                     	if	0	;tblptru may be non-zero
   902   00094C                     	endif
   903   00094C  0008               	tblrd		*
   904   00094E  CFF5 F016          	movff	tablat,printf@c
   905   000952  5016               	movf	printf@c^0,w,c
   906   000954  B4D8               	btfsc	status,2,c
   907   000956  0012               	return	
   908   000958  D777               	goto	l1198
   909   00095A                     __end_of_printf:
   910                           	callstack 0
   911                           
   912 ;; *************** function _putch *****************
   913 ;; Defined at:
   914 ;;		line 99 in file "untrasonido.c"
   915 ;; Parameters:    Size  Location     Type
   916 ;;  data            1    wreg     unsigned char 
   917 ;; Auto vars:     Size  Location     Type
   918 ;;  data            1    0[COMRAM] unsigned char 
   919 ;; Return value:  Size  Location     Type
   920 ;;                  1    wreg      void 
   921 ;; Registers used:
   922 ;;		wreg
   923 ;; Tracked objects:
   924 ;;		On entry : 0/0
   925 ;;		On exit  : 0/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   928 ;;      Params:         0       0       0       0       0       0       0       0       0
   929 ;;      Locals:         1       0       0       0       0       0       0       0       0
   930 ;;      Temps:          0       0       0       0       0       0       0       0       0
   931 ;;      Totals:         1       0       0       0       0       0       0       0       0
   932 ;;Total ram usage:        1 bytes
   933 ;; Hardware stack levels used: 1
   934 ;; Hardware stack levels required when called: 1
   935 ;; This function calls:
   936 ;;		Nothing
   937 ;; This function is called by:
   938 ;;		_printf
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           	psect	text2
   943   000B6A                     __ptext2:
   944                           	callstack 0
   945   000B6A                     _putch:
   946                           	callstack 28
   947                           
   948                           ;incstack = 0
   949                           ;putch@data stored from wreg
   950   000B6A  6E01               	movwf	putch@data^0,c
   951   000B6C                     
   952                           ;untrasonido.c: 100: while(TRMT==0);
   953   000B6C  A2AC               	btfss	4012,1,c	;volatile
   954   000B6E  D7FE               	goto	l898
   955                           
   956                           ;untrasonido.c: 101: TXREG=data;
   957   000B70  C001  FFAD         	movff	putch@data,4013	;volatile
   958   000B74  0012               	return		;funcret
   959   000B76                     __end_of_putch:
   960                           	callstack 0
   961                           
   962 ;; *************** function ___lwmod *****************
   963 ;; Defined at:
   964 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lwmod.c"
   965 ;; Parameters:    Size  Location     Type
   966 ;;  dividend        2    7[COMRAM] unsigned int 
   967 ;;  divisor         2    9[COMRAM] unsigned int 
   968 ;; Auto vars:     Size  Location     Type
   969 ;;  counter         1   11[COMRAM] unsigned char 
   970 ;; Return value:  Size  Location     Type
   971 ;;                  2    7[COMRAM] unsigned int 
   972 ;; Registers used:
   973 ;;		wreg, status,2, status,0
   974 ;; Tracked objects:
   975 ;;		On entry : 0/0
   976 ;;		On exit  : 0/0
   977 ;;		Unchanged: 0/0
   978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   979 ;;      Params:         4       0       0       0       0       0       0       0       0
   980 ;;      Locals:         1       0       0       0       0       0       0       0       0
   981 ;;      Temps:          0       0       0       0       0       0       0       0       0
   982 ;;      Totals:         5       0       0       0       0       0       0       0       0
   983 ;;Total ram usage:        5 bytes
   984 ;; Hardware stack levels used: 1
   985 ;; Hardware stack levels required when called: 1
   986 ;; This function calls:
   987 ;;		Nothing
   988 ;; This function is called by:
   989 ;;		_printf
   990 ;; This function uses a non-reentrant model
   991 ;;
   992                           
   993                           	psect	text3
   994   000A88                     __ptext3:
   995                           	callstack 0
   996   000A88                     ___lwmod:
   997                           	callstack 28
   998                           
   999                           ;incstack = 0
  1000   000A88  500A               	movf	___lwmod@divisor^0,w,c
  1001   000A8A  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
  1002   000A8C  B4D8               	btfsc	status,2,c
  1003   000A8E  D018               	goto	l642
  1004   000A90  0E01               	movlw	1
  1005   000A92  6E0C               	movwf	___lwmod@counter^0,c
  1006   000A94  D004               	goto	l1152
  1007   000A96                     l1150:
  1008   000A96  90D8               	bcf	status,0,c
  1009   000A98  360A               	rlcf	___lwmod@divisor^0,f,c
  1010   000A9A  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  1011   000A9C  2A0C               	incf	___lwmod@counter^0,f,c
  1012   000A9E                     l1152:
  1013   000A9E  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  1014   000AA0  D7FA               	goto	l1150
  1015   000AA2                     u360:
  1016   000AA2  500A               	movf	___lwmod@divisor^0,w,c
  1017   000AA4  5C08               	subwf	___lwmod@dividend^0,w,c
  1018   000AA6  500B               	movf	(___lwmod@divisor+1)^0,w,c
  1019   000AA8  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  1020   000AAA  A0D8               	btfss	status,0,c
  1021   000AAC  D004               	goto	l1158
  1022   000AAE  500A               	movf	___lwmod@divisor^0,w,c
  1023   000AB0  5E08               	subwf	___lwmod@dividend^0,f,c
  1024   000AB2  500B               	movf	(___lwmod@divisor+1)^0,w,c
  1025   000AB4  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  1026   000AB6                     l1158:
  1027   000AB6  90D8               	bcf	status,0,c
  1028   000AB8  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  1029   000ABA  320A               	rrcf	___lwmod@divisor^0,f,c
  1030   000ABC  2E0C               	decfsz	___lwmod@counter^0,f,c
  1031   000ABE  D7F1               	goto	u360
  1032   000AC0                     l642:
  1033   000AC0  C008  F008         	movff	___lwmod@dividend,?___lwmod
  1034   000AC4  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  1035   000AC8  0012               	return		;funcret
  1036   000ACA                     __end_of___lwmod:
  1037                           	callstack 0
  1038                           
  1039 ;; *************** function ___lbmod *****************
  1040 ;; Defined at:
  1041 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbmod.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;  dividend        1    wreg     unsigned char 
  1044 ;;  divisor         1    0[COMRAM] unsigned char 
  1045 ;; Auto vars:     Size  Location     Type
  1046 ;;  dividend        1    1[COMRAM] unsigned char 
  1047 ;;  rem             1    3[COMRAM] unsigned char 
  1048 ;;  counter         1    2[COMRAM] unsigned char 
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  1    wreg      unsigned char 
  1051 ;; Registers used:
  1052 ;;		wreg, status,2, status,0
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1058 ;;      Params:         1       0       0       0       0       0       0       0       0
  1059 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1060 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1061 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1062 ;;Total ram usage:        4 bytes
  1063 ;; Hardware stack levels used: 1
  1064 ;; Hardware stack levels required when called: 1
  1065 ;; This function calls:
  1066 ;;		Nothing
  1067 ;; This function is called by:
  1068 ;;		_main
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           	psect	text4
  1073   000B30                     __ptext4:
  1074                           	callstack 0
  1075   000B30                     ___lbmod:
  1076                           	callstack 29
  1077                           
  1078                           ;incstack = 0
  1079                           ;___lbmod@dividend stored from wreg
  1080   000B30  6E02               	movwf	___lbmod@dividend^0,c
  1081   000B32  0E08               	movlw	8
  1082   000B34  6E03               	movwf	___lbmod@counter^0,c
  1083   000B36  6A04               	clrf	___lbmod@rem^0,c
  1084   000B38                     l1274:
  1085   000B38  90D8               	bcf	status,0,c
  1086   000B3A  3402               	rlcf	___lbmod@dividend^0,w,c
  1087   000B3C  3404               	rlcf	___lbmod@rem^0,w,c
  1088   000B3E  6E04               	movwf	___lbmod@rem^0,c
  1089   000B40  90D8               	bcf	status,0,c
  1090   000B42  3602               	rlcf	___lbmod@dividend^0,f,c
  1091   000B44  5001               	movf	___lbmod@divisor^0,w,c
  1092   000B46  5C04               	subwf	___lbmod@rem^0,w,c
  1093   000B48  A0D8               	btfss	status,0,c
  1094   000B4A  D002               	goto	l1282
  1095   000B4C  5001               	movf	___lbmod@divisor^0,w,c
  1096   000B4E  5E04               	subwf	___lbmod@rem^0,f,c
  1097   000B50                     l1282:
  1098   000B50  2E03               	decfsz	___lbmod@counter^0,f,c
  1099   000B52  D7F2               	goto	l1274
  1100   000B54  5004               	movf	___lbmod@rem^0,w,c
  1101   000B56  0012               	return		;funcret
  1102   000B58                     __end_of___lbmod:
  1103                           	callstack 0
  1104                           
  1105 ;; *************** function ___lbdiv *****************
  1106 ;; Defined at:
  1107 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbdiv.c"
  1108 ;; Parameters:    Size  Location     Type
  1109 ;;  dividend        1    wreg     unsigned char 
  1110 ;;  divisor         1    4[COMRAM] unsigned char 
  1111 ;; Auto vars:     Size  Location     Type
  1112 ;;  dividend        1    5[COMRAM] unsigned char 
  1113 ;;  quotient        1    7[COMRAM] unsigned char 
  1114 ;;  counter         1    6[COMRAM] unsigned char 
  1115 ;; Return value:  Size  Location     Type
  1116 ;;                  1    wreg      unsigned char 
  1117 ;; Registers used:
  1118 ;;		wreg, status,2, status,0
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1124 ;;      Params:         1       0       0       0       0       0       0       0       0
  1125 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1126 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1127 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1128 ;;Total ram usage:        4 bytes
  1129 ;; Hardware stack levels used: 1
  1130 ;; Hardware stack levels required when called: 1
  1131 ;; This function calls:
  1132 ;;		Nothing
  1133 ;; This function is called by:
  1134 ;;		_main
  1135 ;; This function uses a non-reentrant model
  1136 ;;
  1137                           
  1138                           	psect	text5
  1139   000ACA                     __ptext5:
  1140                           	callstack 0
  1141   000ACA                     ___lbdiv:
  1142                           	callstack 29
  1143                           
  1144                           ;incstack = 0
  1145                           ;___lbdiv@dividend stored from wreg
  1146   000ACA  6E06               	movwf	___lbdiv@dividend^0,c
  1147   000ACC  6A08               	clrf	___lbdiv@quotient^0,c
  1148   000ACE  5005               	movf	___lbdiv@divisor^0,w,c
  1149   000AD0  B4D8               	btfsc	status,2,c
  1150   000AD2  D015               	goto	l1266
  1151   000AD4  0E01               	movlw	1
  1152   000AD6  6E07               	movwf	___lbdiv@counter^0,c
  1153   000AD8  D003               	goto	l1254
  1154   000ADA                     l1250:
  1155   000ADA  90D8               	bcf	status,0,c
  1156   000ADC  3605               	rlcf	___lbdiv@divisor^0,f,c
  1157   000ADE  2A07               	incf	___lbdiv@counter^0,f,c
  1158   000AE0                     l1254:
  1159   000AE0  AE05               	btfss	___lbdiv@divisor^0,7,c
  1160   000AE2  D7FB               	goto	l1250
  1161   000AE4                     u530:
  1162   000AE4  90D8               	bcf	status,0,c
  1163   000AE6  3608               	rlcf	___lbdiv@quotient^0,f,c
  1164   000AE8  5005               	movf	___lbdiv@divisor^0,w,c
  1165   000AEA  5C06               	subwf	___lbdiv@dividend^0,w,c
  1166   000AEC  A0D8               	btfss	status,0,c
  1167   000AEE  D003               	goto	l1262
  1168   000AF0  5005               	movf	___lbdiv@divisor^0,w,c
  1169   000AF2  5E06               	subwf	___lbdiv@dividend^0,f,c
  1170   000AF4  8008               	bsf	___lbdiv@quotient^0,0,c
  1171   000AF6                     l1262:
  1172   000AF6  90D8               	bcf	status,0,c
  1173   000AF8  3205               	rrcf	___lbdiv@divisor^0,f,c
  1174   000AFA  2E07               	decfsz	___lbdiv@counter^0,f,c
  1175   000AFC  D7F3               	goto	u530
  1176   000AFE                     l1266:
  1177   000AFE  5008               	movf	___lbdiv@quotient^0,w,c
  1178   000B00  0012               	return		;funcret
  1179   000B02                     __end_of___lbdiv:
  1180                           	callstack 0
  1181                           
  1182 ;; *************** function _Transmitir *****************
  1183 ;; Defined at:
  1184 ;;		line 95 in file "untrasonido.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;  BufferT         1    wreg     unsigned char 
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;  BufferT         1    0[COMRAM] unsigned char 
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  1    wreg      void 
  1191 ;; Registers used:
  1192 ;;		wreg
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1198 ;;      Params:         0       0       0       0       0       0       0       0       0
  1199 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1200 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1201 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1202 ;;Total ram usage:        1 bytes
  1203 ;; Hardware stack levels used: 1
  1204 ;; Hardware stack levels required when called: 1
  1205 ;; This function calls:
  1206 ;;		Nothing
  1207 ;; This function is called by:
  1208 ;;		_main
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           	psect	text6
  1213   000B76                     __ptext6:
  1214                           	callstack 0
  1215   000B76                     _Transmitir:
  1216                           	callstack 29
  1217                           
  1218                           ;incstack = 0
  1219                           ;Transmitir@BufferT stored from wreg
  1220   000B76  6E01               	movwf	Transmitir@BufferT^0,c
  1221   000B78                     
  1222                           ;untrasonido.c: 96: while(TRMT==0);
  1223   000B78  A2AC               	btfss	4012,1,c	;volatile
  1224   000B7A  D7FE               	goto	l1022
  1225                           
  1226                           ;untrasonido.c: 97: TXREG=BufferT;
  1227   000B7C  C001  FFAD         	movff	Transmitir@BufferT,4013	;volatile
  1228   000B80  0012               	return		;funcret
  1229   000B82                     __end_of_Transmitir:
  1230                           	callstack 0
  1231                           
  1232 ;; *************** function _MedirDistancia *****************
  1233 ;; Defined at:
  1234 ;;		line 69 in file "untrasonido.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;		None
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;  aux             1    7[COMRAM] unsigned char 
  1239 ;; Return value:  Size  Location     Type
  1240 ;;                  1    wreg      unsigned char 
  1241 ;; Registers used:
  1242 ;;		wreg, status,2, status,0, cstack
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1248 ;;      Params:         0       0       0       0       0       0       0       0       0
  1249 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1250 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1251 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1252 ;;Total ram usage:        1 bytes
  1253 ;; Hardware stack levels used: 1
  1254 ;; Hardware stack levels required when called: 2
  1255 ;; This function calls:
  1256 ;;		___lwdiv
  1257 ;; This function is called by:
  1258 ;;		_main
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262                           	psect	text7
  1263   00095A                     __ptext7:
  1264                           	callstack 0
  1265   00095A                     _MedirDistancia:
  1266                           	callstack 28
  1267                           
  1268                           ;untrasonido.c: 71: CCP2CON=0b00000100;
  1269                           
  1270                           ;incstack = 0
  1271   00095A  0E04               	movlw	4
  1272   00095C  6EBA               	movwf	186,c	;volatile
  1273                           
  1274                           ;untrasonido.c: 72: TMR1=0;
  1275   00095E  0E00               	movlw	0
  1276   000960  6ECF               	movwf	207,c	;volatile
  1277   000962  0E00               	movlw	0
  1278   000964  6ECE               	movwf	206,c	;volatile
  1279                           
  1280                           ;untrasonido.c: 73: CCP2IF=0;
  1281   000966  90A1               	bcf	4001,0,c	;volatile
  1282                           
  1283                           ;untrasonido.c: 74: RC0=1;
  1284   000968  8082               	bsf	3970,0,c	;volatile
  1285                           
  1286                           ;untrasonido.c: 75: _delay((unsigned long)((10)*(1000000/4000000.0)));
  1287   00096A  D000               	nop2		;2 cycle nop
  1288                           
  1289                           ;untrasonido.c: 76: RC0=0;
  1290   00096C  9082               	bcf	3970,0,c	;volatile
  1291                           
  1292                           ;untrasonido.c: 77: etimeout=1;
  1293   00096E  0E01               	movlw	1
  1294   000970  6E1B               	movwf	_etimeout^0,c
  1295   000972                     l86:
  1296   000972  B282               	btfsc	3970,1,c	;volatile
  1297   000974  D003               	goto	u390
  1298   000976  041B               	decf	_etimeout^0,w,c
  1299   000978  B4D8               	btfsc	status,2,c
  1300   00097A  D7FB               	goto	l86
  1301   00097C                     u390:
  1302                           
  1303                           ;untrasonido.c: 80: if(etimeout==0){
  1304   00097C  501B               	movf	_etimeout^0,w,c
  1305   00097E  A4D8               	btfss	status,2,c
  1306   000980  D002               	goto	l91
  1307                           
  1308                           ;untrasonido.c: 81: return 0;
  1309   000982  0E00               	movlw	0
  1310   000984  0012               	return	
  1311   000986                     l91:
  1312                           
  1313                           ;untrasonido.c: 82: };untrasonido.c: 83: TMR1ON=1;
  1314   000986  80CD               	bsf	4045,0,c	;volatile
  1315   000988                     l93:
  1316   000988  B0A1               	btfsc	4001,0,c	;volatile
  1317   00098A  D002               	goto	u420
  1318   00098C  A09E               	btfss	3998,0,c	;volatile
  1319   00098E  D7FC               	goto	l93
  1320   000990                     u420:
  1321                           
  1322                           ;untrasonido.c: 85: TMR1ON=0;
  1323   000990  90CD               	bcf	4045,0,c	;volatile
  1324                           
  1325                           ;untrasonido.c: 86: if(TMR1IF==1)
  1326   000992  A09E               	btfss	3998,0,c	;volatile
  1327   000994  D002               	goto	l1186
  1328                           
  1329                           ;untrasonido.c: 87: aux=255;
  1330   000996  6808               	setf	MedirDistancia@aux^0,c
  1331   000998  D016               	goto	l1192
  1332   00099A                     l1186:
  1333                           
  1334                           ;untrasonido.c: 88: else{;untrasonido.c: 89: if(CCPR2>=3556)
  1335   00099A  0EE4               	movlw	228
  1336   00099C  5CBB               	subwf	187,w,c	;volatile
  1337   00099E  0E0D               	movlw	13
  1338   0009A0  58BC               	subwfb	188,w,c	;volatile
  1339   0009A2  A0D8               	btfss	status,0,c
  1340   0009A4  D004               	goto	l1190
  1341                           
  1342                           ;untrasonido.c: 90: CCPR2=3556;
  1343   0009A6  0E0D               	movlw	13
  1344   0009A8  6EBC               	movwf	188,c	;volatile
  1345   0009AA  0EE4               	movlw	228
  1346   0009AC  6EBB               	movwf	187,c	;volatile
  1347   0009AE                     l1190:
  1348                           
  1349                           ;untrasonido.c: 91: aux=CCPR2/(14) ;
  1350   0009AE  CFBB F001          	movff	4027,___lwdiv@dividend	;volatile
  1351   0009B2  CFBC F002          	movff	4028,___lwdiv@dividend+1	;volatile
  1352   0009B6  0E00               	movlw	0
  1353   0009B8  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  1354   0009BA  0E0E               	movlw	14
  1355   0009BC  6E03               	movwf	___lwdiv@divisor^0,c
  1356   0009BE  EC1B  F005         	call	___lwdiv	;wreg free
  1357   0009C2  5001               	movf	?___lwdiv^0,w,c
  1358   0009C4  6E08               	movwf	MedirDistancia@aux^0,c
  1359   0009C6                     l1192:
  1360                           
  1361                           ;untrasonido.c: 92: };untrasonido.c: 93: return aux;
  1362   0009C6  5008               	movf	MedirDistancia@aux^0,w,c
  1363   0009C8  0012               	return		;funcret
  1364   0009CA                     __end_of_MedirDistancia:
  1365                           	callstack 0
  1366                           
  1367 ;; *************** function ___lwdiv *****************
  1368 ;; Defined at:
  1369 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lwdiv.c"
  1370 ;; Parameters:    Size  Location     Type
  1371 ;;  dividend        2    0[COMRAM] unsigned int 
  1372 ;;  divisor         2    2[COMRAM] unsigned int 
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;  quotient        2    4[COMRAM] unsigned int 
  1375 ;;  counter         1    6[COMRAM] unsigned char 
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  2    0[COMRAM] unsigned int 
  1378 ;; Registers used:
  1379 ;;		wreg, status,2, status,0
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1385 ;;      Params:         4       0       0       0       0       0       0       0       0
  1386 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1387 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1388 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1389 ;;Total ram usage:        7 bytes
  1390 ;; Hardware stack levels used: 1
  1391 ;; Hardware stack levels required when called: 1
  1392 ;; This function calls:
  1393 ;;		Nothing
  1394 ;; This function is called by:
  1395 ;;		_main
  1396 ;;		_MedirDistancia
  1397 ;;		_printf
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           	psect	text8
  1402   000A36                     __ptext8:
  1403                           	callstack 0
  1404   000A36                     ___lwdiv:
  1405                           	callstack 28
  1406                           
  1407                           ;incstack = 0
  1408   000A36  0E00               	movlw	0
  1409   000A38  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  1410   000A3A  0E00               	movlw	0
  1411   000A3C  6E05               	movwf	___lwdiv@quotient^0,c
  1412   000A3E  5003               	movf	___lwdiv@divisor^0,w,c
  1413   000A40  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1414   000A42  B4D8               	btfsc	status,2,c
  1415   000A44  D01C               	goto	l632
  1416   000A46  0E01               	movlw	1
  1417   000A48  6E07               	movwf	___lwdiv@counter^0,c
  1418   000A4A  D004               	goto	l1132
  1419   000A4C                     l1130:
  1420   000A4C  90D8               	bcf	status,0,c
  1421   000A4E  3603               	rlcf	___lwdiv@divisor^0,f,c
  1422   000A50  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1423   000A52  2A07               	incf	___lwdiv@counter^0,f,c
  1424   000A54                     l1132:
  1425   000A54  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  1426   000A56  D7FA               	goto	l1130
  1427   000A58                     u330:
  1428   000A58  90D8               	bcf	status,0,c
  1429   000A5A  3605               	rlcf	___lwdiv@quotient^0,f,c
  1430   000A5C  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1431   000A5E  5003               	movf	___lwdiv@divisor^0,w,c
  1432   000A60  5C01               	subwf	___lwdiv@dividend^0,w,c
  1433   000A62  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1434   000A64  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1435   000A66  A0D8               	btfss	status,0,c
  1436   000A68  D005               	goto	l1142
  1437   000A6A  5003               	movf	___lwdiv@divisor^0,w,c
  1438   000A6C  5E01               	subwf	___lwdiv@dividend^0,f,c
  1439   000A6E  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1440   000A70  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1441   000A72  8005               	bsf	___lwdiv@quotient^0,0,c
  1442   000A74                     l1142:
  1443   000A74  90D8               	bcf	status,0,c
  1444   000A76  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1445   000A78  3203               	rrcf	___lwdiv@divisor^0,f,c
  1446   000A7A  2E07               	decfsz	___lwdiv@counter^0,f,c
  1447   000A7C  D7ED               	goto	u330
  1448   000A7E                     l632:
  1449   000A7E  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1450   000A82  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1451   000A86  0012               	return		;funcret
  1452   000A88                     __end_of___lwdiv:
  1453                           	callstack 0
  1454                           
  1455 ;; *************** function _ISR *****************
  1456 ;; Defined at:
  1457 ;;		line 103 in file "untrasonido.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;		None
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;		None
  1462 ;; Return value:  Size  Location     Type
  1463 ;;                  1    wreg      void 
  1464 ;; Registers used:
  1465 ;;		wreg, status,2, status,0
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1471 ;;      Params:         0       0       0       0       0       0       0       0       0
  1472 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1473 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1474 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1475 ;;Total ram usage:        0 bytes
  1476 ;; Hardware stack levels used: 1
  1477 ;; This function calls:
  1478 ;;		Nothing
  1479 ;; This function is called by:
  1480 ;;		Interrupt level 2
  1481 ;; This function uses a non-reentrant model
  1482 ;;
  1483                           
  1484                           	psect	intcode
  1485   000008                     __pintcode:
  1486                           	callstack 0
  1487   000008                     _ISR:
  1488                           	callstack 28
  1489                           
  1490                           ;incstack = 0
  1491   000008  821C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1492   00000A  ED81  F005         	call	int_func,f	;refresh shadow registers
  1493                           
  1494                           	psect	intcode_body
  1495   000B02                     __pintcode_body:
  1496                           	callstack 28
  1497   000B02                     int_func:
  1498                           	callstack 28
  1499   000B02  0006               	pop		; remove dummy address from shadow register refresh
  1500                           
  1501                           ;untrasonido.c: 104: TMR0IF=0;
  1502   000B04  94F2               	bcf	4082,2,c	;volatile
  1503                           
  1504                           ;untrasonido.c: 105: TMR0=3036;
  1505   000B06  0E0B               	movlw	11
  1506   000B08  6ED7               	movwf	215,c	;volatile
  1507   000B0A  0EDC               	movlw	220
  1508   000B0C  6ED6               	movwf	214,c	;volatile
  1509                           
  1510                           ;untrasonido.c: 106: LATA1=LATA1^1;
  1511   000B0E  B289               	btfsc	3977,1,c	;volatile
  1512   000B10  D002               	goto	i2u28_40
  1513   000B12  8289               	bsf	3977,1,c	;volatile
  1514   000B14  D001               	goto	i2u29_45
  1515   000B16                     i2u28_40:
  1516   000B16  9289               	bcf	3977,1,c	;volatile
  1517   000B18                     i2u29_45:
  1518                           
  1519                           ;untrasonido.c: 107: if(etimeout==1)
  1520   000B18  041B               	decf	_etimeout^0,w,c
  1521   000B1A  A4D8               	btfss	status,2,c
  1522   000B1C  D002               	goto	i2l117
  1523                           
  1524                           ;untrasonido.c: 108: ctimeout++;
  1525   000B1E  2A1A               	incf	_ctimeout^0,f,c
  1526   000B20  D001               	goto	i2l1120
  1527   000B22                     i2l117:
  1528                           
  1529                           ;untrasonido.c: 109: else;untrasonido.c: 110: ctimeout=0;
  1530   000B22  6A1A               	clrf	_ctimeout^0,c
  1531   000B24                     i2l1120:
  1532                           
  1533                           ;untrasonido.c: 111: if(ctimeout>=2)
  1534   000B24  0E01               	movlw	1
  1535   000B26  641A               	cpfsgt	_ctimeout^0,c
  1536   000B28  D001               	goto	i2l120
  1537                           
  1538                           ;untrasonido.c: 112: etimeout=0;
  1539   000B2A  6A1B               	clrf	_etimeout^0,c
  1540   000B2C                     i2l120:
  1541   000B2C  921C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1542   000B2E  0011               	retfie		f
  1543   000B30                     __end_of_ISR:
  1544                           	callstack 0
  1545                           
  1546                           	psect	rparam
  1547   000001                     ___rparam_used  equ	1
  1548   000000                     ___param_bank   equ	0
  1549   000000                     __Lparam        equ	__Lrparam
  1550   000000                     __Hparam        equ	__Hrparam
  1551                           
  1552                           	psect	temp
  1553   00001C                     btemp:
  1554                           	callstack 0
  1555   00001C                     	ds	1
  1556   00001C                     int$flags       set	btemp
  1557   00001D                     wtemp8          set	btemp+1
  1558   00001D                     ttemp5          set	btemp+1
  1559   000020                     ttemp6          set	btemp+4
  1560   000024                     ttemp7          set	btemp+8
  1561                           
  1562                           	psect	idloc
  1563                           
  1564                           ;Config register IDLOC0 @ 0x200000
  1565                           ;	unspecified, using default values
  1566   200000                     	org	2097152
  1567   200000  FF                 	db	255
  1568                           
  1569                           ;Config register IDLOC1 @ 0x200001
  1570                           ;	unspecified, using default values
  1571   200001                     	org	2097153
  1572   200001  FF                 	db	255
  1573                           
  1574                           ;Config register IDLOC2 @ 0x200002
  1575                           ;	unspecified, using default values
  1576   200002                     	org	2097154
  1577   200002  FF                 	db	255
  1578                           
  1579                           ;Config register IDLOC3 @ 0x200003
  1580                           ;	unspecified, using default values
  1581   200003                     	org	2097155
  1582   200003  FF                 	db	255
  1583                           
  1584                           ;Config register IDLOC4 @ 0x200004
  1585                           ;	unspecified, using default values
  1586   200004                     	org	2097156
  1587   200004  FF                 	db	255
  1588                           
  1589                           ;Config register IDLOC5 @ 0x200005
  1590                           ;	unspecified, using default values
  1591   200005                     	org	2097157
  1592   200005  FF                 	db	255
  1593                           
  1594                           ;Config register IDLOC6 @ 0x200006
  1595                           ;	unspecified, using default values
  1596   200006                     	org	2097158
  1597   200006  FF                 	db	255
  1598                           
  1599                           ;Config register IDLOC7 @ 0x200007
  1600                           ;	unspecified, using default values
  1601   200007                     	org	2097159
  1602   200007  FF                 	db	255
  1603                           
  1604                           	psect	config
  1605                           
  1606                           ;Config register CONFIG1L @ 0x300000
  1607                           ;	unspecified, using default values
  1608                           ;	PLL Prescaler Selection bits
  1609                           ;	PLLDIV = 0x0, unprogrammed default
  1610                           ;	System Clock Postscaler Selection bits
  1611                           ;	CPUDIV = 0x0, unprogrammed default
  1612                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1613                           ;	USBDIV = 0x0, unprogrammed default
  1614   300000                     	org	3145728
  1615   300000  00                 	db	0
  1616                           
  1617                           ;Config register CONFIG1H @ 0x300001
  1618                           ;	Oscillator Selection bits
  1619                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  1620                           ;	Fail-Safe Clock Monitor Enable bit
  1621                           ;	FCMEN = 0x0, unprogrammed default
  1622                           ;	Internal/External Oscillator Switchover bit
  1623                           ;	IESO = 0x0, unprogrammed default
  1624   300001                     	org	3145729
  1625   300001  09                 	db	9
  1626                           
  1627                           ;Config register CONFIG2L @ 0x300002
  1628                           ;	unspecified, using default values
  1629                           ;	Power-up Timer Enable bit
  1630                           ;	PWRT = 0x1, unprogrammed default
  1631                           ;	Brown-out Reset Enable bits
  1632                           ;	BOR = 0x3, unprogrammed default
  1633                           ;	Brown-out Reset Voltage bits
  1634                           ;	BORV = 0x3, unprogrammed default
  1635                           ;	USB Voltage Regulator Enable bit
  1636                           ;	VREGEN = 0x0, unprogrammed default
  1637   300002                     	org	3145730
  1638   300002  1F                 	db	31
  1639                           
  1640                           ;Config register CONFIG2H @ 0x300003
  1641                           ;	Watchdog Timer Enable bit
  1642                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1643                           ;	Watchdog Timer Postscale Select bits
  1644                           ;	WDTPS = 0xF, unprogrammed default
  1645   300003                     	org	3145731
  1646   300003  1E                 	db	30
  1647                           
  1648                           ; Padding undefined space
  1649   300004                     	org	3145732
  1650   300004  FF                 	db	255
  1651                           
  1652                           ;Config register CONFIG3H @ 0x300005
  1653                           ;	unspecified, using default values
  1654                           ;	CCP2 MUX bit
  1655                           ;	CCP2MX = 0x1, unprogrammed default
  1656                           ;	PORTB A/D Enable bit
  1657                           ;	PBADEN = 0x1, unprogrammed default
  1658                           ;	Low-Power Timer 1 Oscillator Enable bit
  1659                           ;	LPT1OSC = 0x0, unprogrammed default
  1660                           ;	MCLR Pin Enable bit
  1661                           ;	MCLRE = 0x1, unprogrammed default
  1662   300005                     	org	3145733
  1663   300005  83                 	db	131
  1664                           
  1665                           ;Config register CONFIG4L @ 0x300006
  1666                           ;	Stack Full/Underflow Reset Enable bit
  1667                           ;	STVREN = 0x1, unprogrammed default
  1668                           ;	Single-Supply ICSP Enable bit
  1669                           ;	LVP = OFF, Single-Supply ICSP disabled
  1670                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1671                           ;	ICPRT = 0x0, unprogrammed default
  1672                           ;	Extended Instruction Set Enable bit
  1673                           ;	XINST = 0x0, unprogrammed default
  1674                           ;	Background Debugger Enable bit
  1675                           ;	DEBUG = 0x1, unprogrammed default
  1676   300006                     	org	3145734
  1677   300006  81                 	db	129
  1678                           
  1679                           ; Padding undefined space
  1680   300007                     	org	3145735
  1681   300007  FF                 	db	255
  1682                           
  1683                           ;Config register CONFIG5L @ 0x300008
  1684                           ;	unspecified, using default values
  1685                           ;	Code Protection bit
  1686                           ;	CP0 = 0x1, unprogrammed default
  1687                           ;	Code Protection bit
  1688                           ;	CP1 = 0x1, unprogrammed default
  1689                           ;	Code Protection bit
  1690                           ;	CP2 = 0x1, unprogrammed default
  1691                           ;	Code Protection bit
  1692                           ;	CP3 = 0x1, unprogrammed default
  1693   300008                     	org	3145736
  1694   300008  0F                 	db	15
  1695                           
  1696                           ;Config register CONFIG5H @ 0x300009
  1697                           ;	unspecified, using default values
  1698                           ;	Boot Block Code Protection bit
  1699                           ;	CPB = 0x1, unprogrammed default
  1700                           ;	Data EEPROM Code Protection bit
  1701                           ;	CPD = 0x1, unprogrammed default
  1702   300009                     	org	3145737
  1703   300009  C0                 	db	192
  1704                           
  1705                           ;Config register CONFIG6L @ 0x30000A
  1706                           ;	unspecified, using default values
  1707                           ;	Write Protection bit
  1708                           ;	WRT0 = 0x1, unprogrammed default
  1709                           ;	Write Protection bit
  1710                           ;	WRT1 = 0x1, unprogrammed default
  1711                           ;	Write Protection bit
  1712                           ;	WRT2 = 0x1, unprogrammed default
  1713                           ;	Write Protection bit
  1714                           ;	WRT3 = 0x1, unprogrammed default
  1715   30000A                     	org	3145738
  1716   30000A  0F                 	db	15
  1717                           
  1718                           ;Config register CONFIG6H @ 0x30000B
  1719                           ;	unspecified, using default values
  1720                           ;	Configuration Register Write Protection bit
  1721                           ;	WRTC = 0x1, unprogrammed default
  1722                           ;	Boot Block Write Protection bit
  1723                           ;	WRTB = 0x1, unprogrammed default
  1724                           ;	Data EEPROM Write Protection bit
  1725                           ;	WRTD = 0x1, unprogrammed default
  1726   30000B                     	org	3145739
  1727   30000B  E0                 	db	224
  1728                           
  1729                           ;Config register CONFIG7L @ 0x30000C
  1730                           ;	unspecified, using default values
  1731                           ;	Table Read Protection bit
  1732                           ;	EBTR0 = 0x1, unprogrammed default
  1733                           ;	Table Read Protection bit
  1734                           ;	EBTR1 = 0x1, unprogrammed default
  1735                           ;	Table Read Protection bit
  1736                           ;	EBTR2 = 0x1, unprogrammed default
  1737                           ;	Table Read Protection bit
  1738                           ;	EBTR3 = 0x1, unprogrammed default
  1739   30000C                     	org	3145740
  1740   30000C  0F                 	db	15
  1741                           
  1742                           ;Config register CONFIG7H @ 0x30000D
  1743                           ;	unspecified, using default values
  1744                           ;	Boot Block Table Read Protection bit
  1745                           ;	EBTRB = 0x1, unprogrammed default
  1746   30000D                     	org	3145741
  1747   30000D  40                 	db	64
  1748                           tosu	equ	0xFFF
  1749                           tosh	equ	0xFFE
  1750                           tosl	equ	0xFFD
  1751                           stkptr	equ	0xFFC
  1752                           pclatu	equ	0xFFB
  1753                           pclath	equ	0xFFA
  1754                           pcl	equ	0xFF9
  1755                           tblptru	equ	0xFF8
  1756                           tblptrh	equ	0xFF7
  1757                           tblptrl	equ	0xFF6
  1758                           tablat	equ	0xFF5
  1759                           prodh	equ	0xFF4
  1760                           prodl	equ	0xFF3
  1761                           indf0	equ	0xFEF
  1762                           postinc0	equ	0xFEE
  1763                           postdec0	equ	0xFED
  1764                           preinc0	equ	0xFEC
  1765                           plusw0	equ	0xFEB
  1766                           fsr0h	equ	0xFEA
  1767                           fsr0l	equ	0xFE9
  1768                           wreg	equ	0xFE8
  1769                           indf1	equ	0xFE7
  1770                           postinc1	equ	0xFE6
  1771                           postdec1	equ	0xFE5
  1772                           preinc1	equ	0xFE4
  1773                           plusw1	equ	0xFE3
  1774                           fsr1h	equ	0xFE2
  1775                           fsr1l	equ	0xFE1
  1776                           bsr	equ	0xFE0
  1777                           indf2	equ	0xFDF
  1778                           postinc2	equ	0xFDE
  1779                           postdec2	equ	0xFDD
  1780                           preinc2	equ	0xFDC
  1781                           plusw2	equ	0xFDB
  1782                           fsr2h	equ	0xFDA
  1783                           fsr2l	equ	0xFD9
  1784                           status	equ	0xFD8

Data Sizes:
    Strings     53
    Constant    10
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     25      27
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 32
		 -> STR_1(CODE[21]), STR_2(CODE[32]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv
    ___lbdiv->___lbmod
    _MedirDistancia->___lwdiv

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1561
                                             22 COMRAM     3     3      0
                     _MedirDistancia
                         _Transmitir
                            ___lbdiv
                            ___lbmod
                            ___lwdiv
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              18    15      3     732
                                             12 COMRAM    10     7      3
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     161
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lbmod                                              4     3      1     169
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___lbdiv                                              4     3      1     172
                                              4 COMRAM     4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Transmitir                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _MedirDistancia                                       1     1      0     193
                                              7 COMRAM     1     1      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     168
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MedirDistancia
     ___lwdiv
   _Transmitir
   ___lbdiv
     ___lbmod (ARG)
   ___lbmod
   ___lwdiv
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch

 _ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0       0      0.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     25      27     28.7%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRlll        34      0       0      0.0%
BITBIGSFRlh         26      0       0      0.0%
BITBIGSFRllh        15      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      27      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Jul 17 12:49:15 2025

      Transmitir@BufferT 0001                       l91 0986                       l93 0988  
                     l86 0972                      l133 0858                      l632 0A7E  
                    l642 0AC0                      l898 0B6C                      _GIE 7F97  
                    _RC0 7C10                      _RC1 7C11                      u330 0A58  
                    u420 0990                      u500 093E                      u360 0AA2  
                    u530 0AE4                      _ISR 0008                      u390 097C  
                    u480 08D4                      u577 0A28                      wreg 0FE8  
                   ?_ISR 0001                     l1022 0B78                     l1130 0A4C  
                   l1132 0A54                     l1300 09FA                     l1142 0A74  
                   l1150 0A96                     l1222 08A8                     l1206 0882  
                   l1152 0A9E                     l1240 0936                     l1216 08A4  
                   l1250 0ADA                     l1234 08E6                     l1306 0A10  
                   l1236 08EC                     l1308 0A1E                     l1190 09AE  
                   l1262 0AF6                     l1254 0AE0                     l1158 0AB6  
                   l1192 09C6                     l1186 099A                     l1266 0AFE  
                   l1282 0B50                     l1274 0B38                     l1198 0848  
                   STR_1 082B                     STR_2 080B                     _TMR0 0FD6  
                   _TMR1 0FCE                     _TRMT 7D61                     _main 09CA  
                   fsr2h 0FDA                     fsr2l 0FD9                     btemp 001C  
                   prodl 0FF3                     start 000E             ___param_bank 0000  
                  ??_ISR 0001                    ?_main 0001          __end_of___lbdiv 0B02  
                  _CCPR2 0FBB          __end_of___lbmod 0B58                    _T0CON 0FD5  
                  _T1CON 0FCD                    _LATA1 7C49                    _LATC0 7C58  
                  _LATD0 7C60          __end_of___lwdiv 0A88                    i2l120 0B2C  
        __end_of___lwmod 0ACA                    i2l117 0B22                    _RCSTA 0FAB  
                  _SPBRG 0FAF                    _TXREG 0FAD                    _TXSTA 0FAC  
        __end_of_dpowers 080B                    _putch 0B6A                    main@d 0019  
                  tablat 0FF5                    ttemp5 001D                    ttemp6 0020  
                  ttemp7 0024                    status 0FD8                    wtemp8 001D  
        ___lbdiv@divisor 0005          ___lbdiv@counter 0007          __initialization 0B58  
           __end_of_main 0A36                   ??_main 0017            __activetblptr 0002  
                 _CCP2IF 7D08                   ?_putch 0001                   i2l1120 0B24  
                 _TMR0IE 7F95                   _TMR0IF 7F92                   _TMR1IF 7CF0  
                 _TMR0ON 7EAF                   _TMR1ON 7E68                   _TRISA1 7C91  
                 _TRISC0 7CA0                ??___lbdiv 0006                ??___lbmod 0002  
              ??___lwdiv 0005                ??___lwmod 000C                   isa$std 0001  
                 _printf 0842             __mediumconst 0000                   tblptrh 0FF7  
                 tblptrl 0FF6                   tblptru 0FF8               _Transmitir 0B76  
      MedirDistancia@aux 0008         ___lbdiv@dividend 0006         ??_MedirDistancia 0008  
        ___lbmod@divisor 0001               __accesstop 0060  __end_of__initialization 0B5C  
        ___lbmod@counter 0003            ___rparam_used 0001           __pcstackCOMRAM 0001  
          __end_of_putch 0B76         ___lbdiv@quotient 0008                  ??_putch 0001  
                _CCP2CON 0FBA                  _BAUDCON 0FB8                  ?_printf 000D  
                i2u28_40 0B16                  i2u29_45 0B18              ?_Transmitir 0001  
                __Hparam 0000                  __Lparam 0000                  ___lbdiv 0ACA  
                ___lbmod 0B30                  ___lwdiv 0A36                  ___lwmod 0A88  
           __psmallconst 0800                  __pcinit 0B58                  __ramtop 0800  
                __ptext0 09CA                  __ptext1 0842                  __ptext2 0B6A  
                __ptext3 0A88                  __ptext4 0B30                  __ptext5 0ACA  
                __ptext6 0B76                  __ptext7 095A                  __ptext8 0A36  
                _dpowers 0801           __pintcode_body 0B02     end_of_initialization 0B5C  
          __Lmediumconst 0000                  int_func 0B02                  printf@c 0016  
                printf@f 000D                  postdec2 0FDD                  postinc2 0FDE  
       ___lbmod@dividend 0002              ___lbmod@rem 0004           __end_of_printf 095A  
    start_initialization 0B58              __end_of_ISR 0B30                 ??_printf 0010  
            __pbssCOMRAM 001A             ??_Transmitir 0001         ___lwdiv@dividend 0001  
              __pintcode 0008                 ?___lbdiv 0005                 ?___lbmod 0001  
               ?___lwdiv 0001                 ?___lwmod 0008       __end_of_Transmitir 0B82  
            __smallconst 0800         ___lwdiv@quotient 0005               printf@flag 0012  
             printf@prec 0013                 __Hrparam 0000                 __Lrparam 0000  
        ___lwdiv@divisor 0003          ___lwdiv@counter 0007                 _ctimeout 001A  
               _etimeout 001B                 isa$xinst 0000           _MedirDistancia 095A  
               int$flags 001C                printf@val 0014                putch@data 0001  
               intlevel2 0000         ___lwmod@dividend 0008   __end_of_MedirDistancia 09CA  
               printf@ap 0011          ___lwmod@divisor 000A          ___lwmod@counter 000C  
        ?_MedirDistancia 0001  
