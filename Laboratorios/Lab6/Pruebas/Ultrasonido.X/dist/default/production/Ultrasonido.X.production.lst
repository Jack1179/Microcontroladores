

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Jul 22 01:04:27 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=1
    11                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=2
    13                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=2
    14                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=2
    15                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=2
    18                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25   000000                     
    26                           ; Generated 25/07/2024 GMT
    27                           ; 
    28                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F4550 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60   000FE0                     bsr             equ	4064
    61   000FE9                     fsr0            equ	4073
    62   000FEA                     fsr0h           equ	4074
    63   000FE9                     fsr0l           equ	4073
    64   000FE1                     fsr1            equ	4065
    65   000FE2                     fsr1h           equ	4066
    66   000FE1                     fsr1l           equ	4065
    67   000FD9                     fsr2            equ	4057
    68   000FDA                     fsr2h           equ	4058
    69   000FD9                     fsr2l           equ	4057
    70   000FEF                     indf0           equ	4079
    71   000FE7                     indf1           equ	4071
    72   000FDF                     indf2           equ	4063
    73   000FF2                     intcon          equ	4082
    74   000000                     nvmcon          equ	0
    75   000FF9                     pcl             equ	4089
    76   000FFA                     pclath          equ	4090
    77   000FFB                     pclatu          equ	4091
    78   000FEB                     plusw0          equ	4075
    79   000FE3                     plusw1          equ	4067
    80   000FDB                     plusw2          equ	4059
    81   000FED                     postdec0        equ	4077
    82   000FE5                     postdec1        equ	4069
    83   000FDD                     postdec2        equ	4061
    84   000FEE                     postinc0        equ	4078
    85   000FE6                     postinc1        equ	4070
    86   000FDE                     postinc2        equ	4062
    87   000FEC                     preinc0         equ	4076
    88   000FE4                     preinc1         equ	4068
    89   000FDC                     preinc2         equ	4060
    90   000FF3                     prod            equ	4083
    91   000FF4                     prodh           equ	4084
    92   000FF3                     prodl           equ	4083
    93   000FD8                     status          equ	4056
    94   000FF5                     tablat          equ	4085
    95   000FF6                     tblptr          equ	4086
    96   000FF7                     tblptrh         equ	4087
    97   000FF6                     tblptrl         equ	4086
    98   000FF8                     tblptru         equ	4088
    99   000FFD                     tosl            equ	4093
   100   000FE8                     wreg            equ	4072
   101   000F62                     SPPDATA         equ	3938	;# 
   102   000F63                     SPPCFG          equ	3939	;# 
   103   000F64                     SPPEPS          equ	3940	;# 
   104   000F65                     SPPCON          equ	3941	;# 
   105   000F66                     UFRM            equ	3942	;# 
   106   000F66                     UFRML           equ	3942	;# 
   107   000F67                     UFRMH           equ	3943	;# 
   108   000F68                     UIR             equ	3944	;# 
   109   000F69                     UIE             equ	3945	;# 
   110   000F6A                     UEIR            equ	3946	;# 
   111   000F6B                     UEIE            equ	3947	;# 
   112   000F6C                     USTAT           equ	3948	;# 
   113   000F6D                     UCON            equ	3949	;# 
   114   000F6E                     UADDR           equ	3950	;# 
   115   000F6F                     UCFG            equ	3951	;# 
   116   000F70                     UEP0            equ	3952	;# 
   117   000F71                     UEP1            equ	3953	;# 
   118   000F72                     UEP2            equ	3954	;# 
   119   000F73                     UEP3            equ	3955	;# 
   120   000F74                     UEP4            equ	3956	;# 
   121   000F75                     UEP5            equ	3957	;# 
   122   000F76                     UEP6            equ	3958	;# 
   123   000F77                     UEP7            equ	3959	;# 
   124   000F78                     UEP8            equ	3960	;# 
   125   000F79                     UEP9            equ	3961	;# 
   126   000F7A                     UEP10           equ	3962	;# 
   127   000F7B                     UEP11           equ	3963	;# 
   128   000F7C                     UEP12           equ	3964	;# 
   129   000F7D                     UEP13           equ	3965	;# 
   130   000F7E                     UEP14           equ	3966	;# 
   131   000F7F                     UEP15           equ	3967	;# 
   132   000F80                     PORTA           equ	3968	;# 
   133   000F81                     PORTB           equ	3969	;# 
   134   000F82                     PORTC           equ	3970	;# 
   135   000F83                     PORTD           equ	3971	;# 
   136   000F84                     PORTE           equ	3972	;# 
   137   000F89                     LATA            equ	3977	;# 
   138   000F8A                     LATB            equ	3978	;# 
   139   000F8B                     LATC            equ	3979	;# 
   140   000F8C                     LATD            equ	3980	;# 
   141   000F8D                     LATE            equ	3981	;# 
   142   000F92                     TRISA           equ	3986	;# 
   143   000F92                     DDRA            equ	3986	;# 
   144   000F93                     TRISB           equ	3987	;# 
   145   000F93                     DDRB            equ	3987	;# 
   146   000F94                     TRISC           equ	3988	;# 
   147   000F94                     DDRC            equ	3988	;# 
   148   000F95                     TRISD           equ	3989	;# 
   149   000F95                     DDRD            equ	3989	;# 
   150   000F96                     TRISE           equ	3990	;# 
   151   000F96                     DDRE            equ	3990	;# 
   152   000F9B                     OSCTUNE         equ	3995	;# 
   153   000F9D                     PIE1            equ	3997	;# 
   154   000F9E                     PIR1            equ	3998	;# 
   155   000F9F                     IPR1            equ	3999	;# 
   156   000FA0                     PIE2            equ	4000	;# 
   157   000FA1                     PIR2            equ	4001	;# 
   158   000FA2                     IPR2            equ	4002	;# 
   159   000FA6                     EECON1          equ	4006	;# 
   160   000FA7                     EECON2          equ	4007	;# 
   161   000FA8                     EEDATA          equ	4008	;# 
   162   000FA9                     EEADR           equ	4009	;# 
   163   000FAB                     RCSTA           equ	4011	;# 
   164   000FAB                     RCSTA1          equ	4011	;# 
   165   000FAC                     TXSTA           equ	4012	;# 
   166   000FAC                     TXSTA1          equ	4012	;# 
   167   000FAD                     TXREG           equ	4013	;# 
   168   000FAD                     TXREG1          equ	4013	;# 
   169   000FAE                     RCREG           equ	4014	;# 
   170   000FAE                     RCREG1          equ	4014	;# 
   171   000FAF                     SPBRG           equ	4015	;# 
   172   000FAF                     SPBRG1          equ	4015	;# 
   173   000FB0                     SPBRGH          equ	4016	;# 
   174   000FB1                     T3CON           equ	4017	;# 
   175   000FB2                     TMR3            equ	4018	;# 
   176   000FB2                     TMR3L           equ	4018	;# 
   177   000FB3                     TMR3H           equ	4019	;# 
   178   000FB4                     CMCON           equ	4020	;# 
   179   000FB5                     CVRCON          equ	4021	;# 
   180   000FB6                     ECCP1AS         equ	4022	;# 
   181   000FB6                     CCP1AS          equ	4022	;# 
   182   000FB7                     ECCP1DEL        equ	4023	;# 
   183   000FB7                     CCP1DEL         equ	4023	;# 
   184   000FB8                     BAUDCON         equ	4024	;# 
   185   000FB8                     BAUDCTL         equ	4024	;# 
   186   000FBA                     CCP2CON         equ	4026	;# 
   187   000FBB                     CCPR2           equ	4027	;# 
   188   000FBB                     CCPR2L          equ	4027	;# 
   189   000FBC                     CCPR2H          equ	4028	;# 
   190   000FBD                     CCP1CON         equ	4029	;# 
   191   000FBD                     ECCP1CON        equ	4029	;# 
   192   000FBE                     CCPR1           equ	4030	;# 
   193   000FBE                     CCPR1L          equ	4030	;# 
   194   000FBF                     CCPR1H          equ	4031	;# 
   195   000FC0                     ADCON2          equ	4032	;# 
   196   000FC1                     ADCON1          equ	4033	;# 
   197   000FC2                     ADCON0          equ	4034	;# 
   198   000FC3                     ADRES           equ	4035	;# 
   199   000FC3                     ADRESL          equ	4035	;# 
   200   000FC4                     ADRESH          equ	4036	;# 
   201   000FC5                     SSPCON2         equ	4037	;# 
   202   000FC6                     SSPCON1         equ	4038	;# 
   203   000FC7                     SSPSTAT         equ	4039	;# 
   204   000FC8                     SSPADD          equ	4040	;# 
   205   000FC9                     SSPBUF          equ	4041	;# 
   206   000FCA                     T2CON           equ	4042	;# 
   207   000FCB                     PR2             equ	4043	;# 
   208   000FCB                     MEMCON          equ	4043	;# 
   209   000FCC                     TMR2            equ	4044	;# 
   210   000FCD                     T1CON           equ	4045	;# 
   211   000FCE                     TMR1            equ	4046	;# 
   212   000FCE                     TMR1L           equ	4046	;# 
   213   000FCF                     TMR1H           equ	4047	;# 
   214   000FD0                     RCON            equ	4048	;# 
   215   000FD1                     WDTCON          equ	4049	;# 
   216   000FD2                     HLVDCON         equ	4050	;# 
   217   000FD2                     LVDCON          equ	4050	;# 
   218   000FD3                     OSCCON          equ	4051	;# 
   219   000FD5                     T0CON           equ	4053	;# 
   220   000FD6                     TMR0            equ	4054	;# 
   221   000FD6                     TMR0L           equ	4054	;# 
   222   000FD7                     TMR0H           equ	4055	;# 
   223   000FD8                     STATUS          equ	4056	;# 
   224   000FD9                     FSR2            equ	4057	;# 
   225   000FD9                     FSR2L           equ	4057	;# 
   226   000FDA                     FSR2H           equ	4058	;# 
   227   000FDB                     PLUSW2          equ	4059	;# 
   228   000FDC                     PREINC2         equ	4060	;# 
   229   000FDD                     POSTDEC2        equ	4061	;# 
   230   000FDE                     POSTINC2        equ	4062	;# 
   231   000FDF                     INDF2           equ	4063	;# 
   232   000FE0                     BSR             equ	4064	;# 
   233   000FE1                     FSR1            equ	4065	;# 
   234   000FE1                     FSR1L           equ	4065	;# 
   235   000FE2                     FSR1H           equ	4066	;# 
   236   000FE3                     PLUSW1          equ	4067	;# 
   237   000FE4                     PREINC1         equ	4068	;# 
   238   000FE5                     POSTDEC1        equ	4069	;# 
   239   000FE6                     POSTINC1        equ	4070	;# 
   240   000FE7                     INDF1           equ	4071	;# 
   241   000FE8                     WREG            equ	4072	;# 
   242   000FE9                     FSR0            equ	4073	;# 
   243   000FE9                     FSR0L           equ	4073	;# 
   244   000FEA                     FSR0H           equ	4074	;# 
   245   000FEB                     PLUSW0          equ	4075	;# 
   246   000FEC                     PREINC0         equ	4076	;# 
   247   000FED                     POSTDEC0        equ	4077	;# 
   248   000FEE                     POSTINC0        equ	4078	;# 
   249   000FEF                     INDF0           equ	4079	;# 
   250   000FF0                     INTCON3         equ	4080	;# 
   251   000FF1                     INTCON2         equ	4081	;# 
   252   000FF2                     INTCON          equ	4082	;# 
   253   000FF3                     PROD            equ	4083	;# 
   254   000FF3                     PRODL           equ	4083	;# 
   255   000FF4                     PRODH           equ	4084	;# 
   256   000FF5                     TABLAT          equ	4085	;# 
   257   000FF6                     TBLPTR          equ	4086	;# 
   258   000FF6                     TBLPTRL         equ	4086	;# 
   259   000FF7                     TBLPTRH         equ	4087	;# 
   260   000FF8                     TBLPTRU         equ	4088	;# 
   261   000FF9                     PCLAT           equ	4089	;# 
   262   000FF9                     PC              equ	4089	;# 
   263   000FF9                     PCL             equ	4089	;# 
   264   000FFA                     PCLATH          equ	4090	;# 
   265   000FFB                     PCLATU          equ	4091	;# 
   266   000FFC                     STKPTR          equ	4092	;# 
   267   000FFD                     TOS             equ	4093	;# 
   268   000FFD                     TOSL            equ	4093	;# 
   269   000FFE                     TOSH            equ	4094	;# 
   270   000FFF                     TOSU            equ	4095	;# 
   271                           
   272                           	psect	smallconst
   273   000800                     __psmallconst:
   274                           	callstack 0
   275   000800  00                 	db	0
   276   000801                     _dpowers:
   277                           	callstack 0
   278   000801  0001               	dw	1
   279   000803  000A               	dw	10
   280   000805  0064               	dw	100
   281   000807  03E8               	dw	1000
   282   000809  2710               	dw	10000
   283   00080B                     __end_of_dpowers:
   284                           	callstack 0
   285   007D61                     _TRMT           set	32097
   286   007CF0                     _TMR1IF         set	31984
   287   007E68                     _TMR1ON         set	32360
   288   007C11                     _RC1            set	31761
   289   007C10                     _RC0            set	31760
   290   007D08                     _CCP2IF         set	32008
   291   007EAF                     _TMR0ON         set	32431
   292   007F97                     _GIE            set	32663
   293   007F95                     _TMR0IE         set	32661
   294   007F92                     _TMR0IF         set	32658
   295   007C60                     _LATD0          set	31840
   296   007C58                     _LATC0          set	31832
   297   007CA8                     _TRISD0         set	31912
   298   007CA0                     _TRISC0         set	31904
   299   000FBB                     _CCPR2          set	4027
   300   000FCE                     _TMR1           set	4046
   301   000FD6                     _TMR0           set	4054
   302   000FAD                     _TXREG          set	4013
   303   000FBA                     _CCP2CON        set	4026
   304   000FCD                     _T1CON          set	4045
   305   000FD5                     _T0CON          set	4053
   306   000FAF                     _SPBRG          set	4015
   307   000FB8                     _BAUDCON        set	4024
   308   000FAB                     _RCSTA          set	4011
   309   000FAC                     _TXSTA          set	4012
   310   00080B                     STR_2:
   311   00080B  4C                 	db	76	;'L'
   312   00080C  61                 	db	97	;'a'
   313   00080D  20                 	db	32
   314   00080E  64                 	db	100	;'d'
   315   00080F  69                 	db	105	;'i'
   316   000810  73                 	db	115	;'s'
   317   000811  74                 	db	116	;'t'
   318   000812  61                 	db	97	;'a'
   319   000813  6E                 	db	110	;'n'
   320   000814  63                 	db	99	;'c'
   321   000815  69                 	db	105	;'i'
   322   000816  61                 	db	97	;'a'
   323   000817  20                 	db	32
   324   000818  6D                 	db	109	;'m'
   325   000819  65                 	db	101	;'e'
   326   00081A  64                 	db	100	;'d'
   327   00081B  69                 	db	105	;'i'
   328   00081C  64                 	db	100	;'d'
   329   00081D  61                 	db	97	;'a'
   330   00081E  20                 	db	32
   331   00081F  65                 	db	101	;'e'
   332   000820  73                 	db	115	;'s'
   333   000821  3A                 	db	58	;':'
   334   000822  20                 	db	32
   335   000823  25                 	db	37
   336   000824  64                 	db	100	;'d'
   337   000825  20                 	db	32
   338   000826  63                 	db	99	;'c'
   339   000827  6D                 	db	109	;'m'
   340   000828  0D                 	db	13
   341   000829  00                 	db	0
   342   00082A                     STR_1:
   343   00082A  46                 	db	70	;'F'
   344   00082B  61                 	db	97	;'a'
   345   00082C  6C                 	db	108	;'l'
   346   00082D  6C                 	db	108	;'l'
   347   00082E  61                 	db	97	;'a'
   348   00082F  20                 	db	32
   349   000830  65                 	db	101	;'e'
   350   000831  6E                 	db	110	;'n'
   351   000832  20                 	db	32
   352   000833  65                 	db	101	;'e'
   353   000834  6C                 	db	108	;'l'
   354   000835  20                 	db	32
   355   000836  73                 	db	115	;'s'
   356   000837  65                 	db	101	;'e'
   357   000838  6E                 	db	110	;'n'
   358   000839  73                 	db	115	;'s'
   359   00083A  6F                 	db	111	;'o'
   360   00083B  72                 	db	114	;'r'
   361   00083C  0D                 	db	13
   362   00083D  00                 	db	0
   363   00083E  00                 	db	0	; dummy byte at the end
   364   000002                     __activetblptr  equ	2
   365                           
   366                           ; #config settings
   367                           
   368                           	psect	cinit
   369   000B56                     __pcinit:
   370                           	callstack 0
   371   000B56                     start_initialization:
   372                           	callstack 0
   373   000B56                     __initialization:
   374                           	callstack 0
   375                           
   376                           ; Clear objects allocated to COMRAM (2 bytes)
   377   000B56  6A1B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   378   000B58  6A1A               	clrf	__pbssCOMRAM& (0+255),c
   379   000B5A                     end_of_initialization:
   380                           	callstack 0
   381   000B5A                     __end_of__initialization:
   382                           	callstack 0
   383   000B5A  901C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   384   000B5C  921C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   385   000B5E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   386   000B60  6EF8               	movwf	tblptru,c
   387   000B62  0100               	movlb	0
   388   000B64  EFE4  F004         	goto	_main	;jump to C main() function
   389                           
   390                           	psect	bssCOMRAM
   391   00001A                     __pbssCOMRAM:
   392                           	callstack 0
   393   00001A                     _ctimeout:
   394                           	callstack 0
   395   00001A                     	ds	1
   396   00001B                     _etimeout:
   397                           	callstack 0
   398   00001B                     	ds	1
   399                           
   400                           	psect	cstackCOMRAM
   401   000001                     __pcstackCOMRAM:
   402                           	callstack 0
   403   000001                     ?___lwdiv:
   404                           	callstack 0
   405   000001                     Transmitir@BufferT:
   406                           	callstack 0
   407   000001                     putch@data:
   408                           	callstack 0
   409   000001                     ___lbmod@divisor:
   410                           	callstack 0
   411   000001                     ___lwdiv@dividend:
   412                           	callstack 0
   413   000001                     
   414                           ; 1 bytes @ 0x0
   415   000001                     	ds	1
   416   000002                     ___lbmod@dividend:
   417                           	callstack 0
   418   000002                     
   419                           ; 1 bytes @ 0x1
   420   000002                     	ds	1
   421   000003                     ___lbmod@counter:
   422                           	callstack 0
   423   000003                     ___lwdiv@divisor:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0x2
   427   000003                     	ds	1
   428   000004                     ___lbmod@rem:
   429                           	callstack 0
   430                           
   431                           ; 1 bytes @ 0x3
   432   000004                     	ds	1
   433   000005                     ___lbdiv@divisor:
   434                           	callstack 0
   435   000005                     ___lwdiv@quotient:
   436                           	callstack 0
   437   000005                     
   438                           ; 1 bytes @ 0x4
   439   000005                     	ds	1
   440   000006                     ___lbdiv@dividend:
   441                           	callstack 0
   442   000006                     
   443                           ; 1 bytes @ 0x5
   444   000006                     	ds	1
   445   000007                     ___lbdiv@counter:
   446                           	callstack 0
   447   000007                     ___lwdiv@counter:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0x6
   451   000007                     	ds	1
   452   000008                     ?___lwmod:
   453                           	callstack 0
   454   000008                     MedirDistancia@aux:
   455                           	callstack 0
   456   000008                     ___lbdiv@quotient:
   457                           	callstack 0
   458   000008                     ___lwmod@dividend:
   459                           	callstack 0
   460   000008                     
   461                           ; 1 bytes @ 0x7
   462   000008                     	ds	2
   463   00000A                     ___lwmod@divisor:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0x9
   467   00000A                     	ds	2
   468   00000C                     ___lwmod@counter:
   469                           	callstack 0
   470   00000C                     
   471                           ; 1 bytes @ 0xB
   472   00000C                     	ds	1
   473   00000D                     ?_printf:
   474                           	callstack 0
   475   00000D                     printf@f:
   476                           	callstack 0
   477                           
   478                           ; 1 bytes @ 0xC
   479   00000D                     	ds	3
   480   000010                     ??_printf:
   481                           
   482                           ; 1 bytes @ 0xF
   483   000010                     	ds	1
   484   000011                     printf@ap:
   485                           	callstack 0
   486                           
   487                           ; 1 bytes @ 0x10
   488   000011                     	ds	1
   489   000012                     printf@flag:
   490                           	callstack 0
   491                           
   492                           ; 1 bytes @ 0x11
   493   000012                     	ds	1
   494   000013                     printf@prec:
   495                           	callstack 0
   496                           
   497                           ; 1 bytes @ 0x12
   498   000013                     	ds	1
   499   000014                     printf@val:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x13
   503   000014                     	ds	2
   504   000016                     printf@c:
   505                           	callstack 0
   506                           
   507                           ; 1 bytes @ 0x15
   508   000016                     	ds	1
   509   000017                     ??_main:
   510                           
   511                           ; 1 bytes @ 0x16
   512   000017                     	ds	2
   513   000019                     main@d:
   514                           	callstack 0
   515                           
   516                           ; 1 bytes @ 0x18
   517   000019                     	ds	1
   518                           
   519 ;;
   520 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   521 ;;
   522 ;; *************** function _main *****************
   523 ;; Defined at:
   524 ;;		line 14 in file "untrasonido.c"
   525 ;; Parameters:    Size  Location     Type
   526 ;;		None
   527 ;; Auto vars:     Size  Location     Type
   528 ;;  d               1   24[COMRAM] unsigned char 
   529 ;; Return value:  Size  Location     Type
   530 ;;                  1    wreg      void 
   531 ;; Registers used:
   532 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   533 ;; Tracked objects:
   534 ;;		On entry : 0/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   538 ;;      Params:         0       0       0       0       0       0       0       0       0
   539 ;;      Locals:         1       0       0       0       0       0       0       0       0
   540 ;;      Temps:          2       0       0       0       0       0       0       0       0
   541 ;;      Totals:         3       0       0       0       0       0       0       0       0
   542 ;;Total ram usage:        3 bytes
   543 ;; Hardware stack levels required when called: 3
   544 ;; This function calls:
   545 ;;		_MedirDistancia
   546 ;;		_Transmitir
   547 ;;		___lbdiv
   548 ;;		___lbmod
   549 ;;		___lwdiv
   550 ;;		_printf
   551 ;; This function is called by:
   552 ;;		Startup code after reset
   553 ;; This function uses a non-reentrant model
   554 ;;
   555                           
   556                           	psect	text0
   557   0009C8                     __ptext0:
   558                           	callstack 0
   559   0009C8                     _main:
   560                           	callstack 28
   561                           
   562                           ;untrasonido.c: 16: unsigned char d;;untrasonido.c: 19: TRISC0=0;
   563                           
   564                           ;incstack = 0
   565   0009C8  9094               	bcf	3988,0,c	;volatile
   566                           
   567                           ;untrasonido.c: 20: TRISD0=0;
   568   0009CA  9095               	bcf	3989,0,c	;volatile
   569                           
   570                           ;untrasonido.c: 21: LATC0=0;
   571   0009CC  908B               	bcf	3979,0,c	;volatile
   572                           
   573                           ;untrasonido.c: 22: LATD0=0;
   574   0009CE  908C               	bcf	3980,0,c	;volatile
   575                           
   576                           ;untrasonido.c: 23: TXSTA=0b00100100;
   577   0009D0  0E24               	movlw	36
   578   0009D2  6EAC               	movwf	172,c	;volatile
   579                           
   580                           ;untrasonido.c: 24: RCSTA=0b10000000;
   581   0009D4  0E80               	movlw	128
   582   0009D6  6EAB               	movwf	171,c	;volatile
   583                           
   584                           ;untrasonido.c: 25: BAUDCON=0b00001000;
   585   0009D8  0E08               	movlw	8
   586   0009DA  6EB8               	movwf	184,c	;volatile
   587                           
   588                           ;untrasonido.c: 26: SPBRG=25;
   589   0009DC  0E19               	movlw	25
   590   0009DE  6EAF               	movwf	175,c	;volatile
   591                           
   592                           ;untrasonido.c: 27: TMR0=3036;
   593   0009E0  0E0B               	movlw	11
   594   0009E2  6ED7               	movwf	215,c	;volatile
   595   0009E4  0EDC               	movlw	220
   596   0009E6  6ED6               	movwf	214,c	;volatile
   597                           
   598                           ;untrasonido.c: 28: T0CON=0b00001000;
   599   0009E8  0E08               	movlw	8
   600   0009EA  6ED5               	movwf	213,c	;volatile
   601                           
   602                           ;untrasonido.c: 29: T1CON=0b10000000;
   603   0009EC  0E80               	movlw	128
   604   0009EE  6ECD               	movwf	205,c	;volatile
   605                           
   606                           ;untrasonido.c: 30: TMR0IF=0;
   607   0009F0  94F2               	bcf	4082,2,c	;volatile
   608                           
   609                           ;untrasonido.c: 31: TMR0IE=1;
   610   0009F2  8AF2               	bsf	4082,5,c	;volatile
   611                           
   612                           ;untrasonido.c: 32: GIE=1;
   613   0009F4  8EF2               	bsf	4082,7,c	;volatile
   614                           
   615                           ;untrasonido.c: 33: TMR0ON=1;
   616   0009F6  8ED5               	bsf	4053,7,c	;volatile
   617   0009F8                     l1296:
   618                           
   619                           ;untrasonido.c: 36: d=MedirDistancia();
   620   0009F8  ECAC  F004         	call	_MedirDistancia	;wreg free
   621   0009FC  6E19               	movwf	main@d^0,c
   622                           
   623                           ;untrasonido.c: 37: if(d==0)
   624   0009FE  5019               	movf	main@d^0,w,c
   625   000A00  A4D8               	btfss	status,2,c
   626   000A02  D005               	goto	l1302
   627                           
   628                           ;untrasonido.c: 38: printf("Falla en el sensor\r");
   629   000A04  0E2A               	movlw	low STR_1
   630   000A06  6E0D               	movwf	printf@f^0,c
   631   000A08  EC20  F004         	call	_printf	;wreg free
   632   000A0C  D007               	goto	l1304
   633   000A0E                     l1302:
   634                           
   635                           ;untrasonido.c: 39: else;untrasonido.c: 40: printf("La distancia medida es: %d cm\r",d);
   636   000A0E  0E0B               	movlw	low STR_2
   637   000A10  6E0D               	movwf	printf@f^0,c
   638   000A12  C019  F00E         	movff	main@d,?_printf+1
   639   000A16  6A0F               	clrf	(?_printf+2)^0,c
   640   000A18  EC20  F004         	call	_printf	;wreg free
   641   000A1C                     l1304:
   642                           
   643                           ;untrasonido.c: 41: _delay((unsigned long)((1000)*(1000000/4000.0)));
   644   000A1C  0E02               	movlw	2
   645   000A1E  6E18               	movwf	(??_main+1)^0,c
   646   000A20  0E45               	movlw	69
   647   000A22  6E17               	movwf	??_main^0,c
   648   000A24  0EAA               	movlw	170
   649   000A26                     u577:
   650   000A26  2EE8               	decfsz	wreg,f,c
   651   000A28  D7FE               	bra	u577
   652   000A2A  2E17               	decfsz	??_main^0,f,c
   653   000A2C  D7FC               	bra	u577
   654   000A2E  2E18               	decfsz	(??_main+1)^0,f,c
   655   000A30  D7FA               	bra	u577
   656   000A32  D7E2               	goto	l1296
   657   000A34                     __end_of_main:
   658                           	callstack 0
   659                           
   660 ;; *************** function _printf *****************
   661 ;; Defined at:
   662 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\doprnt.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;  f               1   12[COMRAM] PTR const unsigned char 
   665 ;;		 -> STR_2(31), STR_1(20), 
   666 ;; Auto vars:     Size  Location     Type
   667 ;;  tmpval          4    0        struct .
   668 ;;  val             2   19[COMRAM] unsigned int 
   669 ;;  cp              2    0        PTR const unsigned char 
   670 ;;  len             2    0        unsigned int 
   671 ;;  c               1   21[COMRAM] unsigned char 
   672 ;;  prec            1   18[COMRAM] char 
   673 ;;  flag            1   17[COMRAM] unsigned char 
   674 ;;  ap              1   16[COMRAM] PTR void [1]
   675 ;;		 -> ?_printf(2), 
   676 ;; Return value:  Size  Location     Type
   677 ;;                  2   12[COMRAM] int 
   678 ;; Registers used:
   679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   685 ;;      Params:         3       0       0       0       0       0       0       0       0
   686 ;;      Locals:         6       0       0       0       0       0       0       0       0
   687 ;;      Temps:          1       0       0       0       0       0       0       0       0
   688 ;;      Totals:        10       0       0       0       0       0       0       0       0
   689 ;;Total ram usage:       10 bytes
   690 ;; Hardware stack levels used: 1
   691 ;; Hardware stack levels required when called: 2
   692 ;; This function calls:
   693 ;;		___lwdiv
   694 ;;		___lwmod
   695 ;;		_putch
   696 ;; This function is called by:
   697 ;;		_main
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           	psect	text1
   702   000840                     __ptext1:
   703                           	callstack 0
   704   000840                     _printf:
   705                           	callstack 28
   706                           
   707                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
   708                           
   709                           ;incstack = 0
   710   000840  0E0E               	movlw	low (?_printf+1)
   711   000842  6E11               	movwf	printf@ap^0,c
   712                           
   713                           ;doprnt.c: 553: while((c = *f++)) {
   714   000844  D07B               	goto	u500
   715   000846                     l1194:
   716                           
   717                           ;doprnt.c: 555: if(c != '%')
   718   000846  0E25               	movlw	37
   719   000848  1816               	xorwf	printf@c^0,w,c
   720   00084A  B4D8               	btfsc	status,2,c
   721   00084C  D004               	goto	l131
   722                           
   723                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
   724   00084E  5016               	movf	printf@c^0,w,c
   725   000850  ECB4  F005         	call	_putch
   726                           
   727                           ;doprnt.c: 559: continue;
   728   000854  D073               	goto	u500
   729   000856                     l131:
   730                           
   731                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
   732   000856  6A12               	clrf	printf@flag^0,c
   733                           
   734                           ;doprnt.c: 661: switch(c = *f++) {
   735   000858  2A0D               	incf	printf@f^0,f,c
   736   00085A  040D               	decf	printf@f^0,w,c
   737   00085C  6E10               	movwf	??_printf^0,c
   738   00085E  C010  FFF6         	movff	??_printf,tblptrl
   739   000862                     	if	1	;There is more than 1 active tblptr byte
   740   000862  0E08               	movlw	high __smallconst
   741   000864  6EF7               	movwf	tblptrh,c
   742   000866                     	endif
   743   000866                     	if	0	;tblptru may be non-zero
   744   000866                     	endif
   745   000866                     	if	0	;tblptru may be non-zero
   746   000866                     	endif
   747   000866  0008               	tblrd		*
   748   000868  CFF5 F016          	movff	tablat,printf@c
   749   00086C  5016               	movf	printf@c^0,w,c
   750                           
   751                           ; Switch size 1, requested type "simple"
   752                           ; Number of cases is 3, Range of values is 0 to 105
   753                           ; switch strategies available:
   754                           ; Name         Instructions Cycles
   755                           ; simple_byte           10     6 (average)
   756                           ;	Chosen strategy is simple_byte
   757   00086E  0A00               	xorlw	0	; case 0
   758   000870  B4D8               	btfsc	status,2,c
   759   000872  0012               	return	
   760   000874  0A64               	xorlw	100	; case 100
   761   000876  B4D8               	btfsc	status,2,c
   762   000878  D003               	goto	l1202
   763   00087A  0A0D               	xorlw	13	; case 105
   764   00087C  A4D8               	btfss	status,2,c
   765   00087E  D05E               	goto	u500
   766   000880                     l1202:
   767                           
   768                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
   769   000880  5011               	movf	printf@ap^0,w,c
   770   000882  6ED9               	movwf	fsr2l,c
   771   000884  6ADA               	clrf	fsr2h,c
   772   000886  CFDE F014          	movff	postinc2,printf@val
   773   00088A  CFDD F015          	movff	postdec2,printf@val+1
   774   00088E  0E02               	movlw	2
   775   000890  2611               	addwf	printf@ap^0,f,c
   776                           
   777                           ;doprnt.c: 1287: if((int)val < 0) {
   778   000892  AE15               	btfss	(printf@val+1)^0,7,c
   779   000894  D006               	goto	l1212
   780                           
   781                           ;doprnt.c: 1288: flag |= 0x03;
   782   000896  0E03               	movlw	3
   783   000898  1212               	iorwf	printf@flag^0,f,c
   784                           
   785                           ;doprnt.c: 1289: val = -val;
   786   00089A  6C14               	negf	printf@val^0,c
   787   00089C  1E15               	comf	(printf@val+1)^0,f,c
   788   00089E  B0D8               	btfsc	status,0,c
   789   0008A0  2A15               	incf	(printf@val+1)^0,f,c
   790   0008A2                     l1212:
   791                           
   792                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
   793   0008A2  0E01               	movlw	1
   794   0008A4  6E16               	movwf	printf@c^0,c
   795   0008A6                     l1218:
   796                           
   797                           ;doprnt.c: 1332: if(val < dpowers[c])
   798   0008A6  5016               	movf	printf@c^0,w,c
   799   0008A8  0D02               	mullw	2
   800   0008AA  50F3               	movf	243,w,c
   801   0008AC  0F01               	addlw	low _dpowers
   802   0008AE  6E10               	movwf	??_printf^0,c
   803   0008B0  C010  FFF6         	movff	??_printf,tblptrl
   804   0008B4                     	if	1	;There is more than 1 active tblptr byte
   805   0008B4  0E08               	movlw	high __smallconst
   806   0008B6  6EF7               	movwf	tblptrh,c
   807   0008B8                     	endif
   808   0008B8                     	if	0	;tblptru may be non-zero
   809   0008B8                     	endif
   810   0008B8                     	if	0	;tblptru may be non-zero
   811   0008B8                     	endif
   812   0008B8  0009               	tblrd		*+
   813   0008BA  50F5               	movf	tablat,w,c
   814   0008BC  5C14               	subwf	printf@val^0,w,c
   815   0008BE  0009               	tblrd		*+
   816   0008C0  50F5               	movf	tablat,w,c
   817   0008C2  5815               	subwfb	(printf@val+1)^0,w,c
   818   0008C4  A0D8               	btfss	status,0,c
   819   0008C6  D005               	goto	u480
   820   0008C8  2A16               	incf	printf@c^0,f,c
   821   0008CA  0E05               	movlw	5
   822   0008CC  1816               	xorwf	printf@c^0,w,c
   823   0008CE  A4D8               	btfss	status,2,c
   824   0008D0  D7EA               	goto	l1218
   825   0008D2                     u480:
   826                           
   827                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
   828   0008D2  C012  F010         	movff	printf@flag,??_printf
   829   0008D6  0E03               	movlw	3
   830   0008D8  1610               	andwf	??_printf^0,f,c
   831   0008DA  B4D8               	btfsc	status,2,c
   832   0008DC  D003               	goto	l1230
   833                           
   834                           ;doprnt.c: 1465: (putch('-') );
   835   0008DE  0E2D               	movlw	45
   836   0008E0  ECB4  F005         	call	_putch
   837   0008E4                     l1230:
   838                           
   839                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
   840   0008E4  C016  F013         	movff	printf@c,printf@prec
   841                           
   842                           ;doprnt.c: 1500: while(prec--) {
   843   0008E8  D025               	goto	l1236
   844   0008EA                     l1232:
   845                           
   846                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
   847   0008EA  5013               	movf	printf@prec^0,w,c
   848   0008EC  0D02               	mullw	2
   849   0008EE  50F3               	movf	243,w,c
   850   0008F0  0F01               	addlw	low _dpowers
   851   0008F2  6E10               	movwf	??_printf^0,c
   852   0008F4  C010  FFF6         	movff	??_printf,tblptrl
   853   0008F8                     	if	1	;There is more than 1 active tblptr byte
   854   0008F8  0E08               	movlw	high __smallconst
   855   0008FA  6EF7               	movwf	tblptrh,c
   856   0008FC                     	endif
   857   0008FC                     	if	0	;tblptru may be non-zero
   858   0008FC                     	endif
   859   0008FC                     	if	0	;tblptru may be non-zero
   860   0008FC                     	endif
   861   0008FC  0009               	tblrd		*+
   862   0008FE  CFF5 F003          	movff	tablat,___lwdiv@divisor
   863   000902  000A               	tblrd		*-
   864   000904  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
   865   000908  C014  F001         	movff	printf@val,___lwdiv@dividend
   866   00090C  C015  F002         	movff	printf@val+1,___lwdiv@dividend+1
   867   000910  EC1A  F005         	call	___lwdiv	;wreg free
   868   000914  C001  F008         	movff	?___lwdiv,___lwmod@dividend
   869   000918  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
   870   00091C  0E00               	movlw	0
   871   00091E  6E0B               	movwf	(___lwmod@divisor+1)^0,c
   872   000920  0E0A               	movlw	10
   873   000922  6E0A               	movwf	___lwmod@divisor^0,c
   874   000924  EC43  F005         	call	___lwmod	;wreg free
   875   000928  5008               	movf	?___lwmod^0,w,c
   876   00092A  0F30               	addlw	48
   877   00092C  6E16               	movwf	printf@c^0,c
   878                           
   879                           ;doprnt.c: 1549: };doprnt.c: 1550: (putch(c) );
   880   00092E  5016               	movf	printf@c^0,w,c
   881   000930  ECB4  F005         	call	_putch
   882   000934                     l1236:
   883   000934  0613               	decf	printf@prec^0,f,c
   884   000936  2813               	incf	printf@prec^0,w,c
   885   000938  A4D8               	btfss	status,2,c
   886   00093A  D7D7               	goto	l1232
   887   00093C                     u500:
   888   00093C  2A0D               	incf	printf@f^0,f,c
   889   00093E  040D               	decf	printf@f^0,w,c
   890   000940  6E10               	movwf	??_printf^0,c
   891   000942  C010  FFF6         	movff	??_printf,tblptrl
   892   000946                     	if	1	;There is more than 1 active tblptr byte
   893   000946  0E08               	movlw	high __smallconst
   894   000948  6EF7               	movwf	tblptrh,c
   895   00094A                     	endif
   896   00094A                     	if	0	;tblptru may be non-zero
   897   00094A                     	endif
   898   00094A                     	if	0	;tblptru may be non-zero
   899   00094A                     	endif
   900   00094A  0008               	tblrd		*
   901   00094C  CFF5 F016          	movff	tablat,printf@c
   902   000950  5016               	movf	printf@c^0,w,c
   903   000952  B4D8               	btfsc	status,2,c
   904   000954  0012               	return	
   905   000956  D777               	goto	l1194
   906   000958                     __end_of_printf:
   907                           	callstack 0
   908                           
   909 ;; *************** function _putch *****************
   910 ;; Defined at:
   911 ;;		line 98 in file "untrasonido.c"
   912 ;; Parameters:    Size  Location     Type
   913 ;;  data            1    wreg     unsigned char 
   914 ;; Auto vars:     Size  Location     Type
   915 ;;  data            1    0[COMRAM] unsigned char 
   916 ;; Return value:  Size  Location     Type
   917 ;;                  1    wreg      void 
   918 ;; Registers used:
   919 ;;		wreg
   920 ;; Tracked objects:
   921 ;;		On entry : 0/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   925 ;;      Params:         0       0       0       0       0       0       0       0       0
   926 ;;      Locals:         1       0       0       0       0       0       0       0       0
   927 ;;      Temps:          0       0       0       0       0       0       0       0       0
   928 ;;      Totals:         1       0       0       0       0       0       0       0       0
   929 ;;Total ram usage:        1 bytes
   930 ;; Hardware stack levels used: 1
   931 ;; Hardware stack levels required when called: 1
   932 ;; This function calls:
   933 ;;		Nothing
   934 ;; This function is called by:
   935 ;;		_printf
   936 ;; This function uses a non-reentrant model
   937 ;;
   938                           
   939                           	psect	text2
   940   000B68                     __ptext2:
   941                           	callstack 0
   942   000B68                     _putch:
   943                           	callstack 28
   944                           
   945                           ;incstack = 0
   946                           ;putch@data stored from wreg
   947   000B68  6E01               	movwf	putch@data^0,c
   948   000B6A                     
   949                           ;untrasonido.c: 99: while(TRMT==0);
   950   000B6A  A2AC               	btfss	4012,1,c	;volatile
   951   000B6C  D7FE               	goto	l896
   952                           
   953                           ;untrasonido.c: 100: TXREG=data;
   954   000B6E  C001  FFAD         	movff	putch@data,4013	;volatile
   955   000B72  0012               	return		;funcret
   956   000B74                     __end_of_putch:
   957                           	callstack 0
   958                           
   959 ;; *************** function ___lwmod *****************
   960 ;; Defined at:
   961 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lwmod.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;  dividend        2    7[COMRAM] unsigned int 
   964 ;;  divisor         2    9[COMRAM] unsigned int 
   965 ;; Auto vars:     Size  Location     Type
   966 ;;  counter         1   11[COMRAM] unsigned char 
   967 ;; Return value:  Size  Location     Type
   968 ;;                  2    7[COMRAM] unsigned int 
   969 ;; Registers used:
   970 ;;		wreg, status,2, status,0
   971 ;; Tracked objects:
   972 ;;		On entry : 0/0
   973 ;;		On exit  : 0/0
   974 ;;		Unchanged: 0/0
   975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   976 ;;      Params:         4       0       0       0       0       0       0       0       0
   977 ;;      Locals:         1       0       0       0       0       0       0       0       0
   978 ;;      Temps:          0       0       0       0       0       0       0       0       0
   979 ;;      Totals:         5       0       0       0       0       0       0       0       0
   980 ;;Total ram usage:        5 bytes
   981 ;; Hardware stack levels used: 1
   982 ;; Hardware stack levels required when called: 1
   983 ;; This function calls:
   984 ;;		Nothing
   985 ;; This function is called by:
   986 ;;		_printf
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           	psect	text3
   991   000A86                     __ptext3:
   992                           	callstack 0
   993   000A86                     ___lwmod:
   994                           	callstack 28
   995                           
   996                           ;incstack = 0
   997   000A86  500A               	movf	___lwmod@divisor^0,w,c
   998   000A88  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
   999   000A8A  B4D8               	btfsc	status,2,c
  1000   000A8C  D018               	goto	l640
  1001   000A8E  0E01               	movlw	1
  1002   000A90  6E0C               	movwf	___lwmod@counter^0,c
  1003   000A92  D004               	goto	l1148
  1004   000A94                     l1146:
  1005   000A94  90D8               	bcf	status,0,c
  1006   000A96  360A               	rlcf	___lwmod@divisor^0,f,c
  1007   000A98  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  1008   000A9A  2A0C               	incf	___lwmod@counter^0,f,c
  1009   000A9C                     l1148:
  1010   000A9C  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  1011   000A9E  D7FA               	goto	l1146
  1012   000AA0                     u360:
  1013   000AA0  500A               	movf	___lwmod@divisor^0,w,c
  1014   000AA2  5C08               	subwf	___lwmod@dividend^0,w,c
  1015   000AA4  500B               	movf	(___lwmod@divisor+1)^0,w,c
  1016   000AA6  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  1017   000AA8  A0D8               	btfss	status,0,c
  1018   000AAA  D004               	goto	l1154
  1019   000AAC  500A               	movf	___lwmod@divisor^0,w,c
  1020   000AAE  5E08               	subwf	___lwmod@dividend^0,f,c
  1021   000AB0  500B               	movf	(___lwmod@divisor+1)^0,w,c
  1022   000AB2  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  1023   000AB4                     l1154:
  1024   000AB4  90D8               	bcf	status,0,c
  1025   000AB6  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  1026   000AB8  320A               	rrcf	___lwmod@divisor^0,f,c
  1027   000ABA  2E0C               	decfsz	___lwmod@counter^0,f,c
  1028   000ABC  D7F1               	goto	u360
  1029   000ABE                     l640:
  1030   000ABE  C008  F008         	movff	___lwmod@dividend,?___lwmod
  1031   000AC2  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  1032   000AC6  0012               	return		;funcret
  1033   000AC8                     __end_of___lwmod:
  1034                           	callstack 0
  1035                           
  1036 ;; *************** function ___lbmod *****************
  1037 ;; Defined at:
  1038 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbmod.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;  dividend        1    wreg     unsigned char 
  1041 ;;  divisor         1    0[COMRAM] unsigned char 
  1042 ;; Auto vars:     Size  Location     Type
  1043 ;;  dividend        1    1[COMRAM] unsigned char 
  1044 ;;  rem             1    3[COMRAM] unsigned char 
  1045 ;;  counter         1    2[COMRAM] unsigned char 
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  1    wreg      unsigned char 
  1048 ;; Registers used:
  1049 ;;		wreg, status,2, status,0
  1050 ;; Tracked objects:
  1051 ;;		On entry : 0/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1055 ;;      Params:         1       0       0       0       0       0       0       0       0
  1056 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1057 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1058 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1059 ;;Total ram usage:        4 bytes
  1060 ;; Hardware stack levels used: 1
  1061 ;; Hardware stack levels required when called: 1
  1062 ;; This function calls:
  1063 ;;		Nothing
  1064 ;; This function is called by:
  1065 ;;		_main
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           	psect	text4
  1070   000B2E                     __ptext4:
  1071                           	callstack 0
  1072   000B2E                     ___lbmod:
  1073                           	callstack 29
  1074                           
  1075                           ;incstack = 0
  1076                           ;___lbmod@dividend stored from wreg
  1077   000B2E  6E02               	movwf	___lbmod@dividend^0,c
  1078   000B30  0E08               	movlw	8
  1079   000B32  6E03               	movwf	___lbmod@counter^0,c
  1080   000B34  6A04               	clrf	___lbmod@rem^0,c
  1081   000B36                     l1270:
  1082   000B36  90D8               	bcf	status,0,c
  1083   000B38  3402               	rlcf	___lbmod@dividend^0,w,c
  1084   000B3A  3404               	rlcf	___lbmod@rem^0,w,c
  1085   000B3C  6E04               	movwf	___lbmod@rem^0,c
  1086   000B3E  90D8               	bcf	status,0,c
  1087   000B40  3602               	rlcf	___lbmod@dividend^0,f,c
  1088   000B42  5001               	movf	___lbmod@divisor^0,w,c
  1089   000B44  5C04               	subwf	___lbmod@rem^0,w,c
  1090   000B46  A0D8               	btfss	status,0,c
  1091   000B48  D002               	goto	l1278
  1092   000B4A  5001               	movf	___lbmod@divisor^0,w,c
  1093   000B4C  5E04               	subwf	___lbmod@rem^0,f,c
  1094   000B4E                     l1278:
  1095   000B4E  2E03               	decfsz	___lbmod@counter^0,f,c
  1096   000B50  D7F2               	goto	l1270
  1097   000B52  5004               	movf	___lbmod@rem^0,w,c
  1098   000B54  0012               	return		;funcret
  1099   000B56                     __end_of___lbmod:
  1100                           	callstack 0
  1101                           
  1102 ;; *************** function ___lbdiv *****************
  1103 ;; Defined at:
  1104 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lbdiv.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;  dividend        1    wreg     unsigned char 
  1107 ;;  divisor         1    4[COMRAM] unsigned char 
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;  dividend        1    5[COMRAM] unsigned char 
  1110 ;;  quotient        1    7[COMRAM] unsigned char 
  1111 ;;  counter         1    6[COMRAM] unsigned char 
  1112 ;; Return value:  Size  Location     Type
  1113 ;;                  1    wreg      unsigned char 
  1114 ;; Registers used:
  1115 ;;		wreg, status,2, status,0
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1121 ;;      Params:         1       0       0       0       0       0       0       0       0
  1122 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1123 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1124 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1125 ;;Total ram usage:        4 bytes
  1126 ;; Hardware stack levels used: 1
  1127 ;; Hardware stack levels required when called: 1
  1128 ;; This function calls:
  1129 ;;		Nothing
  1130 ;; This function is called by:
  1131 ;;		_main
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           
  1135                           	psect	text5
  1136   000AC8                     __ptext5:
  1137                           	callstack 0
  1138   000AC8                     ___lbdiv:
  1139                           	callstack 29
  1140                           
  1141                           ;incstack = 0
  1142                           ;___lbdiv@dividend stored from wreg
  1143   000AC8  6E06               	movwf	___lbdiv@dividend^0,c
  1144   000ACA  6A08               	clrf	___lbdiv@quotient^0,c
  1145   000ACC  5005               	movf	___lbdiv@divisor^0,w,c
  1146   000ACE  B4D8               	btfsc	status,2,c
  1147   000AD0  D015               	goto	l1262
  1148   000AD2  0E01               	movlw	1
  1149   000AD4  6E07               	movwf	___lbdiv@counter^0,c
  1150   000AD6  D003               	goto	l1250
  1151   000AD8                     l1246:
  1152   000AD8  90D8               	bcf	status,0,c
  1153   000ADA  3605               	rlcf	___lbdiv@divisor^0,f,c
  1154   000ADC  2A07               	incf	___lbdiv@counter^0,f,c
  1155   000ADE                     l1250:
  1156   000ADE  AE05               	btfss	___lbdiv@divisor^0,7,c
  1157   000AE0  D7FB               	goto	l1246
  1158   000AE2                     u530:
  1159   000AE2  90D8               	bcf	status,0,c
  1160   000AE4  3608               	rlcf	___lbdiv@quotient^0,f,c
  1161   000AE6  5005               	movf	___lbdiv@divisor^0,w,c
  1162   000AE8  5C06               	subwf	___lbdiv@dividend^0,w,c
  1163   000AEA  A0D8               	btfss	status,0,c
  1164   000AEC  D003               	goto	l1258
  1165   000AEE  5005               	movf	___lbdiv@divisor^0,w,c
  1166   000AF0  5E06               	subwf	___lbdiv@dividend^0,f,c
  1167   000AF2  8008               	bsf	___lbdiv@quotient^0,0,c
  1168   000AF4                     l1258:
  1169   000AF4  90D8               	bcf	status,0,c
  1170   000AF6  3205               	rrcf	___lbdiv@divisor^0,f,c
  1171   000AF8  2E07               	decfsz	___lbdiv@counter^0,f,c
  1172   000AFA  D7F3               	goto	u530
  1173   000AFC                     l1262:
  1174   000AFC  5008               	movf	___lbdiv@quotient^0,w,c
  1175   000AFE  0012               	return		;funcret
  1176   000B00                     __end_of___lbdiv:
  1177                           	callstack 0
  1178                           
  1179 ;; *************** function _Transmitir *****************
  1180 ;; Defined at:
  1181 ;;		line 94 in file "untrasonido.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;  BufferT         1    wreg     unsigned char 
  1184 ;; Auto vars:     Size  Location     Type
  1185 ;;  BufferT         1    0[COMRAM] unsigned char 
  1186 ;; Return value:  Size  Location     Type
  1187 ;;                  1    wreg      void 
  1188 ;; Registers used:
  1189 ;;		wreg
  1190 ;; Tracked objects:
  1191 ;;		On entry : 0/0
  1192 ;;		On exit  : 0/0
  1193 ;;		Unchanged: 0/0
  1194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1195 ;;      Params:         0       0       0       0       0       0       0       0       0
  1196 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1197 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1198 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1199 ;;Total ram usage:        1 bytes
  1200 ;; Hardware stack levels used: 1
  1201 ;; Hardware stack levels required when called: 1
  1202 ;; This function calls:
  1203 ;;		Nothing
  1204 ;; This function is called by:
  1205 ;;		_main
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           	psect	text6
  1210   000B74                     __ptext6:
  1211                           	callstack 0
  1212   000B74                     _Transmitir:
  1213                           	callstack 29
  1214                           
  1215                           ;incstack = 0
  1216                           ;Transmitir@BufferT stored from wreg
  1217   000B74  6E01               	movwf	Transmitir@BufferT^0,c
  1218   000B76                     
  1219                           ;untrasonido.c: 95: while(TRMT==0);
  1220   000B76  A2AC               	btfss	4012,1,c	;volatile
  1221   000B78  D7FE               	goto	l1020
  1222                           
  1223                           ;untrasonido.c: 96: TXREG=BufferT;
  1224   000B7A  C001  FFAD         	movff	Transmitir@BufferT,4013	;volatile
  1225   000B7E  0012               	return		;funcret
  1226   000B80                     __end_of_Transmitir:
  1227                           	callstack 0
  1228                           
  1229 ;; *************** function _MedirDistancia *****************
  1230 ;; Defined at:
  1231 ;;		line 68 in file "untrasonido.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;		None
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;  aux             1    7[COMRAM] unsigned char 
  1236 ;; Return value:  Size  Location     Type
  1237 ;;                  1    wreg      unsigned char 
  1238 ;; Registers used:
  1239 ;;		wreg, status,2, status,0, cstack
  1240 ;; Tracked objects:
  1241 ;;		On entry : 0/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1245 ;;      Params:         0       0       0       0       0       0       0       0       0
  1246 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1247 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1248 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1249 ;;Total ram usage:        1 bytes
  1250 ;; Hardware stack levels used: 1
  1251 ;; Hardware stack levels required when called: 2
  1252 ;; This function calls:
  1253 ;;		___lwdiv
  1254 ;; This function is called by:
  1255 ;;		_main
  1256 ;; This function uses a non-reentrant model
  1257 ;;
  1258                           
  1259                           	psect	text7
  1260   000958                     __ptext7:
  1261                           	callstack 0
  1262   000958                     _MedirDistancia:
  1263                           	callstack 28
  1264                           
  1265                           ;untrasonido.c: 70: CCP2CON=0b00000100;
  1266                           
  1267                           ;incstack = 0
  1268   000958  0E04               	movlw	4
  1269   00095A  6EBA               	movwf	186,c	;volatile
  1270                           
  1271                           ;untrasonido.c: 71: TMR1=0;
  1272   00095C  0E00               	movlw	0
  1273   00095E  6ECF               	movwf	207,c	;volatile
  1274   000960  0E00               	movlw	0
  1275   000962  6ECE               	movwf	206,c	;volatile
  1276                           
  1277                           ;untrasonido.c: 72: CCP2IF=0;
  1278   000964  90A1               	bcf	4001,0,c	;volatile
  1279                           
  1280                           ;untrasonido.c: 73: RC0=1;
  1281   000966  8082               	bsf	3970,0,c	;volatile
  1282                           
  1283                           ;untrasonido.c: 74: _delay((unsigned long)((10)*(1000000/4000000.0)));
  1284   000968  D000               	nop2		;2 cycle nop
  1285                           
  1286                           ;untrasonido.c: 75: RC0=0;
  1287   00096A  9082               	bcf	3970,0,c	;volatile
  1288                           
  1289                           ;untrasonido.c: 76: etimeout=1;
  1290   00096C  0E01               	movlw	1
  1291   00096E  6E1B               	movwf	_etimeout^0,c
  1292   000970                     l84:
  1293   000970  B282               	btfsc	3970,1,c	;volatile
  1294   000972  D003               	goto	u390
  1295   000974  041B               	decf	_etimeout^0,w,c
  1296   000976  B4D8               	btfsc	status,2,c
  1297   000978  D7FB               	goto	l84
  1298   00097A                     u390:
  1299                           
  1300                           ;untrasonido.c: 79: if(etimeout==0){
  1301   00097A  501B               	movf	_etimeout^0,w,c
  1302   00097C  A4D8               	btfss	status,2,c
  1303   00097E  D002               	goto	l89
  1304                           
  1305                           ;untrasonido.c: 80: return 0;
  1306   000980  0E00               	movlw	0
  1307   000982  0012               	return	
  1308   000984                     l89:
  1309                           
  1310                           ;untrasonido.c: 81: };untrasonido.c: 82: TMR1ON=1;
  1311   000984  80CD               	bsf	4045,0,c	;volatile
  1312   000986                     l91:
  1313   000986  B0A1               	btfsc	4001,0,c	;volatile
  1314   000988  D002               	goto	u420
  1315   00098A  A09E               	btfss	3998,0,c	;volatile
  1316   00098C  D7FC               	goto	l91
  1317   00098E                     u420:
  1318                           
  1319                           ;untrasonido.c: 84: TMR1ON=0;
  1320   00098E  90CD               	bcf	4045,0,c	;volatile
  1321                           
  1322                           ;untrasonido.c: 85: if(TMR1IF==1)
  1323   000990  A09E               	btfss	3998,0,c	;volatile
  1324   000992  D002               	goto	l1182
  1325                           
  1326                           ;untrasonido.c: 86: aux=255;
  1327   000994  6808               	setf	MedirDistancia@aux^0,c
  1328   000996  D016               	goto	l1188
  1329   000998                     l1182:
  1330                           
  1331                           ;untrasonido.c: 87: else{;untrasonido.c: 88: if(CCPR2>=3556)
  1332   000998  0EE4               	movlw	228
  1333   00099A  5CBB               	subwf	187,w,c	;volatile
  1334   00099C  0E0D               	movlw	13
  1335   00099E  58BC               	subwfb	188,w,c	;volatile
  1336   0009A0  A0D8               	btfss	status,0,c
  1337   0009A2  D004               	goto	l1186
  1338                           
  1339                           ;untrasonido.c: 89: CCPR2=3556;
  1340   0009A4  0E0D               	movlw	13
  1341   0009A6  6EBC               	movwf	188,c	;volatile
  1342   0009A8  0EE4               	movlw	228
  1343   0009AA  6EBB               	movwf	187,c	;volatile
  1344   0009AC                     l1186:
  1345                           
  1346                           ;untrasonido.c: 90: aux=CCPR2/(14) ;
  1347   0009AC  CFBB F001          	movff	4027,___lwdiv@dividend	;volatile
  1348   0009B0  CFBC F002          	movff	4028,___lwdiv@dividend+1	;volatile
  1349   0009B4  0E00               	movlw	0
  1350   0009B6  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  1351   0009B8  0E0E               	movlw	14
  1352   0009BA  6E03               	movwf	___lwdiv@divisor^0,c
  1353   0009BC  EC1A  F005         	call	___lwdiv	;wreg free
  1354   0009C0  5001               	movf	?___lwdiv^0,w,c
  1355   0009C2  6E08               	movwf	MedirDistancia@aux^0,c
  1356   0009C4                     l1188:
  1357                           
  1358                           ;untrasonido.c: 91: };untrasonido.c: 92: return aux;
  1359   0009C4  5008               	movf	MedirDistancia@aux^0,w,c
  1360   0009C6  0012               	return		;funcret
  1361   0009C8                     __end_of_MedirDistancia:
  1362                           	callstack 0
  1363                           
  1364 ;; *************** function ___lwdiv *****************
  1365 ;; Defined at:
  1366 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lwdiv.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;  dividend        2    0[COMRAM] unsigned int 
  1369 ;;  divisor         2    2[COMRAM] unsigned int 
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;  quotient        2    4[COMRAM] unsigned int 
  1372 ;;  counter         1    6[COMRAM] unsigned char 
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  2    0[COMRAM] unsigned int 
  1375 ;; Registers used:
  1376 ;;		wreg, status,2, status,0
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1382 ;;      Params:         4       0       0       0       0       0       0       0       0
  1383 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1384 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1385 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1386 ;;Total ram usage:        7 bytes
  1387 ;; Hardware stack levels used: 1
  1388 ;; Hardware stack levels required when called: 1
  1389 ;; This function calls:
  1390 ;;		Nothing
  1391 ;; This function is called by:
  1392 ;;		_main
  1393 ;;		_MedirDistancia
  1394 ;;		_printf
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398                           	psect	text8
  1399   000A34                     __ptext8:
  1400                           	callstack 0
  1401   000A34                     ___lwdiv:
  1402                           	callstack 28
  1403                           
  1404                           ;incstack = 0
  1405   000A34  0E00               	movlw	0
  1406   000A36  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  1407   000A38  0E00               	movlw	0
  1408   000A3A  6E05               	movwf	___lwdiv@quotient^0,c
  1409   000A3C  5003               	movf	___lwdiv@divisor^0,w,c
  1410   000A3E  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1411   000A40  B4D8               	btfsc	status,2,c
  1412   000A42  D01C               	goto	l630
  1413   000A44  0E01               	movlw	1
  1414   000A46  6E07               	movwf	___lwdiv@counter^0,c
  1415   000A48  D004               	goto	l1128
  1416   000A4A                     l1126:
  1417   000A4A  90D8               	bcf	status,0,c
  1418   000A4C  3603               	rlcf	___lwdiv@divisor^0,f,c
  1419   000A4E  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1420   000A50  2A07               	incf	___lwdiv@counter^0,f,c
  1421   000A52                     l1128:
  1422   000A52  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  1423   000A54  D7FA               	goto	l1126
  1424   000A56                     u330:
  1425   000A56  90D8               	bcf	status,0,c
  1426   000A58  3605               	rlcf	___lwdiv@quotient^0,f,c
  1427   000A5A  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1428   000A5C  5003               	movf	___lwdiv@divisor^0,w,c
  1429   000A5E  5C01               	subwf	___lwdiv@dividend^0,w,c
  1430   000A60  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1431   000A62  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1432   000A64  A0D8               	btfss	status,0,c
  1433   000A66  D005               	goto	l1138
  1434   000A68  5003               	movf	___lwdiv@divisor^0,w,c
  1435   000A6A  5E01               	subwf	___lwdiv@dividend^0,f,c
  1436   000A6C  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1437   000A6E  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1438   000A70  8005               	bsf	___lwdiv@quotient^0,0,c
  1439   000A72                     l1138:
  1440   000A72  90D8               	bcf	status,0,c
  1441   000A74  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1442   000A76  3203               	rrcf	___lwdiv@divisor^0,f,c
  1443   000A78  2E07               	decfsz	___lwdiv@counter^0,f,c
  1444   000A7A  D7ED               	goto	u330
  1445   000A7C                     l630:
  1446   000A7C  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1447   000A80  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1448   000A84  0012               	return		;funcret
  1449   000A86                     __end_of___lwdiv:
  1450                           	callstack 0
  1451                           
  1452 ;; *************** function _ISR *****************
  1453 ;; Defined at:
  1454 ;;		line 102 in file "untrasonido.c"
  1455 ;; Parameters:    Size  Location     Type
  1456 ;;		None
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;		None
  1459 ;; Return value:  Size  Location     Type
  1460 ;;                  1    wreg      void 
  1461 ;; Registers used:
  1462 ;;		wreg, status,2, status,0
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1468 ;;      Params:         0       0       0       0       0       0       0       0       0
  1469 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1470 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1471 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1472 ;;Total ram usage:        0 bytes
  1473 ;; Hardware stack levels used: 1
  1474 ;; This function calls:
  1475 ;;		Nothing
  1476 ;; This function is called by:
  1477 ;;		Interrupt level 2
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481                           	psect	intcode
  1482   000008                     __pintcode:
  1483                           	callstack 0
  1484   000008                     _ISR:
  1485                           	callstack 28
  1486                           
  1487                           ;incstack = 0
  1488   000008  821C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1489   00000A  ED80  F005         	call	int_func,f	;refresh shadow registers
  1490                           
  1491                           	psect	intcode_body
  1492   000B00                     __pintcode_body:
  1493                           	callstack 28
  1494   000B00                     int_func:
  1495                           	callstack 28
  1496   000B00  0006               	pop		; remove dummy address from shadow register refresh
  1497                           
  1498                           ;untrasonido.c: 103: TMR0IF=0;
  1499   000B02  94F2               	bcf	4082,2,c	;volatile
  1500                           
  1501                           ;untrasonido.c: 104: TMR0=3036;
  1502   000B04  0E0B               	movlw	11
  1503   000B06  6ED7               	movwf	215,c	;volatile
  1504   000B08  0EDC               	movlw	220
  1505   000B0A  6ED6               	movwf	214,c	;volatile
  1506                           
  1507                           ;untrasonido.c: 105: LATD0=LATD0^1;
  1508   000B0C  B08C               	btfsc	3980,0,c	;volatile
  1509   000B0E  D002               	goto	i2u28_40
  1510   000B10  808C               	bsf	3980,0,c	;volatile
  1511   000B12  D001               	goto	i2u29_45
  1512   000B14                     i2u28_40:
  1513   000B14  908C               	bcf	3980,0,c	;volatile
  1514   000B16                     i2u29_45:
  1515                           
  1516                           ;untrasonido.c: 106: if(etimeout==1)
  1517   000B16  041B               	decf	_etimeout^0,w,c
  1518   000B18  A4D8               	btfss	status,2,c
  1519   000B1A  D002               	goto	i2l115
  1520                           
  1521                           ;untrasonido.c: 107: ctimeout++;
  1522   000B1C  2A1A               	incf	_ctimeout^0,f,c
  1523   000B1E  D001               	goto	i2l1116
  1524   000B20                     i2l115:
  1525                           
  1526                           ;untrasonido.c: 108: else;untrasonido.c: 109: ctimeout=0;
  1527   000B20  6A1A               	clrf	_ctimeout^0,c
  1528   000B22                     i2l1116:
  1529                           
  1530                           ;untrasonido.c: 110: if(ctimeout>=2)
  1531   000B22  0E01               	movlw	1
  1532   000B24  641A               	cpfsgt	_ctimeout^0,c
  1533   000B26  D001               	goto	i2l118
  1534                           
  1535                           ;untrasonido.c: 111: etimeout=0;
  1536   000B28  6A1B               	clrf	_etimeout^0,c
  1537   000B2A                     i2l118:
  1538   000B2A  921C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1539   000B2C  0011               	retfie		f
  1540   000B2E                     __end_of_ISR:
  1541                           	callstack 0
  1542                           
  1543                           	psect	rparam
  1544   000001                     ___rparam_used  equ	1
  1545   000000                     ___param_bank   equ	0
  1546   000000                     __Lparam        equ	__Lrparam
  1547   000000                     __Hparam        equ	__Hrparam
  1548                           
  1549                           	psect	temp
  1550   00001C                     btemp:
  1551                           	callstack 0
  1552   00001C                     	ds	1
  1553   00001C                     int$flags       set	btemp
  1554   00001D                     wtemp8          set	btemp+1
  1555   00001D                     ttemp5          set	btemp+1
  1556   000020                     ttemp6          set	btemp+4
  1557   000024                     ttemp7          set	btemp+8
  1558                           
  1559                           	psect	idloc
  1560                           
  1561                           ;Config register IDLOC0 @ 0x200000
  1562                           ;	unspecified, using default values
  1563   200000                     	org	2097152
  1564   200000  FF                 	db	255
  1565                           
  1566                           ;Config register IDLOC1 @ 0x200001
  1567                           ;	unspecified, using default values
  1568   200001                     	org	2097153
  1569   200001  FF                 	db	255
  1570                           
  1571                           ;Config register IDLOC2 @ 0x200002
  1572                           ;	unspecified, using default values
  1573   200002                     	org	2097154
  1574   200002  FF                 	db	255
  1575                           
  1576                           ;Config register IDLOC3 @ 0x200003
  1577                           ;	unspecified, using default values
  1578   200003                     	org	2097155
  1579   200003  FF                 	db	255
  1580                           
  1581                           ;Config register IDLOC4 @ 0x200004
  1582                           ;	unspecified, using default values
  1583   200004                     	org	2097156
  1584   200004  FF                 	db	255
  1585                           
  1586                           ;Config register IDLOC5 @ 0x200005
  1587                           ;	unspecified, using default values
  1588   200005                     	org	2097157
  1589   200005  FF                 	db	255
  1590                           
  1591                           ;Config register IDLOC6 @ 0x200006
  1592                           ;	unspecified, using default values
  1593   200006                     	org	2097158
  1594   200006  FF                 	db	255
  1595                           
  1596                           ;Config register IDLOC7 @ 0x200007
  1597                           ;	unspecified, using default values
  1598   200007                     	org	2097159
  1599   200007  FF                 	db	255
  1600                           
  1601                           	psect	config
  1602                           
  1603                           ;Config register CONFIG1L @ 0x300000
  1604                           ;	unspecified, using default values
  1605                           ;	PLL Prescaler Selection bits
  1606                           ;	PLLDIV = 0x0, unprogrammed default
  1607                           ;	System Clock Postscaler Selection bits
  1608                           ;	CPUDIV = 0x0, unprogrammed default
  1609                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1610                           ;	USBDIV = 0x0, unprogrammed default
  1611   300000                     	org	3145728
  1612   300000  00                 	db	0
  1613                           
  1614                           ;Config register CONFIG1H @ 0x300001
  1615                           ;	Oscillator Selection bits
  1616                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  1617                           ;	Fail-Safe Clock Monitor Enable bit
  1618                           ;	FCMEN = 0x0, unprogrammed default
  1619                           ;	Internal/External Oscillator Switchover bit
  1620                           ;	IESO = 0x0, unprogrammed default
  1621   300001                     	org	3145729
  1622   300001  09                 	db	9
  1623                           
  1624                           ;Config register CONFIG2L @ 0x300002
  1625                           ;	unspecified, using default values
  1626                           ;	Power-up Timer Enable bit
  1627                           ;	PWRT = 0x1, unprogrammed default
  1628                           ;	Brown-out Reset Enable bits
  1629                           ;	BOR = 0x3, unprogrammed default
  1630                           ;	Brown-out Reset Voltage bits
  1631                           ;	BORV = 0x3, unprogrammed default
  1632                           ;	USB Voltage Regulator Enable bit
  1633                           ;	VREGEN = 0x0, unprogrammed default
  1634   300002                     	org	3145730
  1635   300002  1F                 	db	31
  1636                           
  1637                           ;Config register CONFIG2H @ 0x300003
  1638                           ;	Watchdog Timer Enable bit
  1639                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1640                           ;	Watchdog Timer Postscale Select bits
  1641                           ;	WDTPS = 0xF, unprogrammed default
  1642   300003                     	org	3145731
  1643   300003  1E                 	db	30
  1644                           
  1645                           ; Padding undefined space
  1646   300004                     	org	3145732
  1647   300004  FF                 	db	255
  1648                           
  1649                           ;Config register CONFIG3H @ 0x300005
  1650                           ;	unspecified, using default values
  1651                           ;	CCP2 MUX bit
  1652                           ;	CCP2MX = 0x1, unprogrammed default
  1653                           ;	PORTB A/D Enable bit
  1654                           ;	PBADEN = 0x1, unprogrammed default
  1655                           ;	Low-Power Timer 1 Oscillator Enable bit
  1656                           ;	LPT1OSC = 0x0, unprogrammed default
  1657                           ;	MCLR Pin Enable bit
  1658                           ;	MCLRE = 0x1, unprogrammed default
  1659   300005                     	org	3145733
  1660   300005  83                 	db	131
  1661                           
  1662                           ;Config register CONFIG4L @ 0x300006
  1663                           ;	Stack Full/Underflow Reset Enable bit
  1664                           ;	STVREN = 0x1, unprogrammed default
  1665                           ;	Single-Supply ICSP Enable bit
  1666                           ;	LVP = OFF, Single-Supply ICSP disabled
  1667                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1668                           ;	ICPRT = 0x0, unprogrammed default
  1669                           ;	Extended Instruction Set Enable bit
  1670                           ;	XINST = 0x0, unprogrammed default
  1671                           ;	Background Debugger Enable bit
  1672                           ;	DEBUG = 0x1, unprogrammed default
  1673   300006                     	org	3145734
  1674   300006  81                 	db	129
  1675                           
  1676                           ; Padding undefined space
  1677   300007                     	org	3145735
  1678   300007  FF                 	db	255
  1679                           
  1680                           ;Config register CONFIG5L @ 0x300008
  1681                           ;	unspecified, using default values
  1682                           ;	Code Protection bit
  1683                           ;	CP0 = 0x1, unprogrammed default
  1684                           ;	Code Protection bit
  1685                           ;	CP1 = 0x1, unprogrammed default
  1686                           ;	Code Protection bit
  1687                           ;	CP2 = 0x1, unprogrammed default
  1688                           ;	Code Protection bit
  1689                           ;	CP3 = 0x1, unprogrammed default
  1690   300008                     	org	3145736
  1691   300008  0F                 	db	15
  1692                           
  1693                           ;Config register CONFIG5H @ 0x300009
  1694                           ;	unspecified, using default values
  1695                           ;	Boot Block Code Protection bit
  1696                           ;	CPB = 0x1, unprogrammed default
  1697                           ;	Data EEPROM Code Protection bit
  1698                           ;	CPD = 0x1, unprogrammed default
  1699   300009                     	org	3145737
  1700   300009  C0                 	db	192
  1701                           
  1702                           ;Config register CONFIG6L @ 0x30000A
  1703                           ;	unspecified, using default values
  1704                           ;	Write Protection bit
  1705                           ;	WRT0 = 0x1, unprogrammed default
  1706                           ;	Write Protection bit
  1707                           ;	WRT1 = 0x1, unprogrammed default
  1708                           ;	Write Protection bit
  1709                           ;	WRT2 = 0x1, unprogrammed default
  1710                           ;	Write Protection bit
  1711                           ;	WRT3 = 0x1, unprogrammed default
  1712   30000A                     	org	3145738
  1713   30000A  0F                 	db	15
  1714                           
  1715                           ;Config register CONFIG6H @ 0x30000B
  1716                           ;	unspecified, using default values
  1717                           ;	Configuration Register Write Protection bit
  1718                           ;	WRTC = 0x1, unprogrammed default
  1719                           ;	Boot Block Write Protection bit
  1720                           ;	WRTB = 0x1, unprogrammed default
  1721                           ;	Data EEPROM Write Protection bit
  1722                           ;	WRTD = 0x1, unprogrammed default
  1723   30000B                     	org	3145739
  1724   30000B  E0                 	db	224
  1725                           
  1726                           ;Config register CONFIG7L @ 0x30000C
  1727                           ;	unspecified, using default values
  1728                           ;	Table Read Protection bit
  1729                           ;	EBTR0 = 0x1, unprogrammed default
  1730                           ;	Table Read Protection bit
  1731                           ;	EBTR1 = 0x1, unprogrammed default
  1732                           ;	Table Read Protection bit
  1733                           ;	EBTR2 = 0x1, unprogrammed default
  1734                           ;	Table Read Protection bit
  1735                           ;	EBTR3 = 0x1, unprogrammed default
  1736   30000C                     	org	3145740
  1737   30000C  0F                 	db	15
  1738                           
  1739                           ;Config register CONFIG7H @ 0x30000D
  1740                           ;	unspecified, using default values
  1741                           ;	Boot Block Table Read Protection bit
  1742                           ;	EBTRB = 0x1, unprogrammed default
  1743   30000D                     	org	3145741
  1744   30000D  40                 	db	64
  1745                           tosu	equ	0xFFF
  1746                           tosh	equ	0xFFE
  1747                           tosl	equ	0xFFD
  1748                           stkptr	equ	0xFFC
  1749                           pclatu	equ	0xFFB
  1750                           pclath	equ	0xFFA
  1751                           pcl	equ	0xFF9
  1752                           tblptru	equ	0xFF8
  1753                           tblptrh	equ	0xFF7
  1754                           tblptrl	equ	0xFF6
  1755                           tablat	equ	0xFF5
  1756                           prodh	equ	0xFF4
  1757                           prodl	equ	0xFF3
  1758                           indf0	equ	0xFEF
  1759                           postinc0	equ	0xFEE
  1760                           postdec0	equ	0xFED
  1761                           preinc0	equ	0xFEC
  1762                           plusw0	equ	0xFEB
  1763                           fsr0h	equ	0xFEA
  1764                           fsr0l	equ	0xFE9
  1765                           wreg	equ	0xFE8
  1766                           indf1	equ	0xFE7
  1767                           postinc1	equ	0xFE6
  1768                           postdec1	equ	0xFE5
  1769                           preinc1	equ	0xFE4
  1770                           plusw1	equ	0xFE3
  1771                           fsr1h	equ	0xFE2
  1772                           fsr1l	equ	0xFE1
  1773                           bsr	equ	0xFE0
  1774                           indf2	equ	0xFDF
  1775                           postinc2	equ	0xFDE
  1776                           postdec2	equ	0xFDD
  1777                           preinc2	equ	0xFDC
  1778                           plusw2	equ	0xFDB
  1779                           fsr2h	equ	0xFDA
  1780                           fsr2l	equ	0xFD9
  1781                           status	equ	0xFD8

Data Sizes:
    Strings     51
    Constant    10
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     25      27
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 31
		 -> STR_1(CODE[20]), STR_2(CODE[31]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv
    ___lbdiv->___lbmod
    _MedirDistancia->___lwdiv

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1561
                                             22 COMRAM     3     3      0
                     _MedirDistancia
                         _Transmitir
                            ___lbdiv
                            ___lbmod
                            ___lwdiv
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              18    15      3     732
                                             12 COMRAM    10     7      3
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     161
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lbmod                                              4     3      1     169
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___lbdiv                                              4     3      1     172
                                              4 COMRAM     4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Transmitir                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _MedirDistancia                                       1     1      0     193
                                              7 COMRAM     1     1      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     168
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MedirDistancia
     ___lwdiv
   _Transmitir
   ___lbdiv
     ___lbmod (ARG)
   ___lbmod
   ___lwdiv
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch

 _ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0       0      0.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     25      27     28.7%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRlh         42      0       0      0.0%
BITBIGSFRll         34      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      27      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Jul 22 01:04:27 2025

      Transmitir@BufferT 0001                       l91 0986                       l84 0970  
                     l89 0984                      l131 0856                      l630 0A7C  
                    l640 0ABE                      l896 0B6A                      _GIE 7F97  
                    _RC0 7C10                      _RC1 7C11                      u330 0A56  
                    u420 098E                      u500 093C                      u360 0AA0  
                    u530 0AE2                      _ISR 0008                      u390 097A  
                    u480 08D2                      u577 0A26                      wreg 0FE8  
                   ?_ISR 0001                     l1020 0B76                     l1202 0880  
                   l1212 08A2                     l1126 0A4A                     l1230 08E4  
                   l1302 0A0E                     l1128 0A52                     l1232 08EA  
                   l1304 0A1C                     l1138 0A72                     l1250 0ADE  
                   l1154 0AB4                     l1146 0A94                     l1218 08A6  
                   l1148 0A9C                     l1236 0934                     l1182 0998  
                   l1246 0AD8                     l1262 0AFC                     l1270 0B36  
                   l1186 09AC                     l1258 0AF4                     l1194 0846  
                   l1188 09C4                     l1278 0B4E                     l1296 09F8  
                   STR_1 082A                     STR_2 080B                     _TMR0 0FD6  
                   _TMR1 0FCE                     _TRMT 7D61                     _main 09C8  
                   fsr2h 0FDA                     fsr2l 0FD9                     btemp 001C  
                   prodl 0FF3                     start 000E             ___param_bank 0000  
                  ??_ISR 0001                    ?_main 0001          __end_of___lbdiv 0B00  
                  _CCPR2 0FBB          __end_of___lbmod 0B56                    _T0CON 0FD5  
                  _T1CON 0FCD                    _LATC0 7C58                    _LATD0 7C60  
        __end_of___lwdiv 0A86          __end_of___lwmod 0AC8                    i2l115 0B20  
                  i2l118 0B2A                    _RCSTA 0FAB                    _SPBRG 0FAF  
                  _TXREG 0FAD                    _TXSTA 0FAC          __end_of_dpowers 080B  
                  _putch 0B68                    main@d 0019                    tablat 0FF5  
                  ttemp5 001D                    ttemp6 0020                    ttemp7 0024  
                  status 0FD8                    wtemp8 001D          ___lbdiv@divisor 0005  
        ___lbdiv@counter 0007          __initialization 0B56             __end_of_main 0A34  
                 ??_main 0017            __activetblptr 0002                   _CCP2IF 7D08  
                 ?_putch 0001                   i2l1116 0B22                   _TMR0IE 7F95  
                 _TMR0IF 7F92                   _TMR1IF 7CF0                   _TMR0ON 7EAF  
                 _TMR1ON 7E68                   _TRISC0 7CA0                   _TRISD0 7CA8  
              ??___lbdiv 0006                ??___lbmod 0002                ??___lwdiv 0005  
              ??___lwmod 000C                   isa$std 0001                   _printf 0840  
           __mediumconst 0000                   tblptrh 0FF7                   tblptrl 0FF6  
                 tblptru 0FF8               _Transmitir 0B74        MedirDistancia@aux 0008  
       ___lbdiv@dividend 0006         ??_MedirDistancia 0008          ___lbmod@divisor 0001  
             __accesstop 0060  __end_of__initialization 0B5A          ___lbmod@counter 0003  
          ___rparam_used 0001           __pcstackCOMRAM 0001            __end_of_putch 0B74  
       ___lbdiv@quotient 0008                  ??_putch 0001                  _CCP2CON 0FBA  
                _BAUDCON 0FB8                  ?_printf 000D                  i2u28_40 0B14  
                i2u29_45 0B16              ?_Transmitir 0001                  __Hparam 0000  
                __Lparam 0000                  ___lbdiv 0AC8                  ___lbmod 0B2E  
                ___lwdiv 0A34                  ___lwmod 0A86             __psmallconst 0800  
                __pcinit 0B56                  __ramtop 0800                  __ptext0 09C8  
                __ptext1 0840                  __ptext2 0B68                  __ptext3 0A86  
                __ptext4 0B2E                  __ptext5 0AC8                  __ptext6 0B74  
                __ptext7 0958                  __ptext8 0A34                  _dpowers 0801  
         __pintcode_body 0B00     end_of_initialization 0B5A            __Lmediumconst 0000  
                int_func 0B00                  printf@c 0016                  printf@f 000D  
                postdec2 0FDD                  postinc2 0FDE         ___lbmod@dividend 0002  
            ___lbmod@rem 0004           __end_of_printf 0958      start_initialization 0B56  
            __end_of_ISR 0B2E                 ??_printf 0010              __pbssCOMRAM 001A  
           ??_Transmitir 0001         ___lwdiv@dividend 0001                __pintcode 0008  
               ?___lbdiv 0005                 ?___lbmod 0001                 ?___lwdiv 0001  
               ?___lwmod 0008       __end_of_Transmitir 0B80              __smallconst 0800  
       ___lwdiv@quotient 0005               printf@flag 0012               printf@prec 0013  
               __Hrparam 0000                 __Lrparam 0000          ___lwdiv@divisor 0003  
        ___lwdiv@counter 0007                 _ctimeout 001A                 _etimeout 001B  
               isa$xinst 0000           _MedirDistancia 0958                 int$flags 001C  
              printf@val 0014                putch@data 0001                 intlevel2 0000  
       ___lwmod@dividend 0008   __end_of_MedirDistancia 09C8                 printf@ap 0011  
        ___lwmod@divisor 000A          ___lwmod@counter 000C          ?_MedirDistancia 0001  
