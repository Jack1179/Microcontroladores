

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Jun 19 15:14:18 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    37   000000                     
    38                           ; Generated 25/07/2024 GMT
    39                           ; 
    40                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4550 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72   000FE0                     bsr             equ	4064
    73   000FE9                     fsr0            equ	4073
    74   000FEA                     fsr0h           equ	4074
    75   000FE9                     fsr0l           equ	4073
    76   000FE1                     fsr1            equ	4065
    77   000FE2                     fsr1h           equ	4066
    78   000FE1                     fsr1l           equ	4065
    79   000FD9                     fsr2            equ	4057
    80   000FDA                     fsr2h           equ	4058
    81   000FD9                     fsr2l           equ	4057
    82   000FEF                     indf0           equ	4079
    83   000FE7                     indf1           equ	4071
    84   000FDF                     indf2           equ	4063
    85   000FF2                     intcon          equ	4082
    86   000000                     nvmcon          equ	0
    87   000FF9                     pcl             equ	4089
    88   000FFA                     pclath          equ	4090
    89   000FFB                     pclatu          equ	4091
    90   000FEB                     plusw0          equ	4075
    91   000FE3                     plusw1          equ	4067
    92   000FDB                     plusw2          equ	4059
    93   000FED                     postdec0        equ	4077
    94   000FE5                     postdec1        equ	4069
    95   000FDD                     postdec2        equ	4061
    96   000FEE                     postinc0        equ	4078
    97   000FE6                     postinc1        equ	4070
    98   000FDE                     postinc2        equ	4062
    99   000FEC                     preinc0         equ	4076
   100   000FE4                     preinc1         equ	4068
   101   000FDC                     preinc2         equ	4060
   102   000FF3                     prod            equ	4083
   103   000FF4                     prodh           equ	4084
   104   000FF3                     prodl           equ	4083
   105   000FD8                     status          equ	4056
   106   000FF5                     tablat          equ	4085
   107   000FF6                     tblptr          equ	4086
   108   000FF7                     tblptrh         equ	4087
   109   000FF6                     tblptrl         equ	4086
   110   000FF8                     tblptru         equ	4088
   111   000FFD                     tosl            equ	4093
   112   000FE8                     wreg            equ	4072
   113   000F62                     SPPDATA         equ	3938	;# 
   114   000F63                     SPPCFG          equ	3939	;# 
   115   000F64                     SPPEPS          equ	3940	;# 
   116   000F65                     SPPCON          equ	3941	;# 
   117   000F66                     UFRM            equ	3942	;# 
   118   000F66                     UFRML           equ	3942	;# 
   119   000F67                     UFRMH           equ	3943	;# 
   120   000F68                     UIR             equ	3944	;# 
   121   000F69                     UIE             equ	3945	;# 
   122   000F6A                     UEIR            equ	3946	;# 
   123   000F6B                     UEIE            equ	3947	;# 
   124   000F6C                     USTAT           equ	3948	;# 
   125   000F6D                     UCON            equ	3949	;# 
   126   000F6E                     UADDR           equ	3950	;# 
   127   000F6F                     UCFG            equ	3951	;# 
   128   000F70                     UEP0            equ	3952	;# 
   129   000F71                     UEP1            equ	3953	;# 
   130   000F72                     UEP2            equ	3954	;# 
   131   000F73                     UEP3            equ	3955	;# 
   132   000F74                     UEP4            equ	3956	;# 
   133   000F75                     UEP5            equ	3957	;# 
   134   000F76                     UEP6            equ	3958	;# 
   135   000F77                     UEP7            equ	3959	;# 
   136   000F78                     UEP8            equ	3960	;# 
   137   000F79                     UEP9            equ	3961	;# 
   138   000F7A                     UEP10           equ	3962	;# 
   139   000F7B                     UEP11           equ	3963	;# 
   140   000F7C                     UEP12           equ	3964	;# 
   141   000F7D                     UEP13           equ	3965	;# 
   142   000F7E                     UEP14           equ	3966	;# 
   143   000F7F                     UEP15           equ	3967	;# 
   144   000F80                     PORTA           equ	3968	;# 
   145   000F81                     PORTB           equ	3969	;# 
   146   000F82                     PORTC           equ	3970	;# 
   147   000F83                     PORTD           equ	3971	;# 
   148   000F84                     PORTE           equ	3972	;# 
   149   000F89                     LATA            equ	3977	;# 
   150   000F8A                     LATB            equ	3978	;# 
   151   000F8B                     LATC            equ	3979	;# 
   152   000F8C                     LATD            equ	3980	;# 
   153   000F8D                     LATE            equ	3981	;# 
   154   000F92                     TRISA           equ	3986	;# 
   155   000F92                     DDRA            equ	3986	;# 
   156   000F93                     TRISB           equ	3987	;# 
   157   000F93                     DDRB            equ	3987	;# 
   158   000F94                     TRISC           equ	3988	;# 
   159   000F94                     DDRC            equ	3988	;# 
   160   000F95                     TRISD           equ	3989	;# 
   161   000F95                     DDRD            equ	3989	;# 
   162   000F96                     TRISE           equ	3990	;# 
   163   000F96                     DDRE            equ	3990	;# 
   164   000F9B                     OSCTUNE         equ	3995	;# 
   165   000F9D                     PIE1            equ	3997	;# 
   166   000F9E                     PIR1            equ	3998	;# 
   167   000F9F                     IPR1            equ	3999	;# 
   168   000FA0                     PIE2            equ	4000	;# 
   169   000FA1                     PIR2            equ	4001	;# 
   170   000FA2                     IPR2            equ	4002	;# 
   171   000FA6                     EECON1          equ	4006	;# 
   172   000FA7                     EECON2          equ	4007	;# 
   173   000FA8                     EEDATA          equ	4008	;# 
   174   000FA9                     EEADR           equ	4009	;# 
   175   000FAB                     RCSTA           equ	4011	;# 
   176   000FAB                     RCSTA1          equ	4011	;# 
   177   000FAC                     TXSTA           equ	4012	;# 
   178   000FAC                     TXSTA1          equ	4012	;# 
   179   000FAD                     TXREG           equ	4013	;# 
   180   000FAD                     TXREG1          equ	4013	;# 
   181   000FAE                     RCREG           equ	4014	;# 
   182   000FAE                     RCREG1          equ	4014	;# 
   183   000FAF                     SPBRG           equ	4015	;# 
   184   000FAF                     SPBRG1          equ	4015	;# 
   185   000FB0                     SPBRGH          equ	4016	;# 
   186   000FB1                     T3CON           equ	4017	;# 
   187   000FB2                     TMR3            equ	4018	;# 
   188   000FB2                     TMR3L           equ	4018	;# 
   189   000FB3                     TMR3H           equ	4019	;# 
   190   000FB4                     CMCON           equ	4020	;# 
   191   000FB5                     CVRCON          equ	4021	;# 
   192   000FB6                     ECCP1AS         equ	4022	;# 
   193   000FB6                     CCP1AS          equ	4022	;# 
   194   000FB7                     ECCP1DEL        equ	4023	;# 
   195   000FB7                     CCP1DEL         equ	4023	;# 
   196   000FB8                     BAUDCON         equ	4024	;# 
   197   000FB8                     BAUDCTL         equ	4024	;# 
   198   000FBA                     CCP2CON         equ	4026	;# 
   199   000FBB                     CCPR2           equ	4027	;# 
   200   000FBB                     CCPR2L          equ	4027	;# 
   201   000FBC                     CCPR2H          equ	4028	;# 
   202   000FBD                     CCP1CON         equ	4029	;# 
   203   000FBD                     ECCP1CON        equ	4029	;# 
   204   000FBE                     CCPR1           equ	4030	;# 
   205   000FBE                     CCPR1L          equ	4030	;# 
   206   000FBF                     CCPR1H          equ	4031	;# 
   207   000FC0                     ADCON2          equ	4032	;# 
   208   000FC1                     ADCON1          equ	4033	;# 
   209   000FC2                     ADCON0          equ	4034	;# 
   210   000FC3                     ADRES           equ	4035	;# 
   211   000FC3                     ADRESL          equ	4035	;# 
   212   000FC4                     ADRESH          equ	4036	;# 
   213   000FC5                     SSPCON2         equ	4037	;# 
   214   000FC6                     SSPCON1         equ	4038	;# 
   215   000FC7                     SSPSTAT         equ	4039	;# 
   216   000FC8                     SSPADD          equ	4040	;# 
   217   000FC9                     SSPBUF          equ	4041	;# 
   218   000FCA                     T2CON           equ	4042	;# 
   219   000FCB                     PR2             equ	4043	;# 
   220   000FCB                     MEMCON          equ	4043	;# 
   221   000FCC                     TMR2            equ	4044	;# 
   222   000FCD                     T1CON           equ	4045	;# 
   223   000FCE                     TMR1            equ	4046	;# 
   224   000FCE                     TMR1L           equ	4046	;# 
   225   000FCF                     TMR1H           equ	4047	;# 
   226   000FD0                     RCON            equ	4048	;# 
   227   000FD1                     WDTCON          equ	4049	;# 
   228   000FD2                     HLVDCON         equ	4050	;# 
   229   000FD2                     LVDCON          equ	4050	;# 
   230   000FD3                     OSCCON          equ	4051	;# 
   231   000FD5                     T0CON           equ	4053	;# 
   232   000FD6                     TMR0            equ	4054	;# 
   233   000FD6                     TMR0L           equ	4054	;# 
   234   000FD7                     TMR0H           equ	4055	;# 
   235   000FD8                     STATUS          equ	4056	;# 
   236   000FD9                     FSR2            equ	4057	;# 
   237   000FD9                     FSR2L           equ	4057	;# 
   238   000FDA                     FSR2H           equ	4058	;# 
   239   000FDB                     PLUSW2          equ	4059	;# 
   240   000FDC                     PREINC2         equ	4060	;# 
   241   000FDD                     POSTDEC2        equ	4061	;# 
   242   000FDE                     POSTINC2        equ	4062	;# 
   243   000FDF                     INDF2           equ	4063	;# 
   244   000FE0                     BSR             equ	4064	;# 
   245   000FE1                     FSR1            equ	4065	;# 
   246   000FE1                     FSR1L           equ	4065	;# 
   247   000FE2                     FSR1H           equ	4066	;# 
   248   000FE3                     PLUSW1          equ	4067	;# 
   249   000FE4                     PREINC1         equ	4068	;# 
   250   000FE5                     POSTDEC1        equ	4069	;# 
   251   000FE6                     POSTINC1        equ	4070	;# 
   252   000FE7                     INDF1           equ	4071	;# 
   253   000FE8                     WREG            equ	4072	;# 
   254   000FE9                     FSR0            equ	4073	;# 
   255   000FE9                     FSR0L           equ	4073	;# 
   256   000FEA                     FSR0H           equ	4074	;# 
   257   000FEB                     PLUSW0          equ	4075	;# 
   258   000FEC                     PREINC0         equ	4076	;# 
   259   000FED                     POSTDEC0        equ	4077	;# 
   260   000FEE                     POSTINC0        equ	4078	;# 
   261   000FEF                     INDF0           equ	4079	;# 
   262   000FF0                     INTCON3         equ	4080	;# 
   263   000FF1                     INTCON2         equ	4081	;# 
   264   000FF2                     INTCON          equ	4082	;# 
   265   000FF3                     PROD            equ	4083	;# 
   266   000FF3                     PRODL           equ	4083	;# 
   267   000FF4                     PRODH           equ	4084	;# 
   268   000FF5                     TABLAT          equ	4085	;# 
   269   000FF6                     TBLPTR          equ	4086	;# 
   270   000FF6                     TBLPTRL         equ	4086	;# 
   271   000FF7                     TBLPTRH         equ	4087	;# 
   272   000FF8                     TBLPTRU         equ	4088	;# 
   273   000FF9                     PCLAT           equ	4089	;# 
   274   000FF9                     PC              equ	4089	;# 
   275   000FF9                     PCL             equ	4089	;# 
   276   000FFA                     PCLATH          equ	4090	;# 
   277   000FFB                     PCLATU          equ	4091	;# 
   278   000FFC                     STKPTR          equ	4092	;# 
   279   000FFD                     TOS             equ	4093	;# 
   280   000FFD                     TOSL            equ	4093	;# 
   281   000FFE                     TOSH            equ	4094	;# 
   282   000FFF                     TOSU            equ	4095	;# 
   283                           
   284                           	psect	idataCOMRAM
   285   0012EE                     __pidataCOMRAM:
   286                           	callstack 0
   287                           
   288                           ;initializer for _lcd_backlight
   289   0012EE  01                 	db	1
   290                           
   291                           	psect	smallconst
   292   000800                     __psmallconst:
   293                           	callstack 0
   294   000800  00                 	db	0
   295   000801                     _teclas:
   296                           	callstack 0
   297   000801  31                 	db	49
   298   000802  32                 	db	50
   299   000803  33                 	db	51
   300   000804  41                 	db	65
   301   000805  34                 	db	52
   302   000806  35                 	db	53
   303   000807  36                 	db	54
   304   000808  42                 	db	66
   305   000809  37                 	db	55
   306   00080A  38                 	db	56
   307   00080B  39                 	db	57
   308   00080C  43                 	db	67
   309   00080D  2A                 	db	42
   310   00080E  30                 	db	48
   311   00080F  23                 	db	35
   312   000810  44                 	db	68
   313   000811                     __end_of_teclas:
   314                           	callstack 0
   315   007F96                     _PEIE           set	32662
   316   007F97                     _GIE            set	32663
   317   007E87                     _IPEN           set	32391
   318   007EAF                     _TMR0ON         set	32431
   319   007F95                     _TMR0IE         set	32661
   320   007F92                     _TMR0IF         set	32658
   321   007C5A                     _LATC2          set	31834
   322   007CA2                     _TRISC2         set	31906
   323   007F8F                     _RBPU           set	32655
   324   007C66                     _LATD6          set	31846
   325   007CAE                     _TRISD6         set	31918
   326   007C61                     _LATD1          set	31841
   327   007C65                     _LATD5          set	31845
   328   007C64                     _LATD4          set	31844
   329   007C63                     _LATD3          set	31843
   330   007C62                     _LATD2          set	31842
   331   007C60                     _LATD0          set	31840
   332   000FD6                     _TMR0           set	4054
   333   000F81                     _PORTB          set	3969
   334   000FD5                     _T0CON          set	4053
   335   000F8D                     _LATE           set	3981
   336   000F96                     _TRISE          set	3990
   337   000F8B                     _LATC           set	3979
   338   000F94                     _TRISC          set	3988
   339   000F8A                     _LATB           set	3978
   340   000F93                     _TRISB          set	3987
   341   000F8C                     _LATD           set	3980
   342   000F95                     _TRISD          set	3989
   343   000811                     STR_12:
   344   000811  20                 	db	32
   345   000812  43                 	db	67	;'C'
   346   000813  6F                 	db	111	;'o'
   347   000814  6E                 	db	110	;'n'
   348   000815  74                 	db	116	;'t'
   349   000816  61                 	db	97	;'a'
   350   000817  64                 	db	100	;'d'
   351   000818  6F                 	db	111	;'o'
   352   000819  72                 	db	114	;'r'
   353   00081A  20                 	db	32
   354   00081B  44                 	db	68	;'D'
   355   00081C  65                 	db	101	;'e'
   356   00081D  20                 	db	32
   357   00081E  4F                 	db	79	;'O'
   358   00081F  62                 	db	98	;'b'
   359   000820  6A                 	db	106	;'j'
   360   000821  65                 	db	101	;'e'
   361   000822  74                 	db	116	;'t'
   362   000823  6F                 	db	111	;'o'
   363   000824  73                 	db	115	;'s'
   364   000825  20                 	db	32
   365   000826  00                 	db	0
   366   000827                     STR_5:
   367   000827  43                 	db	67	;'C'
   368   000828  6F                 	db	111	;'o'
   369   000829  6E                 	db	110	;'n'
   370   00082A  74                 	db	116	;'t'
   371   00082B  65                 	db	101	;'e'
   372   00082C  6F                 	db	111	;'o'
   373   00082D  20                 	db	32
   374   00082E  43                 	db	67	;'C'
   375   00082F  6F                 	db	111	;'o'
   376   000830  6D                 	db	109	;'m'
   377   000831  70                 	db	112	;'p'
   378   000832  6C                 	db	108	;'l'
   379   000833  65                 	db	101	;'e'
   380   000834  74                 	db	116	;'t'
   381   000835  6F                 	db	111	;'o'
   382   000836  21                 	db	33
   383   000837  00                 	db	0
   384   000838                     STR_2:
   385   000838  21                 	db	33
   386   000839  20                 	db	32
   387   00083A  45                 	db	69	;'E'
   388   00083B  4D                 	db	77	;'M'
   389   00083C  45                 	db	69	;'E'
   390   00083D  52                 	db	82	;'R'
   391   00083E  47                 	db	71	;'G'
   392   00083F  45                 	db	69	;'E'
   393   000840  4E                 	db	78	;'N'
   394   000841  43                 	db	67	;'C'
   395   000842  49                 	db	73	;'I'
   396   000843  41                 	db	65	;'A'
   397   000844  20                 	db	32
   398   000845  21                 	db	33
   399   000846  00                 	db	0
   400   000847                     STR_1:
   401   000847  49                 	db	73	;'I'
   402   000848  6E                 	db	110	;'n'
   403   000849  67                 	db	103	;'g'
   404   00084A  72                 	db	114	;'r'
   405   00084B  65                 	db	101	;'e'
   406   00084C  73                 	db	115	;'s'
   407   00084D  65                 	db	101	;'e'
   408   00084E  20                 	db	32
   409   00084F  76                 	db	118	;'v'
   410   000850  61                 	db	97	;'a'
   411   000851  6C                 	db	108	;'l'
   412   000852  6F                 	db	111	;'o'
   413   000853  72                 	db	114	;'r'
   414   000854  3A                 	db	58	;':'
   415   000855  00                 	db	0
   416   000856                     STR_4:
   417   000856  52                 	db	82	;'R'
   418   000857  61                 	db	97	;'a'
   419   000858  6E                 	db	110	;'n'
   420   000859  67                 	db	103	;'g'
   421   00085A  6F                 	db	111	;'o'
   422   00085B  20                 	db	32
   423   00085C  69                 	db	105	;'i'
   424   00085D  6E                 	db	110	;'n'
   425   00085E  76                 	db	118	;'v'
   426   00085F  61                 	db	97	;'a'
   427   000860  6C                 	db	108	;'l'
   428   000861  69                 	db	105	;'i'
   429   000862  64                 	db	100	;'d'
   430   000863  6F                 	db	111	;'o'
   431   000864  00                 	db	0
   432   000865                     STR_3:
   433   000865  52                 	db	82	;'R'
   434   000866  65                 	db	101	;'e'
   435   000867  73                 	db	115	;'s'
   436   000868  65                 	db	101	;'e'
   437   000869  74                 	db	116	;'t'
   438   00086A  20                 	db	32
   439   00086B  6D                 	db	109	;'m'
   440   00086C  61                 	db	97	;'a'
   441   00086D  6E                 	db	110	;'n'
   442   00086E  75                 	db	117	;'u'
   443   00086F  61                 	db	97	;'a'
   444   000870  6C                 	db	108	;'l'
   445   000871  00                 	db	0
   446   000872                     STR_6:
   447   000872  50                 	db	80	;'P'
   448   000873  72                 	db	114	;'r'
   449   000874  65                 	db	101	;'e'
   450   000875  73                 	db	115	;'s'
   451   000876  69                 	db	105	;'i'
   452   000877  6F                 	db	111	;'o'
   453   000878  6E                 	db	110	;'n'
   454   000879  65                 	db	101	;'e'
   455   00087A  20                 	db	32
   456   00087B  4F                 	db	79	;'O'
   457   00087C  4B                 	db	75	;'K'
   458   00087D  00                 	db	0
   459   00087E                     STR_10:
   460   00087E  46                 	db	70	;'F'
   461   00087F  61                 	db	97	;'a'
   462   000880  6C                 	db	108	;'l'
   463   000881  74                 	db	116	;'t'
   464   000882  61                 	db	97	;'a'
   465   000883  6E                 	db	110	;'n'
   466   000884  74                 	db	116	;'t'
   467   000885  65                 	db	101	;'e'
   468   000886  73                 	db	115	;'s'
   469   000887  3A                 	db	58	;':'
   470   000888  00                 	db	0
   471   000889                     STR_9:
   472   000889  4F                 	db	79	;'O'
   473   00088A  62                 	db	98	;'b'
   474   00088B  6A                 	db	106	;'j'
   475   00088C  65                 	db	101	;'e'
   476   00088D  74                 	db	116	;'t'
   477   00088E  69                 	db	105	;'i'
   478   00088F  76                 	db	118	;'v'
   479   000890  6F                 	db	111	;'o'
   480   000891  3A                 	db	58	;':'
   481   000892  00                 	db	0
   482   000872                     STR_8           equ	STR_6
   483   000847                     STR_11          equ	STR_1
   484   000827                     STR_7           equ	STR_5
   485   000893  00                 	db	0	; dummy byte at the end
   486   000002                     __activetblptr  equ	2
   487                           
   488                           ; #config settings
   489                           
   490                           	psect	cinit
   491   001214                     __pcinit:
   492                           	callstack 0
   493   001214                     start_initialization:
   494                           	callstack 0
   495   001214                     __initialization:
   496                           	callstack 0
   497                           
   498                           ; Initialize objects allocated to COMRAM (1 bytes)
   499                           ; load TBLPTR registers with __pidataCOMRAM
   500   001214  0EEE               	movlw	low __pidataCOMRAM
   501   001216  6EF6               	movwf	tblptrl,c
   502   001218  0E12               	movlw	high __pidataCOMRAM
   503   00121A  6EF7               	movwf	tblptrh,c
   504   00121C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   505   00121E  6EF8               	movwf	tblptru,c
   506   001220  0009               	tblrd		*+	;fetch initializer
   507   001222  CFF5 F01D          	movff	tablat,__pdataCOMRAM
   508                           
   509                           ; Clear objects allocated to COMRAM (12 bytes)
   510   001226  EE00  F011         	lfsr	0,__pbssCOMRAM
   511   00122A  0E0C               	movlw	12
   512   00122C                     clear_0:
   513   00122C  6AEE               	clrf	postinc0,c
   514   00122E  06E8               	decf	wreg,f,c
   515   001230  E1FD               	bnz	clear_0
   516   001232                     end_of_initialization:
   517                           	callstack 0
   518   001232                     __end_of__initialization:
   519                           	callstack 0
   520   001232  901E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   521   001234  921E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   522   001236  0E00               	movlw	low (__Lmediumconst shr (0+16))
   523   001238  6EF8               	movwf	tblptru,c
   524   00123A  0100               	movlb	0
   525   00123C  EF4A  F004         	goto	_main	;jump to C main() function
   526                           
   527                           	psect	bssCOMRAM
   528   000011                     __pbssCOMRAM:
   529                           	callstack 0
   530   000011                     _inactividad:
   531                           	callstack 0
   532   000011                     	ds	4
   533   000015                     _input:
   534                           	callstack 0
   535   000015                     	ds	2
   536   000017                     _contador:
   537                           	callstack 0
   538   000017                     	ds	2
   539   000019                     _objetivo:
   540                           	callstack 0
   541   000019                     	ds	2
   542   00001B                     _estado:
   543                           	callstack 0
   544   00001B                     	ds	2
   545                           
   546                           	psect	dataCOMRAM
   547   00001D                     __pdataCOMRAM:
   548                           	callstack 0
   549   00001D                     _lcd_backlight:
   550                           	callstack 0
   551   00001D                     	ds	1
   552                           
   553                           	psect	cstackCOMRAM
   554   000001                     __pcstackCOMRAM:
   555                           	callstack 0
   556   000001                     ?___awdiv:
   557                           	callstack 0
   558   000001                     ?___awmod:
   559                           	callstack 0
   560   000001                     ?___lwdiv:
   561                           	callstack 0
   562   000001                     ?___lwmod:
   563                           	callstack 0
   564   000001                     ___awdiv@dividend:
   565                           	callstack 0
   566   000001                     ___awmod@dividend:
   567                           	callstack 0
   568   000001                     ___lwdiv@dividend:
   569                           	callstack 0
   570   000001                     ___lwmod@dividend:
   571                           	callstack 0
   572   000001                     ??_Lcd_Cmd:
   573   000001                     ??_Teclado4x4:
   574   000001                     ??_Lcd_Char:
   575   000001                     
   576                           ; 1 bytes @ 0x0
   577   000001                     	ds	2
   578   000003                     Lcd_Cmd@cmd:
   579                           	callstack 0
   580   000003                     Lcd_Char@data:
   581                           	callstack 0
   582   000003                     Teclado4x4@fila:
   583                           	callstack 0
   584   000003                     ___awdiv@divisor:
   585                           	callstack 0
   586   000003                     ___awmod@divisor:
   587                           	callstack 0
   588   000003                     ___lwdiv@divisor:
   589                           	callstack 0
   590   000003                     ___lwmod@divisor:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x2
   594   000003                     	ds	1
   595   000004                     Lcd_String@str:
   596                           	callstack 0
   597   000004                     Lcd_Set_Cursor@column:
   598                           	callstack 0
   599   000004                     ??_Lcd_Init:
   600   000004                     
   601                           ; 1 bytes @ 0x3
   602   000004                     	ds	1
   603   000005                     Lcd_Set_Cursor@row:
   604                           	callstack 0
   605   000005                     ___awdiv@counter:
   606                           	callstack 0
   607   000005                     ___awmod@counter:
   608                           	callstack 0
   609   000005                     ___lwmod@counter:
   610                           	callstack 0
   611   000005                     Teclado4x4@col:
   612                           	callstack 0
   613   000005                     ___lwdiv@quotient:
   614                           	callstack 0
   615   000005                     
   616                           ; 1 bytes @ 0x4
   617   000005                     	ds	1
   618   000006                     ___awdiv@sign:
   619                           	callstack 0
   620   000006                     ___awmod@sign:
   621                           	callstack 0
   622   000006                     _Lcd_Set_Cursor$101:
   623                           	callstack 0
   624   000006                     unidad@i:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x5
   628   000006                     	ds	1
   629   000007                     ___lwdiv@counter:
   630                           	callstack 0
   631   000007                     ___awdiv@quotient:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0x6
   635   000007                     	ds	1
   636   000008                     Lcd_Set_Cursor@pos:
   637                           	callstack 0
   638   000008                     color@i:
   639                           	callstack 0
   640   000008                     ??_unidad:
   641                           
   642                           ; 1 bytes @ 0x7
   643   000008                     	ds	1
   644   000009                     ??_lcd_animacion_bienvenida:
   645   000009                     
   646                           ; 1 bytes @ 0x8
   647   000009                     	ds	1
   648   00000A                     lcd_animacion_bienvenida@i:
   649                           	callstack 0
   650   00000A                     ??_color:
   651                           
   652                           ; 1 bytes @ 0x9
   653   00000A                     	ds	2
   654   00000C                     mostrar_conteo@faltan:
   655                           	callstack 0
   656   00000C                     lcd_animacion_bienvenida@i_154:
   657                           	callstack 0
   658   00000C                     
   659                           ; 1 bytes @ 0xB
   660   00000C                     	ds	2
   661   00000E                     ??_main:
   662                           
   663                           ; 1 bytes @ 0xD
   664   00000E                     	ds	2
   665   000010                     main@tecla:
   666                           	callstack 0
   667                           
   668                           ; 1 bytes @ 0xF
   669   000010                     	ds	1
   670                           
   671 ;;
   672 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   673 ;;
   674 ;; *************** function _main *****************
   675 ;; Defined at:
   676 ;;		line 43 in file "laboratorio_4.c"
   677 ;; Parameters:    Size  Location     Type
   678 ;;		None
   679 ;; Auto vars:     Size  Location     Type
   680 ;;  tecla           1   15[COMRAM] unsigned char 
   681 ;; Return value:  Size  Location     Type
   682 ;;                  1    wreg      void 
   683 ;; Registers used:
   684 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   685 ;; Tracked objects:
   686 ;;		On entry : 0/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   690 ;;      Params:         0       0       0       0       0       0       0       0       0
   691 ;;      Locals:         1       0       0       0       0       0       0       0       0
   692 ;;      Temps:          2       0       0       0       0       0       0       0       0
   693 ;;      Totals:         3       0       0       0       0       0       0       0       0
   694 ;;Total ram usage:        3 bytes
   695 ;; Hardware stack levels required when called: 4
   696 ;; This function calls:
   697 ;;		_Lcd_Char
   698 ;;		_Lcd_Clear
   699 ;;		_Lcd_Init
   700 ;;		_Lcd_Set_Cursor
   701 ;;		_Lcd_String
   702 ;;		_Teclado4x4
   703 ;;		___lwdiv
   704 ;;		___lwmod
   705 ;;		_lcd_animacion_bienvenida
   706 ;;		_mostrar_conteo
   707 ;;		_mostrar_valor
   708 ;;		_unidad
   709 ;; This function is called by:
   710 ;;		Startup code after reset
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           	psect	text0
   715   000894                     __ptext0:
   716                           	callstack 0
   717   000894                     _main:
   718                           	callstack 27
   719                           
   720                           ;laboratorio_4.c: 45: Lcd_Init();
   721                           
   722                           ;incstack = 0
   723   000894  ECEC  F008         	call	_Lcd_Init	;wreg free
   724                           
   725                           ;laboratorio_4.c: 46: TRISD = 0x00; LATD = 0x00;
   726   000898  6A95               	clrf	149,c	;volatile
   727   00089A  6A8C               	clrf	140,c	;volatile
   728                           
   729                           ;laboratorio_4.c: 47: TRISD6 = 0;
   730   00089C  9C95               	bcf	3989,6,c	;volatile
   731                           
   732                           ;laboratorio_4.c: 48: LATD6 = 1;
   733   00089E  8C8C               	bsf	3980,6,c	;volatile
   734                           
   735                           ;laboratorio_4.c: 51: TRISB = 0b11110000; LATB = 0x00;
   736   0008A0  0EF0               	movlw	240
   737   0008A2  6E93               	movwf	147,c	;volatile
   738   0008A4  6A8A               	clrf	138,c	;volatile
   739                           
   740                           ;laboratorio_4.c: 52: RBPU = 0;
   741   0008A6  9EF1               	bcf	4081,7,c	;volatile
   742                           
   743                           ;laboratorio_4.c: 53: _delay((unsigned long)((1000)*(1000000/4000.0)));
   744   0008A8  0E02               	movlw	2
   745   0008AA  6E0F               	movwf	(??_main+1)^0,c
   746   0008AC  0E45               	movlw	69
   747   0008AE  6E0E               	movwf	??_main^0,c
   748   0008B0  0EAA               	movlw	170
   749   0008B2                     u1547:
   750   0008B2  2EE8               	decfsz	wreg,f,c
   751   0008B4  D7FE               	bra	u1547
   752   0008B6  2E0E               	decfsz	??_main^0,f,c
   753   0008B8  D7FC               	bra	u1547
   754   0008BA  2E0F               	decfsz	(??_main+1)^0,f,c
   755   0008BC  D7FA               	bra	u1547
   756                           
   757                           ;laboratorio_4.c: 55: TRISC = 0x00; LATC = 0x00;
   758   0008BE  6A94               	clrf	148,c	;volatile
   759   0008C0  6A8B               	clrf	139,c	;volatile
   760                           
   761                           ;laboratorio_4.c: 56: TRISE = 0x00; LATE = 0x00;
   762   0008C2  6A96               	clrf	150,c	;volatile
   763   0008C4  6A8D               	clrf	141,c	;volatile
   764                           
   765                           ;laboratorio_4.c: 57: TRISC2 = 0; LATC2 = 0;
   766   0008C6  9494               	bcf	3988,2,c	;volatile
   767   0008C8  948B               	bcf	3979,2,c	;volatile
   768                           
   769                           ;laboratorio_4.c: 60: T0CON = 0b00000001;
   770   0008CA  0E01               	movlw	1
   771   0008CC  6ED5               	movwf	213,c	;volatile
   772                           
   773                           ;laboratorio_4.c: 61: TMR0 = 3036;
   774   0008CE  0E0B               	movlw	11
   775   0008D0  6ED7               	movwf	215,c	;volatile
   776   0008D2  0EDC               	movlw	220
   777   0008D4  6ED6               	movwf	214,c	;volatile
   778                           
   779                           ;laboratorio_4.c: 62: TMR0IF = 0;
   780   0008D6  94F2               	bcf	4082,2,c	;volatile
   781                           
   782                           ;laboratorio_4.c: 63: TMR0IE = 1;
   783   0008D8  8AF2               	bsf	4082,5,c	;volatile
   784                           
   785                           ;laboratorio_4.c: 64: TMR0ON = 1;
   786   0008DA  8ED5               	bsf	4053,7,c	;volatile
   787                           
   788                           ;laboratorio_4.c: 66: IPEN = 0;
   789   0008DC  9ED0               	bcf	4048,7,c	;volatile
   790                           
   791                           ;laboratorio_4.c: 67: GIE = 1;
   792   0008DE  8EF2               	bsf	4082,7,c	;volatile
   793                           
   794                           ;laboratorio_4.c: 68: PEIE = 1;
   795   0008E0  8CF2               	bsf	4082,6,c	;volatile
   796                           
   797                           ;laboratorio_4.c: 71: lcd_animacion_bienvenida();
   798   0008E2  ECB5  F007         	call	_lcd_animacion_bienvenida	;wreg free
   799                           
   800                           ;laboratorio_4.c: 72: estado = 1;
   801   0008E6  0E00               	movlw	0
   802   0008E8  6E1C               	movwf	(_estado+1)^0,c
   803   0008EA  0E01               	movlw	1
   804   0008EC  6E1B               	movwf	_estado^0,c
   805                           
   806                           ;laboratorio_4.c: 74: Lcd_Clear();
   807   0008EE  EC67  F009         	call	_Lcd_Clear	;wreg free
   808                           
   809                           ;laboratorio_4.c: 75: Lcd_Set_Cursor(1, 1);
   810   0008F2  0E01               	movlw	1
   811   0008F4  6E04               	movwf	Lcd_Set_Cursor@column^0,c
   812   0008F6  0E01               	movlw	1
   813   0008F8  EC34  F009         	call	_Lcd_Set_Cursor
   814                           
   815                           ;laboratorio_4.c: 76: Lcd_String("Ingrese valor:");
   816   0008FC  0E47               	movlw	low STR_1
   817   0008FE  6E04               	movwf	Lcd_String@str^0,c
   818   000900  EC20  F009         	call	_Lcd_String	;wreg free
   819   000904                     l1815:
   820                           
   821                           ;laboratorio_4.c: 79: char tecla = Teclado4x4();
   822   000904  EC55  F007         	call	_Teclado4x4	;wreg free
   823   000908  6E10               	movwf	main@tecla^0,c
   824                           
   825                           ;laboratorio_4.c: 81: if (tecla == 'D') {
   826   00090A  0E44               	movlw	68
   827   00090C  1810               	xorwf	main@tecla^0,w,c
   828   00090E  A4D8               	btfss	status,2,c
   829   000910  D01C               	goto	l1835
   830                           
   831                           ;laboratorio_4.c: 82: estado = 4;
   832   000912  0E00               	movlw	0
   833   000914  6E1C               	movwf	(_estado+1)^0,c
   834   000916  0E04               	movlw	4
   835   000918  6E1B               	movwf	_estado^0,c
   836                           
   837                           ;laboratorio_4.c: 83: Lcd_Clear();
   838   00091A  EC67  F009         	call	_Lcd_Clear	;wreg free
   839                           
   840                           ;laboratorio_4.c: 84: Lcd_Set_Cursor(1, 1);
   841   00091E  0E01               	movlw	1
   842   000920  6E04               	movwf	Lcd_Set_Cursor@column^0,c
   843   000922  0E01               	movlw	1
   844   000924  EC34  F009         	call	_Lcd_Set_Cursor
   845                           
   846                           ;laboratorio_4.c: 85: Lcd_String("! EMERGENCIA !");
   847   000928  0E38               	movlw	low STR_2
   848   00092A  6E04               	movwf	Lcd_String@str^0,c
   849   00092C  EC20  F009         	call	_Lcd_String	;wreg free
   850                           
   851                           ;laboratorio_4.c: 86: Lcd_Set_Cursor(2, 1);
   852   000930  0E01               	movlw	1
   853   000932  6E04               	movwf	Lcd_Set_Cursor@column^0,c
   854   000934  0E02               	movlw	2
   855   000936  EC34  F009         	call	_Lcd_Set_Cursor
   856                           
   857                           ;laboratorio_4.c: 87: Lcd_String("Reset manual");
   858   00093A  0E65               	movlw	low STR_3
   859   00093C  6E04               	movwf	Lcd_String@str^0,c
   860   00093E  EC20  F009         	call	_Lcd_String	;wreg free
   861                           
   862                           ;laboratorio_4.c: 88: LATE = 0b00000001;
   863   000942  0E01               	movlw	1
   864   000944  6E8D               	movwf	141,c	;volatile
   865                           
   866                           ;laboratorio_4.c: 89: TMR0ON = 0;
   867   000946  9ED5               	bcf	4053,7,c	;volatile
   868   000948                     l124:
   869   000948  D7FF               	goto	l124
   870   00094A                     l1835:
   871                           
   872                           ;laboratorio_4.c: 92: };laboratorio_4.c: 94: if (tecla != 0) {
   873   00094A  5010               	movf	main@tecla^0,w,c
   874   00094C  B4D8               	btfsc	status,2,c
   875   00094E  D7DA               	goto	l1815
   876                           
   877                           ;laboratorio_4.c: 95: inactividad = 0;
   878   000950  0E00               	movlw	0
   879   000952  6E11               	movwf	_inactividad^0,c
   880   000954  0E00               	movlw	0
   881   000956  6E12               	movwf	(_inactividad+1)^0,c
   882   000958  0E00               	movlw	0
   883   00095A  6E13               	movwf	(_inactividad+2)^0,c
   884   00095C  0E00               	movlw	0
   885   00095E  6E14               	movwf	(_inactividad+3)^0,c
   886                           
   887                           ;laboratorio_4.c: 97: if (tecla == 'C') {
   888   000960  0E43               	movlw	67
   889   000962  1810               	xorwf	main@tecla^0,w,c
   890   000964  A4D8               	btfss	status,2,c
   891   000966  D13B               	goto	l1949
   892                           
   893                           ;laboratorio_4.c: 98: lcd_backlight = !lcd_backlight;
   894   000968  501D               	movf	_lcd_backlight^0,w,c
   895   00096A  A4D8               	btfss	status,2,c
   896   00096C  D002               	goto	u1360
   897   00096E  0E01               	movlw	1
   898   000970  D001               	goto	u1370
   899   000972                     u1360:
   900   000972  0E00               	movlw	0
   901   000974                     u1370:
   902   000974  6E1D               	movwf	_lcd_backlight^0,c
   903                           
   904                           ;laboratorio_4.c: 99: LATD6 = lcd_backlight;
   905   000976  A01D               	btfss	_lcd_backlight^0,0,c
   906   000978  D002               	goto	u1380
   907   00097A  8C8C               	bsf	3980,6,c	;volatile
   908   00097C  D130               	goto	l1949
   909   00097E                     u1380:
   910   00097E  9C8C               	bcf	3980,6,c	;volatile
   911   000980  D12E               	goto	l1949
   912   000982                     l1845:
   913                           
   914                           ;laboratorio_4.c: 104: if (tecla >= '0' && tecla <= '9') {
   915   000982  0E2F               	movlw	47
   916   000984  6410               	cpfsgt	main@tecla^0,c
   917   000986  D044               	goto	l1863
   918   000988  0E3A               	movlw	58
   919   00098A  6010               	cpfslt	main@tecla^0,c
   920   00098C  D041               	goto	l1863
   921                           
   922                           ;laboratorio_4.c: 105: input = input * 10 + (tecla - '0');
   923   00098E  0E0A               	movlw	10
   924   000990  0215               	mulwf	_input^0,c
   925   000992  CFF3 F00E          	movff	prodl,??_main
   926   000996  CFF4 F00F          	movff	prodh,??_main+1
   927   00099A  0216               	mulwf	(_input+1)^0,c
   928   00099C  50F3               	movf	prodl,w,c
   929   00099E  260F               	addwf	(??_main+1)^0,f,c
   930   0009A0  5010               	movf	main@tecla^0,w,c
   931   0009A2  260E               	addwf	??_main^0,f,c
   932   0009A4  0E00               	movlw	0
   933   0009A6  220F               	addwfc	(??_main+1)^0,f,c
   934   0009A8  0ED0               	movlw	208
   935   0009AA  240E               	addwf	??_main^0,w,c
   936   0009AC  6E15               	movwf	_input^0,c
   937   0009AE  0EFF               	movlw	255
   938   0009B0  200F               	addwfc	(??_main+1)^0,w,c
   939   0009B2  6E16               	movwf	(_input+1)^0,c
   940                           
   941                           ;laboratorio_4.c: 106: if (input > 99) input = 0;
   942   0009B4  5016               	movf	(_input+1)^0,w,c
   943   0009B6  E104               	bnz	u1420
   944   0009B8  0E64               	movlw	100
   945   0009BA  5C15               	subwf	_input^0,w,c
   946   0009BC  A0D8               	btfss	status,0,c
   947   0009BE  D004               	goto	l1855
   948   0009C0                     u1420:
   949   0009C0  0E00               	movlw	0
   950   0009C2  6E16               	movwf	(_input+1)^0,c
   951   0009C4  0E00               	movlw	0
   952   0009C6  6E15               	movwf	_input^0,c
   953   0009C8                     l1855:
   954                           
   955                           ;laboratorio_4.c: 107: mostrar_valor();
   956   0009C8  EC46  F009         	call	_mostrar_valor	;wreg free
   957                           
   958                           ;laboratorio_4.c: 108: Lcd_Set_Cursor(2, 7);
   959   0009CC  0E07               	movlw	7
   960   0009CE  6E04               	movwf	Lcd_Set_Cursor@column^0,c
   961   0009D0  0E02               	movlw	2
   962   0009D2  EC34  F009         	call	_Lcd_Set_Cursor
   963                           
   964                           ;laboratorio_4.c: 109: Lcd_Char((input / 10) + '0');
   965   0009D6  C015  F001         	movff	_input,___lwdiv@dividend
   966   0009DA  C016  F002         	movff	_input+1,___lwdiv@dividend+1
   967   0009DE  0E00               	movlw	0
   968   0009E0  6E04               	movwf	(___lwdiv@divisor+1)^0,c
   969   0009E2  0E0A               	movlw	10
   970   0009E4  6E03               	movwf	___lwdiv@divisor^0,c
   971   0009E6  ECA2  F008         	call	___lwdiv	;wreg free
   972   0009EA  5001               	movf	?___lwdiv^0,w,c
   973   0009EC  0F30               	addlw	48
   974   0009EE  EC83  F006         	call	_Lcd_Char
   975                           
   976                           ;laboratorio_4.c: 110: Lcd_Char((input % 10) + '0');
   977   0009F2  C015  F001         	movff	_input,___lwmod@dividend
   978   0009F6  C016  F002         	movff	_input+1,___lwmod@dividend+1
   979   0009FA  0E00               	movlw	0
   980   0009FC  6E04               	movwf	(___lwmod@divisor+1)^0,c
   981   0009FE  0E0A               	movlw	10
   982   000A00  6E03               	movwf	___lwmod@divisor^0,c
   983   000A02  ECCB  F008         	call	___lwmod	;wreg free
   984   000A06  5001               	movf	?___lwmod^0,w,c
   985   000A08  0F30               	addlw	48
   986   000A0A  EC83  F006         	call	_Lcd_Char
   987                           
   988                           ;laboratorio_4.c: 111: } else if (tecla == '*') {
   989   000A0E  D0F9               	goto	l1951
   990   000A10                     l1863:
   991   000A10  0E2A               	movlw	42
   992   000A12  1810               	xorwf	main@tecla^0,w,c
   993   000A14  A4D8               	btfss	status,2,c
   994   000A16  D032               	goto	l1875
   995                           
   996                           ;laboratorio_4.c: 112: input = input / 10;
   997   000A18  C015  F001         	movff	_input,___lwdiv@dividend
   998   000A1C  C016  F002         	movff	_input+1,___lwdiv@dividend+1
   999   000A20  0E00               	movlw	0
  1000   000A22  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  1001   000A24  0E0A               	movlw	10
  1002   000A26  6E03               	movwf	___lwdiv@divisor^0,c
  1003   000A28  ECA2  F008         	call	___lwdiv	;wreg free
  1004   000A2C  C001  F015         	movff	?___lwdiv,_input
  1005   000A30  C002  F016         	movff	?___lwdiv+1,_input+1
  1006                           
  1007                           ;laboratorio_4.c: 113: mostrar_valor();
  1008   000A34  EC46  F009         	call	_mostrar_valor	;wreg free
  1009                           
  1010                           ;laboratorio_4.c: 114: Lcd_Set_Cursor(2, 7);
  1011   000A38  0E07               	movlw	7
  1012   000A3A  6E04               	movwf	Lcd_Set_Cursor@column^0,c
  1013   000A3C  0E02               	movlw	2
  1014   000A3E  EC34  F009         	call	_Lcd_Set_Cursor
  1015                           
  1016                           ;laboratorio_4.c: 115: Lcd_Char((input / 10) + '0');
  1017   000A42  C015  F001         	movff	_input,___lwdiv@dividend
  1018   000A46  C016  F002         	movff	_input+1,___lwdiv@dividend+1
  1019   000A4A  0E00               	movlw	0
  1020   000A4C  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  1021   000A4E  0E0A               	movlw	10
  1022   000A50  6E03               	movwf	___lwdiv@divisor^0,c
  1023   000A52  ECA2  F008         	call	___lwdiv	;wreg free
  1024   000A56  5001               	movf	?___lwdiv^0,w,c
  1025   000A58  0F30               	addlw	48
  1026   000A5A  EC83  F006         	call	_Lcd_Char
  1027                           
  1028                           ;laboratorio_4.c: 116: Lcd_Char((input % 10) + '0');
  1029   000A5E  C015  F001         	movff	_input,___lwmod@dividend
  1030   000A62  C016  F002         	movff	_input+1,___lwmod@dividend+1
  1031   000A66  0E00               	movlw	0
  1032   000A68  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1033   000A6A  0E0A               	movlw	10
  1034   000A6C  6E03               	movwf	___lwmod@divisor^0,c
  1035   000A6E  ECCB  F008         	call	___lwmod	;wreg free
  1036   000A72  5001               	movf	?___lwmod^0,w,c
  1037   000A74  0F30               	addlw	48
  1038   000A76  EC83  F006         	call	_Lcd_Char
  1039                           
  1040                           ;laboratorio_4.c: 117: } else if (tecla == '#') {
  1041   000A7A  D0C3               	goto	l1951
  1042   000A7C                     l1875:
  1043   000A7C  0E23               	movlw	35
  1044   000A7E  1810               	xorwf	main@tecla^0,w,c
  1045   000A80  A4D8               	btfss	status,2,c
  1046   000A82  D0BF               	goto	l1951
  1047                           
  1048                           ;laboratorio_4.c: 118: if (input >= 1 && input <= 59) {
  1049   000A84  5015               	movf	_input^0,w,c
  1050   000A86  1016               	iorwf	(_input+1)^0,w,c
  1051   000A88  B4D8               	btfsc	status,2,c
  1052   000A8A  D019               	goto	l1887
  1053   000A8C  5016               	movf	(_input+1)^0,w,c
  1054   000A8E  E117               	bnz	l1887
  1055   000A90  0E3C               	movlw	60
  1056   000A92  5C15               	subwf	_input^0,w,c
  1057   000A94  B0D8               	btfsc	status,0,c
  1058   000A96  D013               	goto	l1887
  1059                           
  1060                           ;laboratorio_4.c: 119: objetivo = input;
  1061   000A98  C015  F019         	movff	_input,_objetivo
  1062   000A9C  C016  F01A         	movff	_input+1,_objetivo+1
  1063                           
  1064                           ;laboratorio_4.c: 120: contador = 0;
  1065   000AA0  0E00               	movlw	0
  1066   000AA2  6E18               	movwf	(_contador+1)^0,c
  1067   000AA4  0E00               	movlw	0
  1068   000AA6  6E17               	movwf	_contador^0,c
  1069                           
  1070                           ;laboratorio_4.c: 121: input = 0;
  1071   000AA8  0E00               	movlw	0
  1072   000AAA  6E16               	movwf	(_input+1)^0,c
  1073   000AAC  0E00               	movlw	0
  1074   000AAE  6E15               	movwf	_input^0,c
  1075                           
  1076                           ;laboratorio_4.c: 122: estado = 2;
  1077   000AB0  0E00               	movlw	0
  1078   000AB2  6E1C               	movwf	(_estado+1)^0,c
  1079   000AB4  0E02               	movlw	2
  1080   000AB6  6E1B               	movwf	_estado^0,c
  1081   000AB8                     l1885:
  1082                           
  1083                           ;laboratorio_4.c: 123: mostrar_conteo();
  1084   000AB8  EC0A  F006         	call	_mostrar_conteo	;wreg free
  1085                           
  1086                           ;laboratorio_4.c: 124: } else {
  1087   000ABC  D0A2               	goto	l1951
  1088   000ABE                     l1887:
  1089                           
  1090                           ;laboratorio_4.c: 125: Lcd_Clear();
  1091   000ABE  EC67  F009         	call	_Lcd_Clear	;wreg free
  1092                           
  1093                           ;laboratorio_4.c: 126: Lcd_Set_Cursor(1, 1);
  1094   000AC2  0E01               	movlw	1
  1095   000AC4  6E04               	movwf	Lcd_Set_Cursor@column^0,c
  1096   000AC6  0E01               	movlw	1
  1097   000AC8  EC34  F009         	call	_Lcd_Set_Cursor
  1098                           
  1099                           ;laboratorio_4.c: 127: Lcd_String("Rango invalido");
  1100   000ACC  0E56               	movlw	low STR_4
  1101   000ACE  6E04               	movwf	Lcd_String@str^0,c
  1102   000AD0  EC20  F009         	call	_Lcd_String	;wreg free
  1103                           
  1104                           ;laboratorio_4.c: 128: _delay((unsigned long)((1500)*(1000000/4000.0)));
  1105   000AD4  0E02               	movlw	2
  1106   000AD6  6E0F               	movwf	(??_main+1)^0,c
  1107   000AD8  0EE7               	movlw	231
  1108   000ADA  6E0E               	movwf	??_main^0,c
  1109   000ADC  0E00               	movlw	0
  1110   000ADE                     u1557:
  1111   000ADE  2EE8               	decfsz	wreg,f,c
  1112   000AE0  D7FE               	bra	u1557
  1113   000AE2  2E0E               	decfsz	??_main^0,f,c
  1114   000AE4  D7FC               	bra	u1557
  1115   000AE6  2E0F               	decfsz	(??_main+1)^0,f,c
  1116   000AE8  D7FA               	bra	u1557
  1117   000AEA  D000               	nop2	
  1118   000AEC                     l1893:
  1119                           
  1120                           ;laboratorio_4.c: 129: input = 0;
  1121   000AEC  0E00               	movlw	0
  1122   000AEE  6E16               	movwf	(_input+1)^0,c
  1123   000AF0  0E00               	movlw	0
  1124   000AF2  6E15               	movwf	_input^0,c
  1125                           
  1126                           ;laboratorio_4.c: 130: mostrar_valor();
  1127   000AF4  EC46  F009         	call	_mostrar_valor	;wreg free
  1128   000AF8  D084               	goto	l1951
  1129   000AFA                     l1897:
  1130                           
  1131                           ;laboratorio_4.c: 136: if (tecla == 'A') {
  1132   000AFA  0E41               	movlw	65
  1133   000AFC  1810               	xorwf	main@tecla^0,w,c
  1134   000AFE  A4D8               	btfss	status,2,c
  1135   000B00  D02F               	goto	l1923
  1136                           
  1137                           ;laboratorio_4.c: 137: if (contador < 59) contador++;
  1138   000B02  5018               	movf	(_contador+1)^0,w,c
  1139   000B04  E106               	bnz	l1903
  1140   000B06  0E3B               	movlw	59
  1141   000B08  5C17               	subwf	_contador^0,w,c
  1142   000B0A  B0D8               	btfsc	status,0,c
  1143   000B0C  D002               	goto	l1903
  1144   000B0E  4A17               	infsnz	_contador^0,f,c
  1145   000B10  2A18               	incf	(_contador+1)^0,f,c
  1146   000B12                     l1903:
  1147                           
  1148                           ;laboratorio_4.c: 138: if (contador >= objetivo || contador >= 59) {
  1149   000B12  5019               	movf	_objetivo^0,w,c
  1150   000B14  5C17               	subwf	_contador^0,w,c
  1151   000B16  501A               	movf	(_objetivo+1)^0,w,c
  1152   000B18  5818               	subwfb	(_contador+1)^0,w,c
  1153   000B1A  B0D8               	btfsc	status,0,c
  1154   000B1C  D006               	goto	u1500
  1155   000B1E  5018               	movf	(_contador+1)^0,w,c
  1156   000B20  E104               	bnz	u1500
  1157   000B22  0E3B               	movlw	59
  1158   000B24  5C17               	subwf	_contador^0,w,c
  1159   000B26  A0D8               	btfss	status,0,c
  1160   000B28  D7C7               	goto	l1885
  1161   000B2A                     u1500:
  1162                           
  1163                           ;laboratorio_4.c: 139: mostrar_conteo();
  1164   000B2A  EC0A  F006         	call	_mostrar_conteo	;wreg free
  1165                           
  1166                           ;laboratorio_4.c: 140: estado = 3;
  1167   000B2E  0E00               	movlw	0
  1168   000B30  6E1C               	movwf	(_estado+1)^0,c
  1169   000B32  0E03               	movlw	3
  1170   000B34  6E1B               	movwf	_estado^0,c
  1171                           
  1172                           ;laboratorio_4.c: 141: Lcd_Clear();
  1173   000B36  EC67  F009         	call	_Lcd_Clear	;wreg free
  1174                           
  1175                           ;laboratorio_4.c: 142: Lcd_Set_Cursor(1, 1);
  1176   000B3A  0E01               	movlw	1
  1177   000B3C  6E04               	movwf	Lcd_Set_Cursor@column^0,c
  1178   000B3E  0E01               	movlw	1
  1179   000B40  EC34  F009         	call	_Lcd_Set_Cursor
  1180                           
  1181                           ;laboratorio_4.c: 143: Lcd_String("Conteo Completo!");
  1182   000B44  0E27               	movlw	low STR_5
  1183   000B46  6E04               	movwf	Lcd_String@str^0,c
  1184   000B48  EC20  F009         	call	_Lcd_String	;wreg free
  1185                           
  1186                           ;laboratorio_4.c: 144: Lcd_Set_Cursor(2, 1);
  1187   000B4C  0E01               	movlw	1
  1188   000B4E  6E04               	movwf	Lcd_Set_Cursor@column^0,c
  1189   000B50  0E02               	movlw	2
  1190   000B52  EC34  F009         	call	_Lcd_Set_Cursor
  1191                           
  1192                           ;laboratorio_4.c: 145: Lcd_String("Presione OK");
  1193   000B56  0E72               	movlw	low STR_6
  1194   000B58  6E04               	movwf	Lcd_String@str^0,c
  1195   000B5A  EC20  F009         	call	_Lcd_String	;wreg free
  1196                           
  1197                           ;laboratorio_4.c: 146: } else {
  1198   000B5E  D051               	goto	l1951
  1199   000B60                     l1923:
  1200   000B60  0E42               	movlw	66
  1201   000B62  1810               	xorwf	main@tecla^0,w,c
  1202   000B64  A4D8               	btfss	status,2,c
  1203   000B66  D029               	goto	l1935
  1204                           
  1205                           ;laboratorio_4.c: 151: estado = 3;
  1206   000B68  0E00               	movlw	0
  1207   000B6A  6E1C               	movwf	(_estado+1)^0,c
  1208   000B6C  0E03               	movlw	3
  1209   000B6E  6E1B               	movwf	_estado^0,c
  1210                           
  1211                           ;laboratorio_4.c: 152: input = 0;
  1212   000B70  0E00               	movlw	0
  1213   000B72  6E16               	movwf	(_input+1)^0,c
  1214   000B74  0E00               	movlw	0
  1215   000B76  6E15               	movwf	_input^0,c
  1216                           
  1217                           ;laboratorio_4.c: 153: contador = 0;
  1218   000B78  0E00               	movlw	0
  1219   000B7A  6E18               	movwf	(_contador+1)^0,c
  1220   000B7C  0E00               	movlw	0
  1221   000B7E  6E17               	movwf	_contador^0,c
  1222                           
  1223                           ;laboratorio_4.c: 154: unidad(0);
  1224   000B80  0E00               	movlw	0
  1225   000B82  6E07               	movwf	(unidad@i+1)^0,c
  1226   000B84  0E00               	movlw	0
  1227   000B86  6E06               	movwf	unidad@i^0,c
  1228   000B88  EC5D  F009         	call	_unidad	;wreg free
  1229                           
  1230                           ;laboratorio_4.c: 155: LATE = 0b00000101;
  1231   000B8C  0E05               	movlw	5
  1232   000B8E  6E8D               	movwf	141,c	;volatile
  1233                           
  1234                           ;laboratorio_4.c: 156: Lcd_Clear();
  1235   000B90  EC67  F009         	call	_Lcd_Clear	;wreg free
  1236                           
  1237                           ;laboratorio_4.c: 157: Lcd_Set_Cursor(1, 1);
  1238   000B94  0E01               	movlw	1
  1239   000B96  6E04               	movwf	Lcd_Set_Cursor@column^0,c
  1240   000B98  0E01               	movlw	1
  1241   000B9A  EC34  F009         	call	_Lcd_Set_Cursor
  1242                           
  1243                           ;laboratorio_4.c: 158: Lcd_String("Conteo Completo!");
  1244   000B9E  0E27               	movlw	low STR_5
  1245   000BA0  6E04               	movwf	Lcd_String@str^0,c
  1246   000BA2  EC20  F009         	call	_Lcd_String	;wreg free
  1247                           
  1248                           ;laboratorio_4.c: 159: Lcd_Set_Cursor(2, 1);
  1249   000BA6  0E01               	movlw	1
  1250   000BA8  6E04               	movwf	Lcd_Set_Cursor@column^0,c
  1251   000BAA  0E02               	movlw	2
  1252   000BAC  EC34  F009         	call	_Lcd_Set_Cursor
  1253                           
  1254                           ;laboratorio_4.c: 160: Lcd_String("Presione OK");
  1255   000BB0  0E72               	movlw	low STR_6
  1256   000BB2  6E04               	movwf	Lcd_String@str^0,c
  1257   000BB4  EC20  F009         	call	_Lcd_String	;wreg free
  1258                           
  1259                           ;laboratorio_4.c: 162: } else if (tecla == '*'){
  1260   000BB8  D024               	goto	l1951
  1261   000BBA                     l1935:
  1262   000BBA  0E2A               	movlw	42
  1263   000BBC  1810               	xorwf	main@tecla^0,w,c
  1264   000BBE  A4D8               	btfss	status,2,c
  1265   000BC0  D020               	goto	l1951
  1266                           
  1267                           ;laboratorio_4.c: 163: contador=0;
  1268   000BC2  0E00               	movlw	0
  1269   000BC4  6E18               	movwf	(_contador+1)^0,c
  1270   000BC6  0E00               	movlw	0
  1271   000BC8  6E17               	movwf	_contador^0,c
  1272   000BCA  D776               	goto	l1885
  1273   000BCC                     l1941:
  1274                           
  1275                           ;laboratorio_4.c: 169: if (tecla == '#') {
  1276   000BCC  0E23               	movlw	35
  1277   000BCE  1810               	xorwf	main@tecla^0,w,c
  1278   000BD0  A4D8               	btfss	status,2,c
  1279   000BD2  D017               	goto	l1951
  1280                           
  1281                           ;laboratorio_4.c: 170: estado = 1;
  1282   000BD4  0E00               	movlw	0
  1283   000BD6  6E1C               	movwf	(_estado+1)^0,c
  1284   000BD8  0E01               	movlw	1
  1285   000BDA  6E1B               	movwf	_estado^0,c
  1286   000BDC  D787               	goto	l1893
  1287   000BDE                     l1949:
  1288   000BDE  C01B  F00E         	movff	_estado,??_main
  1289   000BE2  C01C  F00F         	movff	_estado+1,??_main+1
  1290                           
  1291                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1292                           ; Switch size 1, requested type "simple"
  1293                           ; Number of cases is 1, Range of values is 0 to 0
  1294                           ; switch strategies available:
  1295                           ; Name         Instructions Cycles
  1296                           ; simple_byte            4     3 (average)
  1297                           ;	Chosen strategy is simple_byte
  1298   000BE6  500F               	movf	(??_main+1)^0,w,c
  1299   000BE8  0A00               	xorlw	0	; case 0
  1300   000BEA  A4D8               	btfss	status,2,c
  1301   000BEC  D00A               	goto	l1951
  1302                           
  1303                           ; Switch size 1, requested type "simple"
  1304                           ; Number of cases is 3, Range of values is 1 to 3
  1305                           ; switch strategies available:
  1306                           ; Name         Instructions Cycles
  1307                           ; simple_byte           10     6 (average)
  1308                           ;	Chosen strategy is simple_byte
  1309   000BEE  500E               	movf	??_main^0,w,c
  1310   000BF0  0A01               	xorlw	1	; case 1
  1311   000BF2  B4D8               	btfsc	status,2,c
  1312   000BF4  D6C6               	goto	l1845
  1313   000BF6  0A03               	xorlw	3	; case 2
  1314   000BF8  B4D8               	btfsc	status,2,c
  1315   000BFA  D77F               	goto	l1897
  1316   000BFC  0A01               	xorlw	1	; case 3
  1317   000BFE  B4D8               	btfsc	status,2,c
  1318   000C00  D7E5               	goto	l1941
  1319   000C02                     l1951:
  1320                           
  1321                           ;laboratorio_4.c: 176: _delay((unsigned long)((200)*(1000000/4000.0)));
  1322   000C02  0E41               	movlw	65
  1323   000C04  6E0E               	movwf	??_main^0,c
  1324   000C06  0EEE               	movlw	238
  1325   000C08                     u1567:
  1326   000C08  2EE8               	decfsz	wreg,f,c
  1327   000C0A  D7FE               	bra	u1567
  1328   000C0C  2E0E               	decfsz	??_main^0,f,c
  1329   000C0E  D7FC               	bra	u1567
  1330   000C10  D000               	nop2	
  1331   000C12  D678               	goto	l1815
  1332   000C14                     __end_of_main:
  1333                           	callstack 0
  1334                           
  1335 ;; *************** function _mostrar_valor *****************
  1336 ;; Defined at:
  1337 ;;		line 237 in file "laboratorio_4.c"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;		None
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;		None
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  1    wreg      void 
  1344 ;; Registers used:
  1345 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1351 ;;      Params:         0       0       0       0       0       0       0       0       0
  1352 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1353 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1354 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1355 ;;Total ram usage:        0 bytes
  1356 ;; Hardware stack levels used: 1
  1357 ;; Hardware stack levels required when called: 3
  1358 ;; This function calls:
  1359 ;;		_Lcd_Clear
  1360 ;;		_Lcd_Set_Cursor
  1361 ;;		_Lcd_String
  1362 ;; This function is called by:
  1363 ;;		_main
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367                           	psect	text1
  1368   00128C                     __ptext1:
  1369                           	callstack 0
  1370   00128C                     _mostrar_valor:
  1371                           	callstack 27
  1372                           
  1373                           ;laboratorio_4.c: 238: Lcd_Clear();
  1374                           
  1375                           ;incstack = 0
  1376   00128C  EC67  F009         	call	_Lcd_Clear	;wreg free
  1377                           
  1378                           ;laboratorio_4.c: 239: Lcd_Set_Cursor(1, 1);
  1379   001290  0E01               	movlw	1
  1380   001292  6E04               	movwf	Lcd_Set_Cursor@column^0,c
  1381   001294  0E01               	movlw	1
  1382   001296  EC34  F009         	call	_Lcd_Set_Cursor
  1383                           
  1384                           ;laboratorio_4.c: 240: Lcd_String("Ingrese valor:");
  1385   00129A  0E47               	movlw	low STR_1
  1386   00129C  6E04               	movwf	Lcd_String@str^0,c
  1387   00129E  EC20  F009         	call	_Lcd_String	;wreg free
  1388   0012A2  0012               	return		;funcret
  1389   0012A4                     __end_of_mostrar_valor:
  1390                           	callstack 0
  1391                           
  1392 ;; *************** function _mostrar_conteo *****************
  1393 ;; Defined at:
  1394 ;;		line 196 in file "laboratorio_4.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;		None
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;  faltan          2   11[COMRAM] int 
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  1    wreg      void 
  1401 ;; Registers used:
  1402 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1403 ;; Tracked objects:
  1404 ;;		On entry : 0/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1408 ;;      Params:         0       0       0       0       0       0       0       0       0
  1409 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1410 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1411 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1412 ;;Total ram usage:        2 bytes
  1413 ;; Hardware stack levels used: 1
  1414 ;; Hardware stack levels required when called: 3
  1415 ;; This function calls:
  1416 ;;		_Lcd_Char
  1417 ;;		_Lcd_Clear
  1418 ;;		_Lcd_Set_Cursor
  1419 ;;		_Lcd_String
  1420 ;;		___awdiv
  1421 ;;		___awmod
  1422 ;;		___lwdiv
  1423 ;;		___lwmod
  1424 ;;		_color
  1425 ;;		_unidad
  1426 ;; This function is called by:
  1427 ;;		_main
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           
  1431                           	psect	text2
  1432   000C14                     __ptext2:
  1433                           	callstack 0
  1434   000C14                     _mostrar_conteo:
  1435                           	callstack 27
  1436                           
  1437                           ;laboratorio_4.c: 197: Lcd_Clear();
  1438                           
  1439                           ;incstack = 0
  1440   000C14  EC67  F009         	call	_Lcd_Clear	;wreg free
  1441                           
  1442                           ;laboratorio_4.c: 198: Lcd_Set_Cursor(1, 1);
  1443   000C18  0E01               	movlw	1
  1444   000C1A  6E04               	movwf	Lcd_Set_Cursor@column^0,c
  1445   000C1C  0E01               	movlw	1
  1446   000C1E  EC34  F009         	call	_Lcd_Set_Cursor
  1447                           
  1448                           ;laboratorio_4.c: 199: Lcd_String("Objetivo:");
  1449   000C22  0E89               	movlw	low STR_9
  1450   000C24  6E04               	movwf	Lcd_String@str^0,c
  1451   000C26  EC20  F009         	call	_Lcd_String	;wreg free
  1452                           
  1453                           ;laboratorio_4.c: 200: Lcd_Char((objetivo / 10) + '0');
  1454   000C2A  C019  F001         	movff	_objetivo,___lwdiv@dividend
  1455   000C2E  C01A  F002         	movff	_objetivo+1,___lwdiv@dividend+1
  1456   000C32  0E00               	movlw	0
  1457   000C34  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  1458   000C36  0E0A               	movlw	10
  1459   000C38  6E03               	movwf	___lwdiv@divisor^0,c
  1460   000C3A  ECA2  F008         	call	___lwdiv	;wreg free
  1461   000C3E  5001               	movf	?___lwdiv^0,w,c
  1462   000C40  0F30               	addlw	48
  1463   000C42  EC83  F006         	call	_Lcd_Char
  1464                           
  1465                           ;laboratorio_4.c: 201: Lcd_Char((objetivo % 10) + '0');
  1466   000C46  C019  F001         	movff	_objetivo,___lwmod@dividend
  1467   000C4A  C01A  F002         	movff	_objetivo+1,___lwmod@dividend+1
  1468   000C4E  0E00               	movlw	0
  1469   000C50  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1470   000C52  0E0A               	movlw	10
  1471   000C54  6E03               	movwf	___lwmod@divisor^0,c
  1472   000C56  ECCB  F008         	call	___lwmod	;wreg free
  1473   000C5A  5001               	movf	?___lwmod^0,w,c
  1474   000C5C  0F30               	addlw	48
  1475   000C5E  EC83  F006         	call	_Lcd_Char
  1476                           
  1477                           ;laboratorio_4.c: 203: Lcd_Set_Cursor(2, 1);
  1478   000C62  0E01               	movlw	1
  1479   000C64  6E04               	movwf	Lcd_Set_Cursor@column^0,c
  1480   000C66  0E02               	movlw	2
  1481   000C68  EC34  F009         	call	_Lcd_Set_Cursor
  1482                           
  1483                           ;laboratorio_4.c: 204: Lcd_String("Faltantes:");
  1484   000C6C  0E7E               	movlw	low STR_10
  1485   000C6E  6E04               	movwf	Lcd_String@str^0,c
  1486   000C70  EC20  F009         	call	_Lcd_String	;wreg free
  1487                           
  1488                           ;laboratorio_4.c: 205: int faltan = objetivo - contador;
  1489   000C74  5017               	movf	_contador^0,w,c
  1490   000C76  5C19               	subwf	_objetivo^0,w,c
  1491   000C78  6E0C               	movwf	mostrar_conteo@faltan^0,c
  1492   000C7A  5018               	movf	(_contador+1)^0,w,c
  1493   000C7C  581A               	subwfb	(_objetivo+1)^0,w,c
  1494   000C7E  6E0D               	movwf	(mostrar_conteo@faltan+1)^0,c
  1495                           
  1496                           ;laboratorio_4.c: 206: if (faltan < 0) faltan = 0;
  1497   000C80  AE0D               	btfss	(mostrar_conteo@faltan+1)^0,7,c
  1498   000C82  D004               	goto	l1751
  1499   000C84  0E00               	movlw	0
  1500   000C86  6E0D               	movwf	(mostrar_conteo@faltan+1)^0,c
  1501   000C88  0E00               	movlw	0
  1502   000C8A  6E0C               	movwf	mostrar_conteo@faltan^0,c
  1503   000C8C                     l1751:
  1504                           
  1505                           ;laboratorio_4.c: 207: Lcd_Char((faltan / 10) + '0');
  1506   000C8C  C00C  F001         	movff	mostrar_conteo@faltan,___awdiv@dividend
  1507   000C90  C00D  F002         	movff	mostrar_conteo@faltan+1,___awdiv@dividend+1
  1508   000C94  0E00               	movlw	0
  1509   000C96  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1510   000C98  0E0A               	movlw	10
  1511   000C9A  6E03               	movwf	___awdiv@divisor^0,c
  1512   000C9C  ECF9  F007         	call	___awdiv	;wreg free
  1513   000CA0  5001               	movf	?___awdiv^0,w,c
  1514   000CA2  0F30               	addlw	48
  1515   000CA4  EC83  F006         	call	_Lcd_Char
  1516                           
  1517                           ;laboratorio_4.c: 208: Lcd_Char((faltan % 10) + '0');
  1518   000CA8  C00C  F001         	movff	mostrar_conteo@faltan,___awmod@dividend
  1519   000CAC  C00D  F002         	movff	mostrar_conteo@faltan+1,___awmod@dividend+1
  1520   000CB0  0E00               	movlw	0
  1521   000CB2  6E04               	movwf	(___awmod@divisor+1)^0,c
  1522   000CB4  0E0A               	movlw	10
  1523   000CB6  6E03               	movwf	___awmod@divisor^0,c
  1524   000CB8  EC3A  F008         	call	___awmod	;wreg free
  1525   000CBC  5001               	movf	?___awmod^0,w,c
  1526   000CBE  0F30               	addlw	48
  1527   000CC0  EC83  F006         	call	_Lcd_Char
  1528                           
  1529                           ;laboratorio_4.c: 210: unidad(contador % 10);
  1530   000CC4  C017  F001         	movff	_contador,___lwmod@dividend
  1531   000CC8  C018  F002         	movff	_contador+1,___lwmod@dividend+1
  1532   000CCC  0E00               	movlw	0
  1533   000CCE  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1534   000CD0  0E0A               	movlw	10
  1535   000CD2  6E03               	movwf	___lwmod@divisor^0,c
  1536   000CD4  ECCB  F008         	call	___lwmod	;wreg free
  1537   000CD8  C001  F006         	movff	?___lwmod,unidad@i
  1538   000CDC  C002  F007         	movff	?___lwmod+1,unidad@i+1
  1539   000CE0  EC5D  F009         	call	_unidad	;wreg free
  1540                           
  1541                           ;laboratorio_4.c: 211: color(contador / 10);
  1542   000CE4  C017  F001         	movff	_contador,___lwdiv@dividend
  1543   000CE8  C018  F002         	movff	_contador+1,___lwdiv@dividend+1
  1544   000CEC  0E00               	movlw	0
  1545   000CEE  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  1546   000CF0  0E0A               	movlw	10
  1547   000CF2  6E03               	movwf	___lwdiv@divisor^0,c
  1548   000CF4  ECA2  F008         	call	___lwdiv	;wreg free
  1549   000CF8  C001  F008         	movff	?___lwdiv,color@i
  1550   000CFC  C002  F009         	movff	?___lwdiv+1,color@i+1
  1551   000D00  EC71  F008         	call	_color	;wreg free
  1552   000D04  0012               	return		;funcret
  1553   000D06                     __end_of_mostrar_conteo:
  1554                           	callstack 0
  1555                           
  1556 ;; *************** function _unidad *****************
  1557 ;; Defined at:
  1558 ;;		line 214 in file "laboratorio_4.c"
  1559 ;; Parameters:    Size  Location     Type
  1560 ;;  i               2    5[COMRAM] int 
  1561 ;; Auto vars:     Size  Location     Type
  1562 ;;		None
  1563 ;; Return value:  Size  Location     Type
  1564 ;;                  1    wreg      void 
  1565 ;; Registers used:
  1566 ;;		wreg, status,2, status,0
  1567 ;; Tracked objects:
  1568 ;;		On entry : 0/0
  1569 ;;		On exit  : 0/0
  1570 ;;		Unchanged: 0/0
  1571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1572 ;;      Params:         2       0       0       0       0       0       0       0       0
  1573 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1574 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1575 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1576 ;;Total ram usage:        3 bytes
  1577 ;; Hardware stack levels used: 1
  1578 ;; Hardware stack levels required when called: 1
  1579 ;; This function calls:
  1580 ;;		Nothing
  1581 ;; This function is called by:
  1582 ;;		_main
  1583 ;;		_mostrar_conteo
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587                           	psect	text3
  1588   0012BA                     __ptext3:
  1589                           	callstack 0
  1590   0012BA                     _unidad:
  1591                           	callstack 29
  1592                           
  1593                           ;laboratorio_4.c: 215: LATC = (LATC & 0x0F) | (i << 4);
  1594                           
  1595                           ;incstack = 0
  1596   0012BA  C006  F008         	movff	unidad@i,??_unidad
  1597   0012BE  3A08               	swapf	??_unidad^0,f,c
  1598   0012C0  0EF0               	movlw	240
  1599   0012C2  1608               	andwf	??_unidad^0,f,c
  1600   0012C4  508B               	movf	139,w,c	;volatile
  1601   0012C6  0B0F               	andlw	15
  1602   0012C8  1008               	iorwf	??_unidad^0,w,c
  1603   0012CA  6E8B               	movwf	139,c	;volatile
  1604   0012CC  0012               	return		;funcret
  1605   0012CE                     __end_of_unidad:
  1606                           	callstack 0
  1607                           
  1608 ;; *************** function _color *****************
  1609 ;; Defined at:
  1610 ;;		line 218 in file "laboratorio_4.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;  i               2    7[COMRAM] int 
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;		None
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  1    wreg      void 
  1617 ;; Registers used:
  1618 ;;		wreg, status,2, status,0
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1624 ;;      Params:         2       0       0       0       0       0       0       0       0
  1625 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1626 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1627 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1628 ;;Total ram usage:        4 bytes
  1629 ;; Hardware stack levels used: 1
  1630 ;; Hardware stack levels required when called: 1
  1631 ;; This function calls:
  1632 ;;		Nothing
  1633 ;; This function is called by:
  1634 ;;		_mostrar_conteo
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           	psect	text4
  1639   0010E2                     __ptext4:
  1640                           	callstack 0
  1641   0010E2                     _color:
  1642                           	callstack 28
  1643                           
  1644                           ;laboratorio_4.c: 219: switch (i) {
  1645                           
  1646                           ;incstack = 0
  1647   0010E2  D014               	goto	l1557
  1648   0010E4                     l1543:
  1649   0010E4  0E05               	movlw	5
  1650   0010E6  6E8D               	movwf	141,c	;volatile
  1651   0010E8  0012               	return	
  1652   0010EA                     l1545:
  1653   0010EA  0E04               	movlw	4
  1654   0010EC  6E8D               	movwf	141,c	;volatile
  1655   0010EE  0012               	return	
  1656   0010F0                     l1547:
  1657   0010F0  0E06               	movlw	6
  1658   0010F2  6E8D               	movwf	141,c	;volatile
  1659   0010F4  0012               	return	
  1660   0010F6                     l1549:
  1661   0010F6  0E02               	movlw	2
  1662   0010F8  6E8D               	movwf	141,c	;volatile
  1663   0010FA  0012               	return	
  1664   0010FC                     l1551:
  1665   0010FC  0E03               	movlw	3
  1666   0010FE  6E8D               	movwf	141,c	;volatile
  1667   001100  0012               	return	
  1668   001102                     l1553:
  1669   001102  0E07               	movlw	7
  1670   001104  6E8D               	movwf	141,c	;volatile
  1671   001106  0012               	return	
  1672   001108                     l184:
  1673   001108  6A8D               	clrf	141,c	;volatile
  1674   00110A  0012               	return	
  1675   00110C                     l1557:
  1676   00110C  C008  F00A         	movff	color@i,??_color
  1677   001110  C009  F00B         	movff	color@i+1,??_color+1
  1678                           
  1679                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1680                           ; Switch size 1, requested type "simple"
  1681                           ; Number of cases is 1, Range of values is 0 to 0
  1682                           ; switch strategies available:
  1683                           ; Name         Instructions Cycles
  1684                           ; simple_byte            4     3 (average)
  1685                           ;	Chosen strategy is simple_byte
  1686   001114  500B               	movf	(??_color+1)^0,w,c
  1687   001116  0A00               	xorlw	0	; case 0
  1688   001118  A4D8               	btfss	status,2,c
  1689   00111A  D7F6               	goto	l184
  1690                           
  1691                           ; Switch size 1, requested type "simple"
  1692                           ; Number of cases is 6, Range of values is 0 to 5
  1693                           ; switch strategies available:
  1694                           ; Name         Instructions Cycles
  1695                           ; simple_byte           19    10 (average)
  1696                           ;	Chosen strategy is simple_byte
  1697   00111C  500A               	movf	??_color^0,w,c
  1698   00111E  0A00               	xorlw	0	; case 0
  1699   001120  B4D8               	btfsc	status,2,c
  1700   001122  D7E0               	goto	l1543
  1701   001124  0A01               	xorlw	1	; case 1
  1702   001126  B4D8               	btfsc	status,2,c
  1703   001128  D7E0               	goto	l1545
  1704   00112A  0A03               	xorlw	3	; case 2
  1705   00112C  B4D8               	btfsc	status,2,c
  1706   00112E  D7E0               	goto	l1547
  1707   001130  0A01               	xorlw	1	; case 3
  1708   001132  B4D8               	btfsc	status,2,c
  1709   001134  D7E0               	goto	l1549
  1710   001136  0A07               	xorlw	7	; case 4
  1711   001138  B4D8               	btfsc	status,2,c
  1712   00113A  D7E0               	goto	l1551
  1713   00113C  0A01               	xorlw	1	; case 5
  1714   00113E  B4D8               	btfsc	status,2,c
  1715   001140  D7E0               	goto	l1553
  1716   001142  D7E2               	goto	l184
  1717   001144                     __end_of_color:
  1718                           	callstack 0
  1719                           
  1720 ;; *************** function ___lwmod *****************
  1721 ;; Defined at:
  1722 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lwmod.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;  dividend        2    0[COMRAM] unsigned int 
  1725 ;;  divisor         2    2[COMRAM] unsigned int 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;  counter         1    4[COMRAM] unsigned char 
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  2    0[COMRAM] unsigned int 
  1730 ;; Registers used:
  1731 ;;		wreg, status,2, status,0
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1737 ;;      Params:         4       0       0       0       0       0       0       0       0
  1738 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1739 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1740 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1741 ;;Total ram usage:        5 bytes
  1742 ;; Hardware stack levels used: 1
  1743 ;; Hardware stack levels required when called: 1
  1744 ;; This function calls:
  1745 ;;		Nothing
  1746 ;; This function is called by:
  1747 ;;		_main
  1748 ;;		_mostrar_conteo
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752                           	psect	text5
  1753   001196                     __ptext5:
  1754                           	callstack 0
  1755   001196                     ___lwmod:
  1756                           	callstack 28
  1757                           
  1758                           ;incstack = 0
  1759   001196  5003               	movf	___lwmod@divisor^0,w,c
  1760   001198  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  1761   00119A  B4D8               	btfsc	status,2,c
  1762   00119C  D018               	goto	l693
  1763   00119E  0E01               	movlw	1
  1764   0011A0  6E05               	movwf	___lwmod@counter^0,c
  1765   0011A2  D004               	goto	l1671
  1766   0011A4                     l1669:
  1767   0011A4  90D8               	bcf	status,0,c
  1768   0011A6  3603               	rlcf	___lwmod@divisor^0,f,c
  1769   0011A8  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  1770   0011AA  2A05               	incf	___lwmod@counter^0,f,c
  1771   0011AC                     l1671:
  1772   0011AC  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  1773   0011AE  D7FA               	goto	l1669
  1774   0011B0                     u1280:
  1775   0011B0  5003               	movf	___lwmod@divisor^0,w,c
  1776   0011B2  5C01               	subwf	___lwmod@dividend^0,w,c
  1777   0011B4  5004               	movf	(___lwmod@divisor+1)^0,w,c
  1778   0011B6  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  1779   0011B8  A0D8               	btfss	status,0,c
  1780   0011BA  D004               	goto	l1677
  1781   0011BC  5003               	movf	___lwmod@divisor^0,w,c
  1782   0011BE  5E01               	subwf	___lwmod@dividend^0,f,c
  1783   0011C0  5004               	movf	(___lwmod@divisor+1)^0,w,c
  1784   0011C2  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  1785   0011C4                     l1677:
  1786   0011C4  90D8               	bcf	status,0,c
  1787   0011C6  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  1788   0011C8  3203               	rrcf	___lwmod@divisor^0,f,c
  1789   0011CA  2E05               	decfsz	___lwmod@counter^0,f,c
  1790   0011CC  D7F1               	goto	u1280
  1791   0011CE                     l693:
  1792   0011CE  C001  F001         	movff	___lwmod@dividend,?___lwmod
  1793   0011D2  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  1794   0011D6  0012               	return		;funcret
  1795   0011D8                     __end_of___lwmod:
  1796                           	callstack 0
  1797                           
  1798 ;; *************** function ___lwdiv *****************
  1799 ;; Defined at:
  1800 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lwdiv.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;  dividend        2    0[COMRAM] unsigned int 
  1803 ;;  divisor         2    2[COMRAM] unsigned int 
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;  quotient        2    4[COMRAM] unsigned int 
  1806 ;;  counter         1    6[COMRAM] unsigned char 
  1807 ;; Return value:  Size  Location     Type
  1808 ;;                  2    0[COMRAM] unsigned int 
  1809 ;; Registers used:
  1810 ;;		wreg, status,2, status,0
  1811 ;; Tracked objects:
  1812 ;;		On entry : 0/0
  1813 ;;		On exit  : 0/0
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1816 ;;      Params:         4       0       0       0       0       0       0       0       0
  1817 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1818 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1819 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1820 ;;Total ram usage:        7 bytes
  1821 ;; Hardware stack levels used: 1
  1822 ;; Hardware stack levels required when called: 1
  1823 ;; This function calls:
  1824 ;;		Nothing
  1825 ;; This function is called by:
  1826 ;;		_main
  1827 ;;		_mostrar_conteo
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           	psect	text6
  1832   001144                     __ptext6:
  1833                           	callstack 0
  1834   001144                     ___lwdiv:
  1835                           	callstack 28
  1836                           
  1837                           ;incstack = 0
  1838   001144  0E00               	movlw	0
  1839   001146  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  1840   001148  0E00               	movlw	0
  1841   00114A  6E05               	movwf	___lwdiv@quotient^0,c
  1842   00114C  5003               	movf	___lwdiv@divisor^0,w,c
  1843   00114E  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1844   001150  B4D8               	btfsc	status,2,c
  1845   001152  D01C               	goto	l683
  1846   001154  0E01               	movlw	1
  1847   001156  6E07               	movwf	___lwdiv@counter^0,c
  1848   001158  D004               	goto	l1651
  1849   00115A                     l1649:
  1850   00115A  90D8               	bcf	status,0,c
  1851   00115C  3603               	rlcf	___lwdiv@divisor^0,f,c
  1852   00115E  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1853   001160  2A07               	incf	___lwdiv@counter^0,f,c
  1854   001162                     l1651:
  1855   001162  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  1856   001164  D7FA               	goto	l1649
  1857   001166                     u1250:
  1858   001166  90D8               	bcf	status,0,c
  1859   001168  3605               	rlcf	___lwdiv@quotient^0,f,c
  1860   00116A  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1861   00116C  5003               	movf	___lwdiv@divisor^0,w,c
  1862   00116E  5C01               	subwf	___lwdiv@dividend^0,w,c
  1863   001170  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1864   001172  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1865   001174  A0D8               	btfss	status,0,c
  1866   001176  D005               	goto	l1661
  1867   001178  5003               	movf	___lwdiv@divisor^0,w,c
  1868   00117A  5E01               	subwf	___lwdiv@dividend^0,f,c
  1869   00117C  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1870   00117E  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1871   001180  8005               	bsf	___lwdiv@quotient^0,0,c
  1872   001182                     l1661:
  1873   001182  90D8               	bcf	status,0,c
  1874   001184  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1875   001186  3203               	rrcf	___lwdiv@divisor^0,f,c
  1876   001188  2E07               	decfsz	___lwdiv@counter^0,f,c
  1877   00118A  D7ED               	goto	u1250
  1878   00118C                     l683:
  1879   00118C  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1880   001190  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1881   001194  0012               	return		;funcret
  1882   001196                     __end_of___lwdiv:
  1883                           	callstack 0
  1884                           
  1885 ;; *************** function ___awmod *****************
  1886 ;; Defined at:
  1887 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awmod.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;  dividend        2    0[COMRAM] int 
  1890 ;;  divisor         2    2[COMRAM] int 
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;  sign            1    5[COMRAM] unsigned char 
  1893 ;;  counter         1    4[COMRAM] unsigned char 
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  2    0[COMRAM] int 
  1896 ;; Registers used:
  1897 ;;		wreg, status,2, status,0
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1903 ;;      Params:         4       0       0       0       0       0       0       0       0
  1904 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1905 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1906 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1907 ;;Total ram usage:        6 bytes
  1908 ;; Hardware stack levels used: 1
  1909 ;; Hardware stack levels required when called: 1
  1910 ;; This function calls:
  1911 ;;		Nothing
  1912 ;; This function is called by:
  1913 ;;		_mostrar_conteo
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917                           	psect	text7
  1918   001074                     __ptext7:
  1919                           	callstack 0
  1920   001074                     ___awmod:
  1921                           	callstack 28
  1922                           
  1923                           ;incstack = 0
  1924   001074  6A06               	clrf	___awmod@sign^0,c
  1925   001076  AE02               	btfss	(___awmod@dividend+1)^0,7,c
  1926   001078  D006               	goto	l1615
  1927   00107A  6C01               	negf	___awmod@dividend^0,c
  1928   00107C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1929   00107E  B0D8               	btfsc	status,0,c
  1930   001080  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1931   001082  0E01               	movlw	1
  1932   001084  6E06               	movwf	___awmod@sign^0,c
  1933   001086                     l1615:
  1934   001086  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1935   001088  D004               	goto	l1619
  1936   00108A  6C03               	negf	___awmod@divisor^0,c
  1937   00108C  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1938   00108E  B0D8               	btfsc	status,0,c
  1939   001090  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1940   001092                     l1619:
  1941   001092  5003               	movf	___awmod@divisor^0,w,c
  1942   001094  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1943   001096  B4D8               	btfsc	status,2,c
  1944   001098  D018               	goto	l1635
  1945   00109A  0E01               	movlw	1
  1946   00109C  6E05               	movwf	___awmod@counter^0,c
  1947   00109E  D004               	goto	l1625
  1948   0010A0                     l1623:
  1949   0010A0  90D8               	bcf	status,0,c
  1950   0010A2  3603               	rlcf	___awmod@divisor^0,f,c
  1951   0010A4  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1952   0010A6  2A05               	incf	___awmod@counter^0,f,c
  1953   0010A8                     l1625:
  1954   0010A8  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1955   0010AA  D7FA               	goto	l1623
  1956   0010AC                     u1210:
  1957   0010AC  5003               	movf	___awmod@divisor^0,w,c
  1958   0010AE  5C01               	subwf	___awmod@dividend^0,w,c
  1959   0010B0  5004               	movf	(___awmod@divisor+1)^0,w,c
  1960   0010B2  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1961   0010B4  A0D8               	btfss	status,0,c
  1962   0010B6  D004               	goto	l1631
  1963   0010B8  5003               	movf	___awmod@divisor^0,w,c
  1964   0010BA  5E01               	subwf	___awmod@dividend^0,f,c
  1965   0010BC  5004               	movf	(___awmod@divisor+1)^0,w,c
  1966   0010BE  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1967   0010C0                     l1631:
  1968   0010C0  90D8               	bcf	status,0,c
  1969   0010C2  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1970   0010C4  3203               	rrcf	___awmod@divisor^0,f,c
  1971   0010C6  2E05               	decfsz	___awmod@counter^0,f,c
  1972   0010C8  D7F1               	goto	u1210
  1973   0010CA                     l1635:
  1974   0010CA  5006               	movf	___awmod@sign^0,w,c
  1975   0010CC  B4D8               	btfsc	status,2,c
  1976   0010CE  D004               	goto	l1639
  1977   0010D0  6C01               	negf	___awmod@dividend^0,c
  1978   0010D2  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1979   0010D4  B0D8               	btfsc	status,0,c
  1980   0010D6  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1981   0010D8                     l1639:
  1982   0010D8  C001  F001         	movff	___awmod@dividend,?___awmod
  1983   0010DC  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1984   0010E0  0012               	return		;funcret
  1985   0010E2                     __end_of___awmod:
  1986                           	callstack 0
  1987                           
  1988 ;; *************** function ___awdiv *****************
  1989 ;; Defined at:
  1990 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awdiv.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;  dividend        2    0[COMRAM] int 
  1993 ;;  divisor         2    2[COMRAM] int 
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;  quotient        2    6[COMRAM] int 
  1996 ;;  sign            1    5[COMRAM] unsigned char 
  1997 ;;  counter         1    4[COMRAM] unsigned char 
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  2    0[COMRAM] int 
  2000 ;; Registers used:
  2001 ;;		wreg, status,2, status,0
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2007 ;;      Params:         4       0       0       0       0       0       0       0       0
  2008 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2009 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2010 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2011 ;;Total ram usage:        8 bytes
  2012 ;; Hardware stack levels used: 1
  2013 ;; Hardware stack levels required when called: 1
  2014 ;; This function calls:
  2015 ;;		Nothing
  2016 ;; This function is called by:
  2017 ;;		_mostrar_conteo
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021                           	psect	text8
  2022   000FF2                     __ptext8:
  2023                           	callstack 0
  2024   000FF2                     ___awdiv:
  2025                           	callstack 28
  2026                           
  2027                           ;incstack = 0
  2028   000FF2  6A06               	clrf	___awdiv@sign^0,c
  2029   000FF4  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2030   000FF6  D006               	goto	l1571
  2031   000FF8  6C03               	negf	___awdiv@divisor^0,c
  2032   000FFA  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2033   000FFC  B0D8               	btfsc	status,0,c
  2034   000FFE  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2035   001000  0E01               	movlw	1
  2036   001002  6E06               	movwf	___awdiv@sign^0,c
  2037   001004                     l1571:
  2038   001004  AE02               	btfss	(___awdiv@dividend+1)^0,7,c
  2039   001006  D006               	goto	l1577
  2040   001008  6C01               	negf	___awdiv@dividend^0,c
  2041   00100A  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2042   00100C  B0D8               	btfsc	status,0,c
  2043   00100E  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2044   001010  0E01               	movlw	1
  2045   001012  1A06               	xorwf	___awdiv@sign^0,f,c
  2046   001014                     l1577:
  2047   001014  0E00               	movlw	0
  2048   001016  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2049   001018  0E00               	movlw	0
  2050   00101A  6E07               	movwf	___awdiv@quotient^0,c
  2051   00101C  5003               	movf	___awdiv@divisor^0,w,c
  2052   00101E  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2053   001020  B4D8               	btfsc	status,2,c
  2054   001022  D01C               	goto	l1599
  2055   001024  0E01               	movlw	1
  2056   001026  6E05               	movwf	___awdiv@counter^0,c
  2057   001028  D004               	goto	l1585
  2058   00102A                     l1583:
  2059   00102A  90D8               	bcf	status,0,c
  2060   00102C  3603               	rlcf	___awdiv@divisor^0,f,c
  2061   00102E  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2062   001030  2A05               	incf	___awdiv@counter^0,f,c
  2063   001032                     l1585:
  2064   001032  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2065   001034  D7FA               	goto	l1583
  2066   001036                     u1150:
  2067   001036  90D8               	bcf	status,0,c
  2068   001038  3607               	rlcf	___awdiv@quotient^0,f,c
  2069   00103A  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2070   00103C  5003               	movf	___awdiv@divisor^0,w,c
  2071   00103E  5C01               	subwf	___awdiv@dividend^0,w,c
  2072   001040  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2073   001042  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2074   001044  A0D8               	btfss	status,0,c
  2075   001046  D005               	goto	l1595
  2076   001048  5003               	movf	___awdiv@divisor^0,w,c
  2077   00104A  5E01               	subwf	___awdiv@dividend^0,f,c
  2078   00104C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2079   00104E  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2080   001050  8007               	bsf	___awdiv@quotient^0,0,c
  2081   001052                     l1595:
  2082   001052  90D8               	bcf	status,0,c
  2083   001054  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2084   001056  3203               	rrcf	___awdiv@divisor^0,f,c
  2085   001058  2E05               	decfsz	___awdiv@counter^0,f,c
  2086   00105A  D7ED               	goto	u1150
  2087   00105C                     l1599:
  2088   00105C  5006               	movf	___awdiv@sign^0,w,c
  2089   00105E  B4D8               	btfsc	status,2,c
  2090   001060  D004               	goto	l1603
  2091   001062  6C07               	negf	___awdiv@quotient^0,c
  2092   001064  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2093   001066  B0D8               	btfsc	status,0,c
  2094   001068  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2095   00106A                     l1603:
  2096   00106A  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2097   00106E  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2098   001072  0012               	return		;funcret
  2099   001074                     __end_of___awdiv:
  2100                           	callstack 0
  2101                           
  2102 ;; *************** function _lcd_animacion_bienvenida *****************
  2103 ;; Defined at:
  2104 ;;		line 242 in file "laboratorio_4.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;		None
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;  i               2   11[COMRAM] int 
  2109 ;;  i               2    9[COMRAM] int 
  2110 ;; Return value:  Size  Location     Type
  2111 ;;                  1    wreg      void 
  2112 ;; Registers used:
  2113 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2119 ;;      Params:         0       0       0       0       0       0       0       0       0
  2120 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2121 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2122 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2123 ;;Total ram usage:        5 bytes
  2124 ;; Hardware stack levels used: 1
  2125 ;; Hardware stack levels required when called: 3
  2126 ;; This function calls:
  2127 ;;		_Lcd_Clear
  2128 ;;		_Lcd_Set_Cursor
  2129 ;;		_Lcd_Shift_Left
  2130 ;;		_Lcd_Shift_Right
  2131 ;;		_Lcd_String
  2132 ;; This function is called by:
  2133 ;;		_main
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137                           	psect	text9
  2138   000F6A                     __ptext9:
  2139                           	callstack 0
  2140   000F6A                     _lcd_animacion_bienvenida:
  2141                           	callstack 27
  2142                           
  2143                           ;laboratorio_4.c: 243: Lcd_Clear();
  2144                           
  2145                           ;incstack = 0
  2146   000F6A  EC67  F009         	call	_Lcd_Clear	;wreg free
  2147                           
  2148                           ;laboratorio_4.c: 244: Lcd_Set_Cursor(1, 1);
  2149   000F6E  0E01               	movlw	1
  2150   000F70  6E04               	movwf	Lcd_Set_Cursor@column^0,c
  2151   000F72  0E01               	movlw	1
  2152   000F74  EC34  F009         	call	_Lcd_Set_Cursor
  2153                           
  2154                           ;laboratorio_4.c: 245: Lcd_String(" Contador De Objetos ");
  2155   000F78  0E11               	movlw	low STR_12
  2156   000F7A  6E04               	movwf	Lcd_String@str^0,c
  2157   000F7C  EC20  F009         	call	_Lcd_String	;wreg free
  2158                           
  2159                           ;laboratorio_4.c: 246: _delay((unsigned long)((300)*(1000000/4000.0)));
  2160   000F80  0E62               	movlw	98
  2161   000F82  6E09               	movwf	??_lcd_animacion_bienvenida^0,c
  2162   000F84  0E66               	movlw	102
  2163   000F86                     u1577:
  2164   000F86  2EE8               	decfsz	wreg,f,c
  2165   000F88  D7FE               	bra	u1577
  2166   000F8A  2E09               	decfsz	??_lcd_animacion_bienvenida^0,f,c
  2167   000F8C  D7FC               	bra	u1577
  2168                           
  2169                           ;laboratorio_4.c: 247: for (int i = 0; i < 8; i++) {
  2170   000F8E  0E00               	movlw	0
  2171   000F90  6E0B               	movwf	(lcd_animacion_bienvenida@i+1)^0,c
  2172   000F92  0E00               	movlw	0
  2173   000F94  6E0A               	movwf	lcd_animacion_bienvenida@i^0,c
  2174   000F96                     l1709:
  2175                           
  2176                           ;laboratorio_4.c: 248: Lcd_Shift_Left();
  2177   000F96  EC73  F009         	call	_Lcd_Shift_Left	;wreg free
  2178                           
  2179                           ;laboratorio_4.c: 249: _delay((unsigned long)((500)*(1000000/4000.0)));
  2180   000F9A  0EA3               	movlw	163
  2181   000F9C  6E09               	movwf	??_lcd_animacion_bienvenida^0,c
  2182   000F9E  0E55               	movlw	85
  2183   000FA0                     u1587:
  2184   000FA0  2EE8               	decfsz	wreg,f,c
  2185   000FA2  D7FE               	bra	u1587
  2186   000FA4  2E09               	decfsz	??_lcd_animacion_bienvenida^0,f,c
  2187   000FA6  D7FC               	bra	u1587
  2188   000FA8  0000               	nop	
  2189   000FAA  4A0A               	infsnz	lcd_animacion_bienvenida@i^0,f,c
  2190   000FAC  2A0B               	incf	(lcd_animacion_bienvenida@i+1)^0,f,c
  2191   000FAE  BE0B               	btfsc	(lcd_animacion_bienvenida@i+1)^0,7,c
  2192   000FB0  D7F2               	goto	l1709
  2193   000FB2  500B               	movf	(lcd_animacion_bienvenida@i+1)^0,w,c
  2194   000FB4  E104               	bnz	u1300
  2195   000FB6  0E08               	movlw	8
  2196   000FB8  5C0A               	subwf	lcd_animacion_bienvenida@i^0,w,c
  2197   000FBA  A0D8               	btfss	status,0,c
  2198   000FBC  D7EC               	goto	l1709
  2199   000FBE                     u1300:
  2200                           
  2201                           ;laboratorio_4.c: 250: };laboratorio_4.c: 251: for (int i = 0; i < 8; i++) {
  2202   000FBE  0E00               	movlw	0
  2203   000FC0  6E0D               	movwf	(lcd_animacion_bienvenida@i_154+1)^0,c
  2204   000FC2  0E00               	movlw	0
  2205   000FC4  6E0C               	movwf	lcd_animacion_bienvenida@i_154^0,c
  2206   000FC6                     l1723:
  2207                           
  2208                           ;laboratorio_4.c: 252: Lcd_Shift_Right();
  2209   000FC6  EC6F  F009         	call	_Lcd_Shift_Right	;wreg free
  2210                           
  2211                           ;laboratorio_4.c: 253: _delay((unsigned long)((500)*(1000000/4000.0)));
  2212   000FCA  0EA3               	movlw	163
  2213   000FCC  6E09               	movwf	??_lcd_animacion_bienvenida^0,c
  2214   000FCE  0E55               	movlw	85
  2215   000FD0                     u1597:
  2216   000FD0  2EE8               	decfsz	wreg,f,c
  2217   000FD2  D7FE               	bra	u1597
  2218   000FD4  2E09               	decfsz	??_lcd_animacion_bienvenida^0,f,c
  2219   000FD6  D7FC               	bra	u1597
  2220   000FD8  0000               	nop	
  2221   000FDA  4A0C               	infsnz	lcd_animacion_bienvenida@i_154^0,f,c
  2222   000FDC  2A0D               	incf	(lcd_animacion_bienvenida@i_154+1)^0,f,c
  2223   000FDE  BE0D               	btfsc	(lcd_animacion_bienvenida@i_154+1)^0,7,c
  2224   000FE0  D7F2               	goto	l1723
  2225   000FE2  500D               	movf	(lcd_animacion_bienvenida@i_154+1)^0,w,c
  2226   000FE4  E105               	bnz	u1310
  2227   000FE6  0E08               	movlw	8
  2228   000FE8  5C0C               	subwf	lcd_animacion_bienvenida@i_154^0,w,c
  2229   000FEA  B0D8               	btfsc	status,0,c
  2230   000FEC  0012               	return	
  2231   000FEE  D7EB               	goto	l1723
  2232   000FF0                     u1310:
  2233   000FF0  0012               	return		;funcret
  2234   000FF2                     __end_of_lcd_animacion_bienvenida:
  2235                           	callstack 0
  2236                           
  2237 ;; *************** function _Lcd_String *****************
  2238 ;; Defined at:
  2239 ;;		line 46 in file "lcd.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;  str             1    3[COMRAM] PTR const unsigned char 
  2242 ;;		 -> STR_12(22), STR_11(15), STR_10(11), STR_9(10), 
  2243 ;;		 -> STR_8(12), STR_7(17), STR_6(12), STR_5(17), 
  2244 ;;		 -> STR_4(15), STR_3(13), STR_2(15), STR_1(15), 
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;		None
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  1    wreg      void 
  2249 ;; Registers used:
  2250 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2256 ;;      Params:         1       0       0       0       0       0       0       0       0
  2257 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2258 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2259 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2260 ;;Total ram usage:        1 bytes
  2261 ;; Hardware stack levels used: 1
  2262 ;; Hardware stack levels required when called: 2
  2263 ;; This function calls:
  2264 ;;		_Lcd_Char
  2265 ;; This function is called by:
  2266 ;;		_main
  2267 ;;		_mostrar_conteo
  2268 ;;		_mostrar_valor
  2269 ;;		_lcd_animacion_bienvenida
  2270 ;; This function uses a non-reentrant model
  2271 ;;
  2272                           
  2273                           	psect	text10
  2274   001240                     __ptext10:
  2275                           	callstack 0
  2276   001240                     _Lcd_String:
  2277                           	callstack 27
  2278                           
  2279                           ;lcd.c: 47: while (*str) {
  2280                           
  2281                           ;incstack = 0
  2282   001240  D009               	goto	l1519
  2283   001242                     l1515:
  2284                           
  2285                           ;lcd.c: 48: Lcd_Char(*str++);
  2286   001242  C004  FFF6         	movff	Lcd_String@str,tblptrl
  2287   001246                     	if	1	;There is more than 1 active tblptr byte
  2288   001246  0E08               	movlw	high __smallconst
  2289   001248  6EF7               	movwf	tblptrh,c
  2290   00124A                     	endif
  2291   00124A                     	if	0	;tblptru may be non-zero
  2292   00124A                     	endif
  2293   00124A                     	if	0	;tblptru may be non-zero
  2294   00124A                     	endif
  2295   00124A  0008               	tblrd		*
  2296   00124C  50F5               	movf	tablat,w,c
  2297   00124E  EC83  F006         	call	_Lcd_Char
  2298   001252  2A04               	incf	Lcd_String@str^0,f,c
  2299   001254                     l1519:
  2300   001254  C004  FFF6         	movff	Lcd_String@str,tblptrl
  2301   001258                     	if	1	;There is more than 1 active tblptr byte
  2302   001258  0E08               	movlw	high __smallconst
  2303   00125A  6EF7               	movwf	tblptrh,c
  2304   00125C                     	endif
  2305   00125C                     	if	0	;tblptru may be non-zero
  2306   00125C                     	endif
  2307   00125C                     	if	0	;tblptru may be non-zero
  2308   00125C                     	endif
  2309   00125C  0008               	tblrd		*
  2310   00125E  50F5               	movf	tablat,w,c
  2311   001260  0900               	iorlw	0
  2312   001262  B4D8               	btfsc	status,2,c
  2313   001264  0012               	return	
  2314   001266  D7ED               	goto	l1515
  2315   001268                     __end_of_Lcd_String:
  2316                           	callstack 0
  2317                           
  2318 ;; *************** function _Lcd_Char *****************
  2319 ;; Defined at:
  2320 ;;		line 31 in file "lcd.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;  data            1    wreg     unsigned char 
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;  data            1    2[COMRAM] unsigned char 
  2325 ;; Return value:  Size  Location     Type
  2326 ;;                  1    wreg      void 
  2327 ;; Registers used:
  2328 ;;		wreg, status,2, status,0
  2329 ;; Tracked objects:
  2330 ;;		On entry : 0/0
  2331 ;;		On exit  : 0/0
  2332 ;;		Unchanged: 0/0
  2333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2334 ;;      Params:         0       0       0       0       0       0       0       0       0
  2335 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2336 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2337 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2338 ;;Total ram usage:        3 bytes
  2339 ;; Hardware stack levels used: 1
  2340 ;; Hardware stack levels required when called: 1
  2341 ;; This function calls:
  2342 ;;		Nothing
  2343 ;; This function is called by:
  2344 ;;		_Lcd_String
  2345 ;;		_main
  2346 ;;		_mostrar_conteo
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349                           
  2350                           	psect	text11
  2351   000D06                     __ptext11:
  2352                           	callstack 0
  2353   000D06                     _Lcd_Char:
  2354                           	callstack 27
  2355                           
  2356                           ;incstack = 0
  2357                           ;Lcd_Char@data stored from wreg
  2358   000D06  6E03               	movwf	Lcd_Char@data^0,c
  2359                           
  2360                           ;lcd.c: 32: LATD0 = 1;
  2361   000D08  808C               	bsf	3980,0,c	;volatile
  2362                           
  2363                           ;lcd.c: 33: LATD2 = (data >> 4) & 1;
  2364   000D0A  C003  F001         	movff	Lcd_Char@data,??_Lcd_Char
  2365   000D0E  3A01               	swapf	??_Lcd_Char^0,f,c
  2366   000D10  0E0F               	movlw	15
  2367   000D12  1601               	andwf	??_Lcd_Char^0,f,c
  2368   000D14  3001               	rrcf	??_Lcd_Char^0,w,c
  2369   000D16  A0D8               	btfss	status,0,c
  2370   000D18  D002               	goto	u200
  2371   000D1A  848C               	bsf	3980,2,c	;volatile
  2372   000D1C  D001               	goto	u215
  2373   000D1E                     u200:
  2374   000D1E  948C               	bcf	3980,2,c	;volatile
  2375   000D20                     u215:
  2376                           
  2377                           ;lcd.c: 34: LATD3 = (data >> 5) & 1;
  2378   000D20  C003  F001         	movff	Lcd_Char@data,??_Lcd_Char
  2379   000D24  0E05               	movlw	5
  2380   000D26  6E02               	movwf	(??_Lcd_Char+1)^0,c
  2381   000D28                     u225:
  2382   000D28  90D8               	bcf	status,0,c
  2383   000D2A  3201               	rrcf	??_Lcd_Char^0,f,c
  2384   000D2C  2E02               	decfsz	(??_Lcd_Char+1)^0,f,c
  2385   000D2E  D7FC               	goto	u225
  2386   000D30  3001               	rrcf	??_Lcd_Char^0,w,c
  2387   000D32  A0D8               	btfss	status,0,c
  2388   000D34  D002               	goto	u230
  2389   000D36  868C               	bsf	3980,3,c	;volatile
  2390   000D38  D001               	goto	u245
  2391   000D3A                     u230:
  2392   000D3A  968C               	bcf	3980,3,c	;volatile
  2393   000D3C                     u245:
  2394                           
  2395                           ;lcd.c: 35: LATD4 = (data >> 6) & 1;
  2396   000D3C  C003  F001         	movff	Lcd_Char@data,??_Lcd_Char
  2397   000D40  0E06               	movlw	6
  2398   000D42  6E02               	movwf	(??_Lcd_Char+1)^0,c
  2399   000D44                     u255:
  2400   000D44  90D8               	bcf	status,0,c
  2401   000D46  3201               	rrcf	??_Lcd_Char^0,f,c
  2402   000D48  2E02               	decfsz	(??_Lcd_Char+1)^0,f,c
  2403   000D4A  D7FC               	goto	u255
  2404   000D4C  3001               	rrcf	??_Lcd_Char^0,w,c
  2405   000D4E  A0D8               	btfss	status,0,c
  2406   000D50  D002               	goto	u260
  2407   000D52  888C               	bsf	3980,4,c	;volatile
  2408   000D54  D001               	goto	u275
  2409   000D56                     u260:
  2410   000D56  988C               	bcf	3980,4,c	;volatile
  2411   000D58                     u275:
  2412                           
  2413                           ;lcd.c: 36: LATD5 = (data >> 7) & 1;
  2414   000D58  6A01               	clrf	??_Lcd_Char^0,c
  2415   000D5A  AE03               	btfss	Lcd_Char@data^0,7,c
  2416   000D5C  D001               	bra	u285
  2417   000D5E  2A01               	incf	??_Lcd_Char^0,f,c
  2418   000D60                     u285:
  2419   000D60  3001               	rrcf	??_Lcd_Char^0,w,c
  2420   000D62  A0D8               	btfss	status,0,c
  2421   000D64  D002               	goto	u290
  2422   000D66  8A8C               	bsf	3980,5,c	;volatile
  2423   000D68  D001               	goto	u305
  2424   000D6A                     u290:
  2425   000D6A  9A8C               	bcf	3980,5,c	;volatile
  2426   000D6C                     u305:
  2427                           
  2428                           ;lcd.c: 37: LATD1 = 1; _delay((unsigned long)((200)*(1000000/4000000.0))); LATD1 = 0;
  2429   000D6C  828C               	bsf	3980,1,c	;volatile
  2430   000D6E  0E10               	movlw	16
  2431   000D70                     u1607:
  2432   000D70  2EE8               	decfsz	wreg,f,c
  2433   000D72  D7FE               	bra	u1607
  2434   000D74  D000               	nop2	
  2435   000D76  928C               	bcf	3980,1,c	;volatile
  2436                           
  2437                           ;lcd.c: 39: LATD2 = data & 1;
  2438   000D78  A003               	btfss	Lcd_Char@data^0,0,c
  2439   000D7A  D002               	goto	u310
  2440   000D7C  848C               	bsf	3980,2,c	;volatile
  2441   000D7E  D001               	goto	u325
  2442   000D80                     u310:
  2443   000D80  948C               	bcf	3980,2,c	;volatile
  2444   000D82                     u325:
  2445                           
  2446                           ;lcd.c: 40: LATD3 = (data >> 1) & 1;
  2447   000D82  C003  F001         	movff	Lcd_Char@data,??_Lcd_Char
  2448   000D86  90D8               	bcf	status,0,c
  2449   000D88  3201               	rrcf	??_Lcd_Char^0,f,c
  2450   000D8A  3001               	rrcf	??_Lcd_Char^0,w,c
  2451   000D8C  A0D8               	btfss	status,0,c
  2452   000D8E  D002               	goto	u330
  2453   000D90  868C               	bsf	3980,3,c	;volatile
  2454   000D92  D001               	goto	u345
  2455   000D94                     u330:
  2456   000D94  968C               	bcf	3980,3,c	;volatile
  2457   000D96                     u345:
  2458                           
  2459                           ;lcd.c: 41: LATD4 = (data >> 2) & 1;
  2460   000D96  C003  F001         	movff	Lcd_Char@data,??_Lcd_Char
  2461   000D9A  90D8               	bcf	status,0,c
  2462   000D9C  3201               	rrcf	??_Lcd_Char^0,f,c
  2463   000D9E  90D8               	bcf	status,0,c
  2464   000DA0  3201               	rrcf	??_Lcd_Char^0,f,c
  2465   000DA2  3001               	rrcf	??_Lcd_Char^0,w,c
  2466   000DA4  A0D8               	btfss	status,0,c
  2467   000DA6  D002               	goto	u350
  2468   000DA8  888C               	bsf	3980,4,c	;volatile
  2469   000DAA  D001               	goto	u365
  2470   000DAC                     u350:
  2471   000DAC  988C               	bcf	3980,4,c	;volatile
  2472   000DAE                     u365:
  2473                           
  2474                           ;lcd.c: 42: LATD5 = (data >> 3) & 1;
  2475   000DAE  C003  F001         	movff	Lcd_Char@data,??_Lcd_Char
  2476   000DB2  90D8               	bcf	status,0,c
  2477   000DB4  3201               	rrcf	??_Lcd_Char^0,f,c
  2478   000DB6  90D8               	bcf	status,0,c
  2479   000DB8  3201               	rrcf	??_Lcd_Char^0,f,c
  2480   000DBA  90D8               	bcf	status,0,c
  2481   000DBC  3201               	rrcf	??_Lcd_Char^0,f,c
  2482   000DBE  3001               	rrcf	??_Lcd_Char^0,w,c
  2483   000DC0  A0D8               	btfss	status,0,c
  2484   000DC2  D002               	goto	u370
  2485   000DC4  8A8C               	bsf	3980,5,c	;volatile
  2486   000DC6  D001               	goto	u385
  2487   000DC8                     u370:
  2488   000DC8  9A8C               	bcf	3980,5,c	;volatile
  2489   000DCA                     u385:
  2490                           
  2491                           ;lcd.c: 43: LATD1 = 1; _delay((unsigned long)((200)*(1000000/4000000.0))); LATD1 = 0;
  2492   000DCA  828C               	bsf	3980,1,c	;volatile
  2493   000DCC  0E10               	movlw	16
  2494   000DCE                     u1617:
  2495   000DCE  2EE8               	decfsz	wreg,f,c
  2496   000DD0  D7FE               	bra	u1617
  2497   000DD2  D000               	nop2	
  2498   000DD4  928C               	bcf	3980,1,c	;volatile
  2499   000DD6  0012               	return		;funcret
  2500   000DD8                     __end_of_Lcd_Char:
  2501                           	callstack 0
  2502                           
  2503 ;; *************** function _Lcd_Shift_Right *****************
  2504 ;; Defined at:
  2505 ;;		line 66 in file "lcd.c"
  2506 ;; Parameters:    Size  Location     Type
  2507 ;;		None
  2508 ;; Auto vars:     Size  Location     Type
  2509 ;;		None
  2510 ;; Return value:  Size  Location     Type
  2511 ;;                  1    wreg      void 
  2512 ;; Registers used:
  2513 ;;		wreg, status,2, status,0, cstack
  2514 ;; Tracked objects:
  2515 ;;		On entry : 0/0
  2516 ;;		On exit  : 0/0
  2517 ;;		Unchanged: 0/0
  2518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2519 ;;      Params:         0       0       0       0       0       0       0       0       0
  2520 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2521 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2522 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2523 ;;Total ram usage:        0 bytes
  2524 ;; Hardware stack levels used: 1
  2525 ;; Hardware stack levels required when called: 2
  2526 ;; This function calls:
  2527 ;;		_Lcd_Cmd
  2528 ;; This function is called by:
  2529 ;;		_lcd_animacion_bienvenida
  2530 ;; This function uses a non-reentrant model
  2531 ;;
  2532                           
  2533                           	psect	text12
  2534   0012DE                     __ptext12:
  2535                           	callstack 0
  2536   0012DE                     _Lcd_Shift_Right:
  2537                           	callstack 27
  2538                           
  2539                           ;lcd.c: 67: Lcd_Cmd(0x1C);
  2540                           
  2541                           ;incstack = 0
  2542   0012DE  0E1C               	movlw	28
  2543   0012E0  ECEC  F006         	call	_Lcd_Cmd
  2544   0012E4  0012               	return		;funcret
  2545   0012E6                     __end_of_Lcd_Shift_Right:
  2546                           	callstack 0
  2547                           
  2548 ;; *************** function _Lcd_Shift_Left *****************
  2549 ;; Defined at:
  2550 ;;		line 62 in file "lcd.c"
  2551 ;; Parameters:    Size  Location     Type
  2552 ;;		None
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;		None
  2555 ;; Return value:  Size  Location     Type
  2556 ;;                  1    wreg      void 
  2557 ;; Registers used:
  2558 ;;		wreg, status,2, status,0, cstack
  2559 ;; Tracked objects:
  2560 ;;		On entry : 0/0
  2561 ;;		On exit  : 0/0
  2562 ;;		Unchanged: 0/0
  2563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2564 ;;      Params:         0       0       0       0       0       0       0       0       0
  2565 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2566 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2567 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2568 ;;Total ram usage:        0 bytes
  2569 ;; Hardware stack levels used: 1
  2570 ;; Hardware stack levels required when called: 2
  2571 ;; This function calls:
  2572 ;;		_Lcd_Cmd
  2573 ;; This function is called by:
  2574 ;;		_lcd_animacion_bienvenida
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578                           	psect	text13
  2579   0012E6                     __ptext13:
  2580                           	callstack 0
  2581   0012E6                     _Lcd_Shift_Left:
  2582                           	callstack 27
  2583                           
  2584                           ;lcd.c: 63: Lcd_Cmd(0x18);
  2585                           
  2586                           ;incstack = 0
  2587   0012E6  0E18               	movlw	24
  2588   0012E8  ECEC  F006         	call	_Lcd_Cmd
  2589   0012EC  0012               	return		;funcret
  2590   0012EE                     __end_of_Lcd_Shift_Left:
  2591                           	callstack 0
  2592                           
  2593 ;; *************** function _Lcd_Set_Cursor *****************
  2594 ;; Defined at:
  2595 ;;		line 52 in file "lcd.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;  row             1    wreg     unsigned char 
  2598 ;;  column          1    3[COMRAM] unsigned char 
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;  row             1    4[COMRAM] unsigned char 
  2601 ;;  pos             1    7[COMRAM] unsigned char 
  2602 ;; Return value:  Size  Location     Type
  2603 ;;                  1    wreg      void 
  2604 ;; Registers used:
  2605 ;;		wreg, status,2, status,0, cstack
  2606 ;; Tracked objects:
  2607 ;;		On entry : 0/0
  2608 ;;		On exit  : 0/0
  2609 ;;		Unchanged: 0/0
  2610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2611 ;;      Params:         1       0       0       0       0       0       0       0       0
  2612 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2613 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2614 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2615 ;;Total ram usage:        5 bytes
  2616 ;; Hardware stack levels used: 1
  2617 ;; Hardware stack levels required when called: 2
  2618 ;; This function calls:
  2619 ;;		_Lcd_Cmd
  2620 ;; This function is called by:
  2621 ;;		_main
  2622 ;;		_mostrar_conteo
  2623 ;;		_mostrar_valor
  2624 ;;		_lcd_animacion_bienvenida
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           	psect	text14
  2629   001268                     __ptext14:
  2630                           	callstack 0
  2631   001268                     _Lcd_Set_Cursor:
  2632                           	callstack 27
  2633                           
  2634                           ;incstack = 0
  2635                           ;Lcd_Set_Cursor@row stored from wreg
  2636   001268  6E05               	movwf	Lcd_Set_Cursor@row^0,c
  2637                           
  2638                           ;lcd.c: 53: char pos = (row == 1) ? 0x80 + (column - 1) : 0xC0 + (column - 1);
  2639   00126A  0405               	decf	Lcd_Set_Cursor@row^0,w,c
  2640   00126C  B4D8               	btfsc	status,2,c
  2641   00126E  D002               	goto	l1525
  2642   001270  0EBF               	movlw	191
  2643   001272  D001               	goto	L1
  2644   001274                     l1525:
  2645   001274  0E7F               	movlw	127
  2646   001276                     L1:
  2647   001276  2404               	addwf	Lcd_Set_Cursor@column^0,w,c
  2648   001278  6E06               	movwf	_Lcd_Set_Cursor$101^0,c
  2649   00127A  6A07               	clrf	(_Lcd_Set_Cursor$101+1)^0,c
  2650   00127C  0E00               	movlw	0
  2651   00127E  2207               	addwfc	(_Lcd_Set_Cursor$101+1)^0,f,c
  2652   001280  C006  F008         	movff	_Lcd_Set_Cursor$101,Lcd_Set_Cursor@pos
  2653                           
  2654                           ;lcd.c: 54: Lcd_Cmd(pos);
  2655   001284  5008               	movf	Lcd_Set_Cursor@pos^0,w,c
  2656   001286  ECEC  F006         	call	_Lcd_Cmd
  2657   00128A  0012               	return		;funcret
  2658   00128C                     __end_of_Lcd_Set_Cursor:
  2659                           	callstack 0
  2660                           
  2661 ;; *************** function _Lcd_Clear *****************
  2662 ;; Defined at:
  2663 ;;		line 57 in file "lcd.c"
  2664 ;; Parameters:    Size  Location     Type
  2665 ;;		None
  2666 ;; Auto vars:     Size  Location     Type
  2667 ;;		None
  2668 ;; Return value:  Size  Location     Type
  2669 ;;                  1    wreg      void 
  2670 ;; Registers used:
  2671 ;;		wreg, status,2, status,0, cstack
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2677 ;;      Params:         0       0       0       0       0       0       0       0       0
  2678 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2679 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2680 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2681 ;;Total ram usage:        0 bytes
  2682 ;; Hardware stack levels used: 1
  2683 ;; Hardware stack levels required when called: 2
  2684 ;; This function calls:
  2685 ;;		_Lcd_Cmd
  2686 ;; This function is called by:
  2687 ;;		_main
  2688 ;;		_mostrar_conteo
  2689 ;;		_mostrar_valor
  2690 ;;		_lcd_animacion_bienvenida
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694                           	psect	text15
  2695   0012CE                     __ptext15:
  2696                           	callstack 0
  2697   0012CE                     _Lcd_Clear:
  2698                           	callstack 27
  2699                           
  2700                           ;lcd.c: 58: Lcd_Cmd(0x01);
  2701                           
  2702                           ;incstack = 0
  2703   0012CE  0E01               	movlw	1
  2704   0012D0  ECEC  F006         	call	_Lcd_Cmd
  2705                           
  2706                           ;lcd.c: 59: _delay((unsigned long)((2)*(1000000/4000.0)));
  2707   0012D4  0EA6               	movlw	166
  2708   0012D6                     u1627:
  2709   0012D6  2EE8               	decfsz	wreg,f,c
  2710   0012D8  D7FE               	bra	u1627
  2711   0012DA  D000               	nop2	
  2712   0012DC  0012               	return		;funcret
  2713   0012DE                     __end_of_Lcd_Clear:
  2714                           	callstack 0
  2715                           
  2716 ;; *************** function _Teclado4x4 *****************
  2717 ;; Defined at:
  2718 ;;		line 182 in file "laboratorio_4.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;		None
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;  col             2    4[COMRAM] int 
  2723 ;;  fila            2    2[COMRAM] int 
  2724 ;; Return value:  Size  Location     Type
  2725 ;;                  1    wreg      unsigned char 
  2726 ;; Registers used:
  2727 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2733 ;;      Params:         0       0       0       0       0       0       0       0       0
  2734 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2735 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2736 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2737 ;;Total ram usage:        6 bytes
  2738 ;; Hardware stack levels used: 1
  2739 ;; Hardware stack levels required when called: 1
  2740 ;; This function calls:
  2741 ;;		Nothing
  2742 ;; This function is called by:
  2743 ;;		_main
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747                           	psect	text16
  2748   000EAA                     __ptext16:
  2749                           	callstack 0
  2750   000EAA                     _Teclado4x4:
  2751                           	callstack 29
  2752                           
  2753                           ;laboratorio_4.c: 183: for (int fila = 0; fila < 4; fila++) {
  2754                           
  2755                           ;incstack = 0
  2756   000EAA  0E00               	movlw	0
  2757   000EAC  6E04               	movwf	(Teclado4x4@fila+1)^0,c
  2758   000EAE  0E00               	movlw	0
  2759   000EB0  6E03               	movwf	Teclado4x4@fila^0,c
  2760   000EB2                     l1213:
  2761   000EB2  BE04               	btfsc	(Teclado4x4@fila+1)^0,7,c
  2762   000EB4  D006               	goto	l1217
  2763   000EB6  5004               	movf	(Teclado4x4@fila+1)^0,w,c
  2764   000EB8  E156               	bnz	l1245
  2765   000EBA  0E04               	movlw	4
  2766   000EBC  5C03               	subwf	Teclado4x4@fila^0,w,c
  2767   000EBE  B0D8               	btfsc	status,0,c
  2768   000EC0  D052               	goto	l1245
  2769   000EC2                     l1217:
  2770                           
  2771                           ;laboratorio_4.c: 184: LATB = ~(1 << fila) & 0x0F;
  2772   000EC2  C003  F001         	movff	Teclado4x4@fila,??_Teclado4x4
  2773   000EC6  0E01               	movlw	1
  2774   000EC8  6E02               	movwf	(??_Teclado4x4+1)^0,c
  2775   000ECA  2A01               	incf	??_Teclado4x4^0,f,c
  2776   000ECC  D002               	goto	u624
  2777   000ECE                     u625:
  2778   000ECE  90D8               	bcf	status,0,c
  2779   000ED0  3602               	rlcf	(??_Teclado4x4+1)^0,f,c
  2780   000ED2                     u624:
  2781   000ED2  2E01               	decfsz	??_Teclado4x4^0,f,c
  2782   000ED4  D7FC               	goto	u625
  2783   000ED6  5002               	movf	(??_Teclado4x4+1)^0,w,c
  2784   000ED8  0AFF               	xorlw	255
  2785   000EDA  0B0F               	andlw	15
  2786   000EDC  6E8A               	movwf	138,c	;volatile
  2787                           
  2788                           ;laboratorio_4.c: 185: _delay((unsigned long)((5)*(1000000/4000.0)));
  2789   000EDE  0EFA               	movlw	250
  2790   000EE0                     u1637:
  2791   000EE0  D000               	nop2	
  2792   000EE2  2EE8               	decfsz	wreg,f,c
  2793   000EE4  D7FD               	bra	u1637
  2794                           
  2795                           ;laboratorio_4.c: 186: for (int col = 0; col < 4; col++) {
  2796   000EE6  0E00               	movlw	0
  2797   000EE8  6E06               	movwf	(Teclado4x4@col+1)^0,c
  2798   000EEA  0E00               	movlw	0
  2799   000EEC  6E05               	movwf	Teclado4x4@col^0,c
  2800   000EEE                     l1227:
  2801                           
  2802                           ;laboratorio_4.c: 187: if (!(PORTB & (1 << (col + 4)))) {
  2803   000EEE  C005  F001         	movff	Teclado4x4@col,??_Teclado4x4
  2804   000EF2  0E04               	movlw	4
  2805   000EF4  2601               	addwf	??_Teclado4x4^0,f,c
  2806   000EF6  0E01               	movlw	1
  2807   000EF8  6E02               	movwf	(??_Teclado4x4+1)^0,c
  2808   000EFA  2A01               	incf	??_Teclado4x4^0,f,c
  2809   000EFC  D002               	goto	u634
  2810   000EFE                     u635:
  2811   000EFE  90D8               	bcf	status,0,c
  2812   000F00  3602               	rlcf	(??_Teclado4x4+1)^0,f,c
  2813   000F02                     u634:
  2814   000F02  2E01               	decfsz	??_Teclado4x4^0,f,c
  2815   000F04  D7FC               	goto	u635
  2816   000F06  5002               	movf	(??_Teclado4x4+1)^0,w,c
  2817   000F08  1481               	andwf	129,w,c	;volatile
  2818   000F0A  0900               	iorlw	0
  2819   000F0C  A4D8               	btfss	status,2,c
  2820   000F0E  D01E               	goto	l1237
  2821   000F10                     u640:
  2822   000F10  C005  F001         	movff	Teclado4x4@col,??_Teclado4x4
  2823   000F14  0E04               	movlw	4
  2824   000F16  2601               	addwf	??_Teclado4x4^0,f,c
  2825   000F18  0E01               	movlw	1
  2826   000F1A  6E02               	movwf	(??_Teclado4x4+1)^0,c
  2827   000F1C  2A01               	incf	??_Teclado4x4^0,f,c
  2828   000F1E  D002               	goto	u654
  2829   000F20                     u655:
  2830   000F20  90D8               	bcf	status,0,c
  2831   000F22  3602               	rlcf	(??_Teclado4x4+1)^0,f,c
  2832   000F24                     u654:
  2833   000F24  2E01               	decfsz	??_Teclado4x4^0,f,c
  2834   000F26  D7FC               	goto	u655
  2835   000F28  5002               	movf	(??_Teclado4x4+1)^0,w,c
  2836   000F2A  1481               	andwf	129,w,c	;volatile
  2837   000F2C  0900               	iorlw	0
  2838   000F2E  B4D8               	btfsc	status,2,c
  2839   000F30  D7EF               	goto	u640
  2840                           
  2841                           ;laboratorio_4.c: 189: return teclas[fila][col];
  2842   000F32  5003               	movf	Teclado4x4@fila^0,w,c
  2843   000F34  0D04               	mullw	4
  2844   000F36  50F3               	movf	243,w,c
  2845   000F38  0F01               	addlw	low _teclas
  2846   000F3A  2405               	addwf	Teclado4x4@col^0,w,c
  2847   000F3C  6E01               	movwf	??_Teclado4x4^0,c
  2848   000F3E  C001  FFF6         	movff	??_Teclado4x4,tblptrl
  2849   000F42                     	if	1	;There is more than 1 active tblptr byte
  2850   000F42  0E08               	movlw	high __smallconst
  2851   000F44  6EF7               	movwf	tblptrh,c
  2852   000F46                     	endif
  2853   000F46                     	if	0	;tblptru may be non-zero
  2854   000F46                     	endif
  2855   000F46                     	if	0	;tblptru may be non-zero
  2856   000F46                     	endif
  2857   000F46  0008               	tblrd		*
  2858   000F48  50F5               	movf	tablat,w,c
  2859   000F4A  0012               	return	
  2860   000F4C                     l1237:
  2861   000F4C  4A05               	infsnz	Teclado4x4@col^0,f,c
  2862   000F4E  2A06               	incf	(Teclado4x4@col+1)^0,f,c
  2863   000F50  BE06               	btfsc	(Teclado4x4@col+1)^0,7,c
  2864   000F52  D7CD               	goto	l1227
  2865   000F54  5006               	movf	(Teclado4x4@col+1)^0,w,c
  2866   000F56  E104               	bnz	u670
  2867   000F58  0E04               	movlw	4
  2868   000F5A  5C05               	subwf	Teclado4x4@col^0,w,c
  2869   000F5C  A0D8               	btfss	status,0,c
  2870   000F5E  D7C7               	goto	l1227
  2871   000F60                     u670:
  2872   000F60  4A03               	infsnz	Teclado4x4@fila^0,f,c
  2873   000F62  2A04               	incf	(Teclado4x4@fila+1)^0,f,c
  2874   000F64  D7A6               	goto	l1213
  2875   000F66                     l1245:
  2876                           
  2877                           ;laboratorio_4.c: 190: };laboratorio_4.c: 191: };laboratorio_4.c: 192: };laboratorio_4.c
      +                          : 193: return 0;
  2878   000F66  0E00               	movlw	0
  2879   000F68  0012               	return		;funcret
  2880   000F6A                     __end_of_Teclado4x4:
  2881                           	callstack 0
  2882                           
  2883 ;; *************** function _Lcd_Init *****************
  2884 ;; Defined at:
  2885 ;;		line 3 in file "lcd.c"
  2886 ;; Parameters:    Size  Location     Type
  2887 ;;		None
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;		None
  2890 ;; Return value:  Size  Location     Type
  2891 ;;                  1    wreg      void 
  2892 ;; Registers used:
  2893 ;;		wreg, status,2, status,0, cstack
  2894 ;; Tracked objects:
  2895 ;;		On entry : 0/0
  2896 ;;		On exit  : 0/0
  2897 ;;		Unchanged: 0/0
  2898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2899 ;;      Params:         0       0       0       0       0       0       0       0       0
  2900 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2901 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2902 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2903 ;;Total ram usage:        1 bytes
  2904 ;; Hardware stack levels used: 1
  2905 ;; Hardware stack levels required when called: 2
  2906 ;; This function calls:
  2907 ;;		_Lcd_Cmd
  2908 ;; This function is called by:
  2909 ;;		_main
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913                           	psect	text17
  2914   0011D8                     __ptext17:
  2915                           	callstack 0
  2916   0011D8                     _Lcd_Init:
  2917                           	callstack 28
  2918                           
  2919                           ;lcd.c: 4: TRISD = 0x00;
  2920                           
  2921                           ;incstack = 0
  2922   0011D8  6A95               	clrf	149,c	;volatile
  2923                           
  2924                           ;lcd.c: 5: LATD = 0x00;
  2925   0011DA  6A8C               	clrf	140,c	;volatile
  2926                           
  2927                           ;lcd.c: 7: _delay((unsigned long)((20)*(1000000/4000.0)));
  2928   0011DC  0E07               	movlw	7
  2929   0011DE  6E04               	movwf	??_Lcd_Init^0,c
  2930   0011E0  0E7D               	movlw	125
  2931   0011E2                     u1647:
  2932   0011E2  2EE8               	decfsz	wreg,f,c
  2933   0011E4  D7FE               	bra	u1647
  2934   0011E6  2E04               	decfsz	??_Lcd_Init^0,f,c
  2935   0011E8  D7FC               	bra	u1647
  2936   0011EA  0000               	nop	
  2937                           
  2938                           ;lcd.c: 8: Lcd_Cmd(0x02);
  2939   0011EC  0E02               	movlw	2
  2940   0011EE  ECEC  F006         	call	_Lcd_Cmd
  2941                           
  2942                           ;lcd.c: 9: Lcd_Cmd(0x28);
  2943   0011F2  0E28               	movlw	40
  2944   0011F4  ECEC  F006         	call	_Lcd_Cmd
  2945                           
  2946                           ;lcd.c: 10: Lcd_Cmd(0x0C);
  2947   0011F8  0E0C               	movlw	12
  2948   0011FA  ECEC  F006         	call	_Lcd_Cmd
  2949                           
  2950                           ;lcd.c: 11: Lcd_Cmd(0x06);
  2951   0011FE  0E06               	movlw	6
  2952   001200  ECEC  F006         	call	_Lcd_Cmd
  2953                           
  2954                           ;lcd.c: 12: Lcd_Cmd(0x01);
  2955   001204  0E01               	movlw	1
  2956   001206  ECEC  F006         	call	_Lcd_Cmd
  2957                           
  2958                           ;lcd.c: 13: _delay((unsigned long)((2)*(1000000/4000.0)));
  2959   00120A  0EA6               	movlw	166
  2960   00120C                     u1657:
  2961   00120C  2EE8               	decfsz	wreg,f,c
  2962   00120E  D7FE               	bra	u1657
  2963   001210  D000               	nop2	
  2964   001212  0012               	return		;funcret
  2965   001214                     __end_of_Lcd_Init:
  2966                           	callstack 0
  2967                           
  2968 ;; *************** function _Lcd_Cmd *****************
  2969 ;; Defined at:
  2970 ;;		line 16 in file "lcd.c"
  2971 ;; Parameters:    Size  Location     Type
  2972 ;;  cmd             1    wreg     unsigned char 
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;  cmd             1    2[COMRAM] unsigned char 
  2975 ;; Return value:  Size  Location     Type
  2976 ;;                  1    wreg      void 
  2977 ;; Registers used:
  2978 ;;		wreg, status,2, status,0
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2984 ;;      Params:         0       0       0       0       0       0       0       0       0
  2985 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2986 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2987 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2988 ;;Total ram usage:        3 bytes
  2989 ;; Hardware stack levels used: 1
  2990 ;; Hardware stack levels required when called: 1
  2991 ;; This function calls:
  2992 ;;		Nothing
  2993 ;; This function is called by:
  2994 ;;		_Lcd_Init
  2995 ;;		_Lcd_Set_Cursor
  2996 ;;		_Lcd_Clear
  2997 ;;		_Lcd_Shift_Left
  2998 ;;		_Lcd_Shift_Right
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001                           
  3002                           	psect	text18
  3003   000DD8                     __ptext18:
  3004                           	callstack 0
  3005   000DD8                     _Lcd_Cmd:
  3006                           	callstack 27
  3007                           
  3008                           ;incstack = 0
  3009                           ;Lcd_Cmd@cmd stored from wreg
  3010   000DD8  6E03               	movwf	Lcd_Cmd@cmd^0,c
  3011                           
  3012                           ;lcd.c: 17: LATD0 = 0;
  3013   000DDA  908C               	bcf	3980,0,c	;volatile
  3014                           
  3015                           ;lcd.c: 18: LATD2 = (cmd >> 4) & 1;
  3016   000DDC  C003  F001         	movff	Lcd_Cmd@cmd,??_Lcd_Cmd
  3017   000DE0  3A01               	swapf	??_Lcd_Cmd^0,f,c
  3018   000DE2  0E0F               	movlw	15
  3019   000DE4  1601               	andwf	??_Lcd_Cmd^0,f,c
  3020   000DE6  3001               	rrcf	??_Lcd_Cmd^0,w,c
  3021   000DE8  A0D8               	btfss	status,0,c
  3022   000DEA  D002               	goto	u910
  3023   000DEC  848C               	bsf	3980,2,c	;volatile
  3024   000DEE  D001               	goto	u925
  3025   000DF0                     u910:
  3026   000DF0  948C               	bcf	3980,2,c	;volatile
  3027   000DF2                     u925:
  3028                           
  3029                           ;lcd.c: 19: LATD3 = (cmd >> 5) & 1;
  3030   000DF2  C003  F001         	movff	Lcd_Cmd@cmd,??_Lcd_Cmd
  3031   000DF6  0E05               	movlw	5
  3032   000DF8  6E02               	movwf	(??_Lcd_Cmd+1)^0,c
  3033   000DFA                     u935:
  3034   000DFA  90D8               	bcf	status,0,c
  3035   000DFC  3201               	rrcf	??_Lcd_Cmd^0,f,c
  3036   000DFE  2E02               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  3037   000E00  D7FC               	goto	u935
  3038   000E02  3001               	rrcf	??_Lcd_Cmd^0,w,c
  3039   000E04  A0D8               	btfss	status,0,c
  3040   000E06  D002               	goto	u940
  3041   000E08  868C               	bsf	3980,3,c	;volatile
  3042   000E0A  D001               	goto	u955
  3043   000E0C                     u940:
  3044   000E0C  968C               	bcf	3980,3,c	;volatile
  3045   000E0E                     u955:
  3046                           
  3047                           ;lcd.c: 20: LATD4 = (cmd >> 6) & 1;
  3048   000E0E  C003  F001         	movff	Lcd_Cmd@cmd,??_Lcd_Cmd
  3049   000E12  0E06               	movlw	6
  3050   000E14  6E02               	movwf	(??_Lcd_Cmd+1)^0,c
  3051   000E16                     u965:
  3052   000E16  90D8               	bcf	status,0,c
  3053   000E18  3201               	rrcf	??_Lcd_Cmd^0,f,c
  3054   000E1A  2E02               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  3055   000E1C  D7FC               	goto	u965
  3056   000E1E  3001               	rrcf	??_Lcd_Cmd^0,w,c
  3057   000E20  A0D8               	btfss	status,0,c
  3058   000E22  D002               	goto	u970
  3059   000E24  888C               	bsf	3980,4,c	;volatile
  3060   000E26  D001               	goto	u985
  3061   000E28                     u970:
  3062   000E28  988C               	bcf	3980,4,c	;volatile
  3063   000E2A                     u985:
  3064                           
  3065                           ;lcd.c: 21: LATD5 = (cmd >> 7) & 1;
  3066   000E2A  6A01               	clrf	??_Lcd_Cmd^0,c
  3067   000E2C  AE03               	btfss	Lcd_Cmd@cmd^0,7,c
  3068   000E2E  D001               	bra	u995
  3069   000E30  2A01               	incf	??_Lcd_Cmd^0,f,c
  3070   000E32                     u995:
  3071   000E32  3001               	rrcf	??_Lcd_Cmd^0,w,c
  3072   000E34  A0D8               	btfss	status,0,c
  3073   000E36  D002               	goto	u1000
  3074   000E38  8A8C               	bsf	3980,5,c	;volatile
  3075   000E3A  D001               	goto	u1015
  3076   000E3C                     u1000:
  3077   000E3C  9A8C               	bcf	3980,5,c	;volatile
  3078   000E3E                     u1015:
  3079                           
  3080                           ;lcd.c: 22: LATD1 = 1; _delay((unsigned long)((2)*(1000000/4000.0))); LATD1 = 0;
  3081   000E3E  828C               	bsf	3980,1,c	;volatile
  3082   000E40  0EA6               	movlw	166
  3083   000E42                     u1667:
  3084   000E42  2EE8               	decfsz	wreg,f,c
  3085   000E44  D7FE               	bra	u1667
  3086   000E46  D000               	nop2	
  3087   000E48  928C               	bcf	3980,1,c	;volatile
  3088                           
  3089                           ;lcd.c: 24: LATD2 = cmd & 1;
  3090   000E4A  A003               	btfss	Lcd_Cmd@cmd^0,0,c
  3091   000E4C  D002               	goto	u1020
  3092   000E4E  848C               	bsf	3980,2,c	;volatile
  3093   000E50  D001               	goto	u1035
  3094   000E52                     u1020:
  3095   000E52  948C               	bcf	3980,2,c	;volatile
  3096   000E54                     u1035:
  3097                           
  3098                           ;lcd.c: 25: LATD3 = (cmd >> 1) & 1;
  3099   000E54  C003  F001         	movff	Lcd_Cmd@cmd,??_Lcd_Cmd
  3100   000E58  90D8               	bcf	status,0,c
  3101   000E5A  3201               	rrcf	??_Lcd_Cmd^0,f,c
  3102   000E5C  3001               	rrcf	??_Lcd_Cmd^0,w,c
  3103   000E5E  A0D8               	btfss	status,0,c
  3104   000E60  D002               	goto	u1040
  3105   000E62  868C               	bsf	3980,3,c	;volatile
  3106   000E64  D001               	goto	u1055
  3107   000E66                     u1040:
  3108   000E66  968C               	bcf	3980,3,c	;volatile
  3109   000E68                     u1055:
  3110                           
  3111                           ;lcd.c: 26: LATD4 = (cmd >> 2) & 1;
  3112   000E68  C003  F001         	movff	Lcd_Cmd@cmd,??_Lcd_Cmd
  3113   000E6C  90D8               	bcf	status,0,c
  3114   000E6E  3201               	rrcf	??_Lcd_Cmd^0,f,c
  3115   000E70  90D8               	bcf	status,0,c
  3116   000E72  3201               	rrcf	??_Lcd_Cmd^0,f,c
  3117   000E74  3001               	rrcf	??_Lcd_Cmd^0,w,c
  3118   000E76  A0D8               	btfss	status,0,c
  3119   000E78  D002               	goto	u1060
  3120   000E7A  888C               	bsf	3980,4,c	;volatile
  3121   000E7C  D001               	goto	u1075
  3122   000E7E                     u1060:
  3123   000E7E  988C               	bcf	3980,4,c	;volatile
  3124   000E80                     u1075:
  3125                           
  3126                           ;lcd.c: 27: LATD5 = (cmd >> 3) & 1;
  3127   000E80  C003  F001         	movff	Lcd_Cmd@cmd,??_Lcd_Cmd
  3128   000E84  90D8               	bcf	status,0,c
  3129   000E86  3201               	rrcf	??_Lcd_Cmd^0,f,c
  3130   000E88  90D8               	bcf	status,0,c
  3131   000E8A  3201               	rrcf	??_Lcd_Cmd^0,f,c
  3132   000E8C  90D8               	bcf	status,0,c
  3133   000E8E  3201               	rrcf	??_Lcd_Cmd^0,f,c
  3134   000E90  3001               	rrcf	??_Lcd_Cmd^0,w,c
  3135   000E92  A0D8               	btfss	status,0,c
  3136   000E94  D002               	goto	u1080
  3137   000E96  8A8C               	bsf	3980,5,c	;volatile
  3138   000E98  D001               	goto	u1095
  3139   000E9A                     u1080:
  3140   000E9A  9A8C               	bcf	3980,5,c	;volatile
  3141   000E9C                     u1095:
  3142                           
  3143                           ;lcd.c: 28: LATD1 = 1; _delay((unsigned long)((2)*(1000000/4000.0))); LATD1 = 0;
  3144   000E9C  828C               	bsf	3980,1,c	;volatile
  3145   000E9E  0EA6               	movlw	166
  3146   000EA0                     u1677:
  3147   000EA0  2EE8               	decfsz	wreg,f,c
  3148   000EA2  D7FE               	bra	u1677
  3149   000EA4  D000               	nop2	
  3150   000EA6  928C               	bcf	3980,1,c	;volatile
  3151   000EA8  0012               	return		;funcret
  3152   000EAA                     __end_of_Lcd_Cmd:
  3153                           	callstack 0
  3154                           
  3155 ;; *************** function _ISR *****************
  3156 ;; Defined at:
  3157 ;;		line 230 in file "laboratorio_4.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;		None
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;		None
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  1    wreg      void 
  3164 ;; Registers used:
  3165 ;;		wreg, status,2
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3171 ;;      Params:         0       0       0       0       0       0       0       0       0
  3172 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3173 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3174 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3175 ;;Total ram usage:        0 bytes
  3176 ;; Hardware stack levels used: 1
  3177 ;; This function calls:
  3178 ;;		Nothing
  3179 ;; This function is called by:
  3180 ;;		Interrupt level 2
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184                           	psect	intcode
  3185   000008                     __pintcode:
  3186                           	callstack 0
  3187   000008                     _ISR:
  3188                           	callstack 27
  3189                           
  3190                           ;incstack = 0
  3191   000008  821E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3192   00000A  ED52  F009         	call	int_func,f	;refresh shadow registers
  3193                           
  3194                           	psect	intcode_body
  3195   0012A4                     __pintcode_body:
  3196                           	callstack 27
  3197   0012A4                     int_func:
  3198                           	callstack 27
  3199   0012A4  0006               	pop		; remove dummy address from shadow register refresh
  3200                           
  3201                           ;laboratorio_4.c: 231: if (TMR0IF) {
  3202   0012A6  A4F2               	btfss	4082,2,c	;volatile
  3203   0012A8  D006               	goto	i2l191
  3204                           
  3205                           ;laboratorio_4.c: 232: TMR0 = 3036;
  3206   0012AA  0E0B               	movlw	11
  3207   0012AC  6ED7               	movwf	215,c	;volatile
  3208   0012AE  0EDC               	movlw	220
  3209   0012B0  6ED6               	movwf	214,c	;volatile
  3210                           
  3211                           ;laboratorio_4.c: 233: TMR0IF = 0;
  3212   0012B2  94F2               	bcf	4082,2,c	;volatile
  3213                           
  3214                           ;laboratorio_4.c: 234: LATC2 ^= 1;
  3215   0012B4  748B               	btg	3979,2,c	;volatile
  3216   0012B6                     i2l191:
  3217   0012B6  921E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3218   0012B8  0011               	retfie		f
  3219   0012BA                     __end_of_ISR:
  3220                           	callstack 0
  3221                           
  3222                           	psect	rparam
  3223   000001                     ___rparam_used  equ	1
  3224   000000                     ___param_bank   equ	0
  3225   000000                     __Lparam        equ	__Lrparam
  3226   000000                     __Hparam        equ	__Hrparam
  3227                           
  3228                           	psect	temp
  3229   00001E                     btemp:
  3230                           	callstack 0
  3231   00001E                     	ds	1
  3232   00001E                     int$flags       set	btemp
  3233   00001F                     wtemp8          set	btemp+1
  3234   00001F                     ttemp5          set	btemp+1
  3235   000022                     ttemp6          set	btemp+4
  3236   000026                     ttemp7          set	btemp+8
  3237                           
  3238                           	psect	idloc
  3239                           
  3240                           ;Config register IDLOC0 @ 0x200000
  3241                           ;	unspecified, using default values
  3242   200000                     	org	2097152
  3243   200000  FF                 	db	255
  3244                           
  3245                           ;Config register IDLOC1 @ 0x200001
  3246                           ;	unspecified, using default values
  3247   200001                     	org	2097153
  3248   200001  FF                 	db	255
  3249                           
  3250                           ;Config register IDLOC2 @ 0x200002
  3251                           ;	unspecified, using default values
  3252   200002                     	org	2097154
  3253   200002  FF                 	db	255
  3254                           
  3255                           ;Config register IDLOC3 @ 0x200003
  3256                           ;	unspecified, using default values
  3257   200003                     	org	2097155
  3258   200003  FF                 	db	255
  3259                           
  3260                           ;Config register IDLOC4 @ 0x200004
  3261                           ;	unspecified, using default values
  3262   200004                     	org	2097156
  3263   200004  FF                 	db	255
  3264                           
  3265                           ;Config register IDLOC5 @ 0x200005
  3266                           ;	unspecified, using default values
  3267   200005                     	org	2097157
  3268   200005  FF                 	db	255
  3269                           
  3270                           ;Config register IDLOC6 @ 0x200006
  3271                           ;	unspecified, using default values
  3272   200006                     	org	2097158
  3273   200006  FF                 	db	255
  3274                           
  3275                           ;Config register IDLOC7 @ 0x200007
  3276                           ;	unspecified, using default values
  3277   200007                     	org	2097159
  3278   200007  FF                 	db	255
  3279                           
  3280                           	psect	config
  3281                           
  3282                           ;Config register CONFIG1L @ 0x300000
  3283                           ;	unspecified, using default values
  3284                           ;	PLL Prescaler Selection bits
  3285                           ;	PLLDIV = 0x0, unprogrammed default
  3286                           ;	System Clock Postscaler Selection bits
  3287                           ;	CPUDIV = 0x0, unprogrammed default
  3288                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3289                           ;	USBDIV = 0x0, unprogrammed default
  3290   300000                     	org	3145728
  3291   300000  00                 	db	0
  3292                           
  3293                           ;Config register CONFIG1H @ 0x300001
  3294                           ;	Oscillator Selection bits
  3295                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  3296                           ;	Fail-Safe Clock Monitor Enable bit
  3297                           ;	FCMEN = 0x0, unprogrammed default
  3298                           ;	Internal/External Oscillator Switchover bit
  3299                           ;	IESO = 0x0, unprogrammed default
  3300   300001                     	org	3145729
  3301   300001  09                 	db	9
  3302                           
  3303                           ;Config register CONFIG2L @ 0x300002
  3304                           ;	unspecified, using default values
  3305                           ;	Power-up Timer Enable bit
  3306                           ;	PWRT = 0x1, unprogrammed default
  3307                           ;	Brown-out Reset Enable bits
  3308                           ;	BOR = 0x3, unprogrammed default
  3309                           ;	Brown-out Reset Voltage bits
  3310                           ;	BORV = 0x3, unprogrammed default
  3311                           ;	USB Voltage Regulator Enable bit
  3312                           ;	VREGEN = 0x0, unprogrammed default
  3313   300002                     	org	3145730
  3314   300002  1F                 	db	31
  3315                           
  3316                           ;Config register CONFIG2H @ 0x300003
  3317                           ;	Watchdog Timer Enable bit
  3318                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3319                           ;	Watchdog Timer Postscale Select bits
  3320                           ;	WDTPS = 0xF, unprogrammed default
  3321   300003                     	org	3145731
  3322   300003  1E                 	db	30
  3323                           
  3324                           ; Padding undefined space
  3325   300004                     	org	3145732
  3326   300004  FF                 	db	255
  3327                           
  3328                           ;Config register CONFIG3H @ 0x300005
  3329                           ;	CCP2 MUX bit
  3330                           ;	CCP2MX = 0x1, unprogrammed default
  3331                           ;	PORTB A/D Enable bit
  3332                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3333                           ;	Low-Power Timer 1 Oscillator Enable bit
  3334                           ;	LPT1OSC = 0x0, unprogrammed default
  3335                           ;	MCLR Pin Enable bit
  3336                           ;	MCLRE = 0x1, unprogrammed default
  3337   300005                     	org	3145733
  3338   300005  81                 	db	129
  3339                           
  3340                           ;Config register CONFIG4L @ 0x300006
  3341                           ;	unspecified, using default values
  3342                           ;	Stack Full/Underflow Reset Enable bit
  3343                           ;	STVREN = 0x1, unprogrammed default
  3344                           ;	Single-Supply ICSP Enable bit
  3345                           ;	LVP = 0x1, unprogrammed default
  3346                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3347                           ;	ICPRT = 0x0, unprogrammed default
  3348                           ;	Extended Instruction Set Enable bit
  3349                           ;	XINST = 0x0, unprogrammed default
  3350                           ;	Background Debugger Enable bit
  3351                           ;	DEBUG = 0x1, unprogrammed default
  3352   300006                     	org	3145734
  3353   300006  85                 	db	133
  3354                           
  3355                           ; Padding undefined space
  3356   300007                     	org	3145735
  3357   300007  FF                 	db	255
  3358                           
  3359                           ;Config register CONFIG5L @ 0x300008
  3360                           ;	unspecified, using default values
  3361                           ;	Code Protection bit
  3362                           ;	CP0 = 0x1, unprogrammed default
  3363                           ;	Code Protection bit
  3364                           ;	CP1 = 0x1, unprogrammed default
  3365                           ;	Code Protection bit
  3366                           ;	CP2 = 0x1, unprogrammed default
  3367                           ;	Code Protection bit
  3368                           ;	CP3 = 0x1, unprogrammed default
  3369   300008                     	org	3145736
  3370   300008  0F                 	db	15
  3371                           
  3372                           ;Config register CONFIG5H @ 0x300009
  3373                           ;	unspecified, using default values
  3374                           ;	Boot Block Code Protection bit
  3375                           ;	CPB = 0x1, unprogrammed default
  3376                           ;	Data EEPROM Code Protection bit
  3377                           ;	CPD = 0x1, unprogrammed default
  3378   300009                     	org	3145737
  3379   300009  C0                 	db	192
  3380                           
  3381                           ;Config register CONFIG6L @ 0x30000A
  3382                           ;	unspecified, using default values
  3383                           ;	Write Protection bit
  3384                           ;	WRT0 = 0x1, unprogrammed default
  3385                           ;	Write Protection bit
  3386                           ;	WRT1 = 0x1, unprogrammed default
  3387                           ;	Write Protection bit
  3388                           ;	WRT2 = 0x1, unprogrammed default
  3389                           ;	Write Protection bit
  3390                           ;	WRT3 = 0x1, unprogrammed default
  3391   30000A                     	org	3145738
  3392   30000A  0F                 	db	15
  3393                           
  3394                           ;Config register CONFIG6H @ 0x30000B
  3395                           ;	unspecified, using default values
  3396                           ;	Configuration Register Write Protection bit
  3397                           ;	WRTC = 0x1, unprogrammed default
  3398                           ;	Boot Block Write Protection bit
  3399                           ;	WRTB = 0x1, unprogrammed default
  3400                           ;	Data EEPROM Write Protection bit
  3401                           ;	WRTD = 0x1, unprogrammed default
  3402   30000B                     	org	3145739
  3403   30000B  E0                 	db	224
  3404                           
  3405                           ;Config register CONFIG7L @ 0x30000C
  3406                           ;	unspecified, using default values
  3407                           ;	Table Read Protection bit
  3408                           ;	EBTR0 = 0x1, unprogrammed default
  3409                           ;	Table Read Protection bit
  3410                           ;	EBTR1 = 0x1, unprogrammed default
  3411                           ;	Table Read Protection bit
  3412                           ;	EBTR2 = 0x1, unprogrammed default
  3413                           ;	Table Read Protection bit
  3414                           ;	EBTR3 = 0x1, unprogrammed default
  3415   30000C                     	org	3145740
  3416   30000C  0F                 	db	15
  3417                           
  3418                           ;Config register CONFIG7H @ 0x30000D
  3419                           ;	unspecified, using default values
  3420                           ;	Boot Block Table Read Protection bit
  3421                           ;	EBTRB = 0x1, unprogrammed default
  3422   30000D                     	org	3145741
  3423   30000D  40                 	db	64
  3424                           tosu	equ	0xFFF
  3425                           tosh	equ	0xFFE
  3426                           tosl	equ	0xFFD
  3427                           stkptr	equ	0xFFC
  3428                           pclatu	equ	0xFFB
  3429                           pclath	equ	0xFFA
  3430                           pcl	equ	0xFF9
  3431                           tblptru	equ	0xFF8
  3432                           tblptrh	equ	0xFF7
  3433                           tblptrl	equ	0xFF6
  3434                           tablat	equ	0xFF5
  3435                           prodh	equ	0xFF4
  3436                           prodl	equ	0xFF3
  3437                           indf0	equ	0xFEF
  3438                           postinc0	equ	0xFEE
  3439                           postdec0	equ	0xFED
  3440                           preinc0	equ	0xFEC
  3441                           plusw0	equ	0xFEB
  3442                           fsr0h	equ	0xFEA
  3443                           fsr0l	equ	0xFE9
  3444                           wreg	equ	0xFE8
  3445                           indf1	equ	0xFE7
  3446                           postinc1	equ	0xFE6
  3447                           postdec1	equ	0xFE5
  3448                           preinc1	equ	0xFE4
  3449                           plusw1	equ	0xFE3
  3450                           fsr1h	equ	0xFE2
  3451                           fsr1l	equ	0xFE1
  3452                           bsr	equ	0xFE0
  3453                           indf2	equ	0xFDF
  3454                           postinc2	equ	0xFDE
  3455                           postdec2	equ	0xFDD
  3456                           preinc2	equ	0xFDC
  3457                           plusw2	equ	0xFDB
  3458                           fsr2h	equ	0xFDA
  3459                           fsr2l	equ	0xFD9
  3460                           status	equ	0xFD8

Data Sizes:
    Strings     130
    Constant    16
    Data        1
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     16      29
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    Lcd_String@str	PTR const unsigned char  size(1) Largest target is 22
		 -> STR_1(CODE[15]), STR_10(CODE[11]), STR_11(CODE[15]), STR_12(CODE[22]), 
		 -> STR_2(CODE[15]), STR_3(CODE[13]), STR_4(CODE[15]), STR_5(CODE[17]), 
		 -> STR_6(CODE[12]), STR_7(CODE[17]), STR_8(CODE[12]), STR_9(CODE[10]), 


Critical Paths under _main in COMRAM

    _main->_lcd_animacion_bienvenida
    _main->_mostrar_conteo
    _mostrar_valor->_Lcd_Set_Cursor
    _mostrar_conteo->_color
    _unidad->___lwmod
    _color->___lwdiv
    _lcd_animacion_bienvenida->_Lcd_Set_Cursor
    _Lcd_String->_Lcd_Char
    _Lcd_Shift_Right->_Lcd_Cmd
    _Lcd_Shift_Left->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5945
                                             13 COMRAM     3     3      0
                           _Lcd_Char
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                         _Lcd_String
                         _Teclado4x4
                            ___lwdiv
                            ___lwmod
           _lcd_animacion_bienvenida
                     _mostrar_conteo
                      _mostrar_valor
                             _unidad
 ---------------------------------------------------------------------------------
 (1) _mostrar_valor                                        0     0      0     775
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                         _Lcd_String
 ---------------------------------------------------------------------------------
 (1) _mostrar_conteo                                       2     2      0    1949
                                             11 COMRAM     2     2      0
                           _Lcd_Char
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                         _Lcd_String
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                              _color
                             _unidad
 ---------------------------------------------------------------------------------
 (1) _unidad                                               3     1      2      24
                                              5 COMRAM     3     1      2
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _color                                                4     2      2      23
                                              7 COMRAM     4     2      2
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     167
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     172
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     302
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _lcd_animacion_bienvenida                             5     5      0    1331
                                              8 COMRAM     5     5      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                     _Lcd_Shift_Left
                    _Lcd_Shift_Right
                         _Lcd_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_String                                           1     0      1     177
                                              3 COMRAM     1     0      1
                           _Lcd_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Char                                             3     3      0     120
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Shift_Right                                      0     0      0     232
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Shift_Left                                       0     0      0     232
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1     366
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     232
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Teclado4x4                                           6     6      0     135
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     232
                                              3 COMRAM     1     1      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     232
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Char
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_String
     _Lcd_Char
   _Teclado4x4
   ___lwdiv
   ___lwmod
   _lcd_animacion_bienvenida
     _Lcd_Clear
     _Lcd_Set_Cursor
     _Lcd_Shift_Left
       _Lcd_Cmd
     _Lcd_Shift_Right
       _Lcd_Cmd
     _Lcd_String
   _mostrar_conteo
     _Lcd_Char
     _Lcd_Clear
     _Lcd_Set_Cursor
     _Lcd_String
     ___awdiv
     ___awmod
     ___lwdiv
     ___lwmod
     _color
       ___lwdiv (ARG)
     _unidad
       ___lwmod (ARG)
   _mostrar_valor
     _Lcd_Clear
     _Lcd_Set_Cursor
     _Lcd_String
   _unidad

 _ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0       0      0.0%
BITBIGSFRh         115      0       0      0.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     16      29     30.9%
BITBIGSFRll         33      0       0      0.0%
BITBIGSFRlh         10      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      29      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Jun 19 15:14:18 2025

                    ___awdiv@sign 0006                               l124 0948                               l184 1108  
                             l683 118C                               l693 11CE                               _GIE 7F97  
                             u200 0D1E                               u310 0D80                               u230 0D3A  
                             u215 0D20                               u305 0D6C                               u225 0D28  
                             u330 0D94                               u260 0D56                               u325 0D82  
                             u245 0D3C                               u350 0DAC                               u255 0D44  
                             u345 0D96                               u370 0DC8                               u290 0D6A  
                             u275 0D58                               _ISR 0008                               u365 0DAE  
                             u285 0D60                               u640 0F10                               u624 0ED2  
                             u625 0ECE                               u385 0DCA                               u634 0F02  
                             u635 0EFE                               u910 0DF0                               u670 0F60  
                             u654 0F24                               u655 0F20                               u940 0E0C  
                             u925 0DF2                               u935 0DFA                               u970 0E28  
                             u955 0E0E                               u965 0E16                               u985 0E2A  
                             u995 0E32                     Teclado4x4@col 0005                      ___awmod@sign 0006  
                             wreg 0FE8              mostrar_conteo@faltan 000C                   ??_mostrar_valor 0009  
                            ?_ISR 0001                              l1213 0EB2                              l1217 0EC2  
                            l1227 0EEE                              l1237 0F4C                              l1245 0F66  
                            l1515 1242                              l1603 106A                              l1525 1274  
                            l1519 1254                              l1631 10C0                              l1623 10A0  
                            l1615 1086                              l1551 10FC                              l1543 10E4  
                            l1625 10A8                              l1553 1102                              l1545 10EA  
                            l1723 0FC6                              l1571 1004                              l1635 10CA  
                            l1619 1092                              l1651 1162                              l1547 10F0  
                            l1709 0F96                              l1661 1182                              l1549 10F6  
                            l1557 110C                              l1583 102A                              l1639 10D8  
                            l1671 11AC                              l1751 0C8C                              l1903 0B12  
                            l1815 0904                              l1585 1032                              l1577 1014  
                            l1649 115A                              l1595 1052                              l1923 0B60  
                            l1835 094A                              l1677 11C4                              l1669 11A4  
                            l1941 0BCC                              l1845 0982                              l1599 105C  
                            l1935 0BBA                              l1951 0C02                              l1855 09C8  
                            l1863 0A10                              l1875 0A7C                              l1893 0AEC  
                            l1885 0AB8                              l1949 0BDE                              l1887 0ABE  
                            l1897 0AFA                              STR_1 0847                              STR_2 0838  
                            STR_3 0865                              STR_4 0856                              STR_5 0827  
                            STR_6 0872                              STR_7 0827                              STR_8 0872  
                            STR_9 0889                              u1000 0E3C                              u1020 0E52  
                            u1015 0E3E                              u1040 0E66                              u1210 10AC  
                            u1035 0E54                              u1060 0E7E                              u1300 0FBE  
                            u1310 0FF0                              u1150 1036                              u1055 0E68  
                            u1080 0E9A                              u1250 1166                              u1075 0E80  
                            u1500 0B2A                              u1420 09C0                              _LATB 0F8A  
                            u1095 0E9C                              _LATC 0F8B                              u1280 11B0  
                            u1360 0972                              _LATD 0F8C                              _LATE 0F8D  
                            u1370 0974                              u1380 097E                              u1607 0D70  
                            u1617 0DCE                              u1627 12D6                              u1547 08B2  
                            u1637 0EE0                              u1557 0ADE                              u1647 11E2  
                            u1567 0C08                              _IPEN 7E87                              u1657 120C  
                            u1577 0F86                              u1667 0E42                              u1587 0FA0  
                            u1677 0EA0                              u1597 0FD0                              _PEIE 7F96  
                            _RBPU 7F8F                              _TMR0 0FD6                              _main 0894  
                  Teclado4x4@fila 0003                              btemp 001E                              prodh 0FF4  
                            prodl 0FF3                              start 000E                   __end_of_Lcd_Cmd 0EAA  
                    ___param_bank 0000                  ??_mostrar_conteo 000C                             ??_ISR 0001  
                      _Lcd_String 1240                             ?_main 0001                   __end_of___awdiv 1074  
                           STR_10 087E                             STR_11 0847                             STR_12 0811  
                 __end_of___awmod 10E2                             _T0CON 0FD5                   ___awdiv@divisor 0003  
                           _LATD0 7C60                             _LATC2 7C5A                             _LATD1 7C61  
                           _LATD2 7C62                             _LATD3 7C63                             _LATD4 7C64  
                           _LATD5 7C65                             _LATD6 7C66                   __end_of___lwdiv 1196  
                 __end_of___lwmod 11D8                             i2l191 12B6                   ___awdiv@counter 0005  
                           _PORTB 0F81                             _TRISB 0F93                             _TRISC 0F94  
                           _TRISD 0F95                             _TRISE 0F96                             _color 10E2  
                           _input 0015  __end_of_lcd_animacion_bienvenida 0FF2                             tablat 0FF5  
                           ttemp5 001F                             ttemp6 0022                             ttemp7 0026  
                           status 0FD8                             wtemp8 001F                  __end_of_Lcd_Char 0DD8  
                __end_of_Lcd_Init 1214                   __initialization 1214                      __end_of_main 0C14  
                          ??_main 000E                     __activetblptr 0002                            ?_color 0008  
                      _Teclado4x4 0EAA                  ___awdiv@dividend 0001                         ??_Lcd_Cmd 0001  
                          _TMR0IE 7F95                            _TMR0IF 7F92                            _TMR0ON 7EAF  
                          _TRISC2 7CA2                            _TRISD6 7CAE                         ??___awdiv 0005  
                       ??___awmod 0005                         ??___lwdiv 0005                         ??___lwmod 0005  
                          _estado 001B                            clear_0 122C                  ___awdiv@quotient 0007  
                          _teclas 0801                   ___awmod@divisor 0003                            isa$std 0001  
                 ___awmod@counter 0005                            _unidad 12BA                       ?_Lcd_String 0004  
                          color@i 0008                      __pdataCOMRAM 001D                      __mediumconst 0000  
                          tblptrh 0FF7                            tblptrl 0FF6                            tblptru 0FF8  
                      __accesstop 0060           __end_of__initialization 1232                 __end_of_Lcd_Clear 12DE  
                   ___rparam_used 0001                    __pcstackCOMRAM 0001                     __end_of_color 1144  
       ?_lcd_animacion_bienvenida 0001                    _Lcd_Set_Cursor 1268                         ?_Lcd_Char 0001  
                  _Lcd_Shift_Left 12E6                         ?_Lcd_Init 0001                           ??_color 000A  
                     ?_Teclado4x4 0001            __end_of_Lcd_Set_Cursor 128C                           ?_unidad 0006  
          __end_of_Lcd_Shift_Left 12EE                 ??_Lcd_Shift_Right 0004                        ??_Lcd_Char 0001  
                      ??_Lcd_Init 0004             __end_of_mostrar_valor 12A4                           _Lcd_Cmd 0DD8  
                         __Hparam 0000                           __Lparam 0000                           ___awdiv 0FF2  
                         ___awmod 1074                           ___lwdiv 1144                           ___lwmod 1196  
                    __psmallconst 0800                           __pcinit 1214                           __ramtop 0800  
                 ?_Lcd_Set_Cursor 0004                           __ptext0 0894                           __ptext1 128C  
                         __ptext2 0C14                           __ptext3 12BA                           __ptext4 10E2  
                         __ptext5 1196                           __ptext6 1144                           __ptext7 1074  
                         __ptext8 0FF2                           __ptext9 0F6A                   ?_Lcd_Shift_Left 0001  
                ___awmod@dividend 0001                    __pintcode_body 12A4              end_of_initialization 1232  
                   __Lmediumconst 0000                           int_func 12A4                           unidad@i 0006  
                         postinc0 0FEE                      ??_Lcd_String 0005         lcd_animacion_bienvenida@i 000A  
              __end_of_Lcd_String 1268                         _Lcd_Clear 12CE                     __pidataCOMRAM 12EE  
                  __end_of_teclas 0811                    __end_of_unidad 12CE     lcd_animacion_bienvenida@i_154 000C  
             start_initialization 1214                       __end_of_ISR 12BA                      ??_Teclado4x4 0001  
                      ?_Lcd_Clear 0001                   _Lcd_Shift_Right 12DE                __end_of_Teclado4x4 0F6A  
                        ??_unidad 0008                       __pbssCOMRAM 0011                _Lcd_Set_Cursor$101 0006  
                   Lcd_String@str 0004                          ?_Lcd_Cmd 0001                  ___lwdiv@dividend 0001  
        _lcd_animacion_bienvenida 0F6A                  ??_Lcd_Set_Cursor 0005                         __pintcode 0008  
                        ?___awdiv 0001                          ?___awmod 0001                          ?___lwdiv 0001  
                        ?___lwmod 0001                  ??_Lcd_Shift_Left 0004                       __smallconst 0800  
                  _mostrar_conteo 0C14                      Lcd_Char@data 0003                  ___lwdiv@quotient 0005  
         __end_of_Lcd_Shift_Right 12E6                       ??_Lcd_Clear 0004            __end_of_mostrar_conteo 0D06  
                       main@tecla 0010                          _Lcd_Char 0D06                          _Lcd_Init 11D8  
                     _inactividad 0011              Lcd_Set_Cursor@column 0004                          __Hrparam 0000  
                        __Lrparam 0000                   ?_mostrar_conteo 0001                   ___lwdiv@divisor 0003  
                 ___lwdiv@counter 0007                          __ptext10 1240                          __ptext11 0D06  
                        __ptext12 12DE                          __ptext13 12E6                          __ptext14 1268  
                        __ptext15 12CE                          __ptext16 0EAA                          __ptext17 11D8  
                        __ptext18 0DD8                          _contador 0017                     _mostrar_valor 128C  
                        _objetivo 0019                  ?_Lcd_Shift_Right 0001                     _lcd_backlight 001D  
                        isa$xinst 0000                          int$flags 001E                    ?_mostrar_valor 0001  
                        intlevel2 0000        ??_lcd_animacion_bienvenida 0009                  ___lwmod@dividend 0001  
                      Lcd_Cmd@cmd 0003                   ___lwmod@divisor 0003                   ___lwmod@counter 0005  
               Lcd_Set_Cursor@pos 0008                 Lcd_Set_Cursor@row 0005  
