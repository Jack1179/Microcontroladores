

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Jun 19 02:48:26 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    37   000000                     
    38                           ; Generated 25/07/2024 GMT
    39                           ; 
    40                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4550 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72   000FE0                     bsr             equ	4064
    73   000FE9                     fsr0            equ	4073
    74   000FEA                     fsr0h           equ	4074
    75   000FE9                     fsr0l           equ	4073
    76   000FE1                     fsr1            equ	4065
    77   000FE2                     fsr1h           equ	4066
    78   000FE1                     fsr1l           equ	4065
    79   000FD9                     fsr2            equ	4057
    80   000FDA                     fsr2h           equ	4058
    81   000FD9                     fsr2l           equ	4057
    82   000FEF                     indf0           equ	4079
    83   000FE7                     indf1           equ	4071
    84   000FDF                     indf2           equ	4063
    85   000FF2                     intcon          equ	4082
    86   000000                     nvmcon          equ	0
    87   000FF9                     pcl             equ	4089
    88   000FFA                     pclath          equ	4090
    89   000FFB                     pclatu          equ	4091
    90   000FEB                     plusw0          equ	4075
    91   000FE3                     plusw1          equ	4067
    92   000FDB                     plusw2          equ	4059
    93   000FED                     postdec0        equ	4077
    94   000FE5                     postdec1        equ	4069
    95   000FDD                     postdec2        equ	4061
    96   000FEE                     postinc0        equ	4078
    97   000FE6                     postinc1        equ	4070
    98   000FDE                     postinc2        equ	4062
    99   000FEC                     preinc0         equ	4076
   100   000FE4                     preinc1         equ	4068
   101   000FDC                     preinc2         equ	4060
   102   000FF3                     prod            equ	4083
   103   000FF4                     prodh           equ	4084
   104   000FF3                     prodl           equ	4083
   105   000FD8                     status          equ	4056
   106   000FF5                     tablat          equ	4085
   107   000FF6                     tblptr          equ	4086
   108   000FF7                     tblptrh         equ	4087
   109   000FF6                     tblptrl         equ	4086
   110   000FF8                     tblptru         equ	4088
   111   000FFD                     tosl            equ	4093
   112   000FE8                     wreg            equ	4072
   113   000F62                     SPPDATA         equ	3938	;# 
   114   000F63                     SPPCFG          equ	3939	;# 
   115   000F64                     SPPEPS          equ	3940	;# 
   116   000F65                     SPPCON          equ	3941	;# 
   117   000F66                     UFRM            equ	3942	;# 
   118   000F66                     UFRML           equ	3942	;# 
   119   000F67                     UFRMH           equ	3943	;# 
   120   000F68                     UIR             equ	3944	;# 
   121   000F69                     UIE             equ	3945	;# 
   122   000F6A                     UEIR            equ	3946	;# 
   123   000F6B                     UEIE            equ	3947	;# 
   124   000F6C                     USTAT           equ	3948	;# 
   125   000F6D                     UCON            equ	3949	;# 
   126   000F6E                     UADDR           equ	3950	;# 
   127   000F6F                     UCFG            equ	3951	;# 
   128   000F70                     UEP0            equ	3952	;# 
   129   000F71                     UEP1            equ	3953	;# 
   130   000F72                     UEP2            equ	3954	;# 
   131   000F73                     UEP3            equ	3955	;# 
   132   000F74                     UEP4            equ	3956	;# 
   133   000F75                     UEP5            equ	3957	;# 
   134   000F76                     UEP6            equ	3958	;# 
   135   000F77                     UEP7            equ	3959	;# 
   136   000F78                     UEP8            equ	3960	;# 
   137   000F79                     UEP9            equ	3961	;# 
   138   000F7A                     UEP10           equ	3962	;# 
   139   000F7B                     UEP11           equ	3963	;# 
   140   000F7C                     UEP12           equ	3964	;# 
   141   000F7D                     UEP13           equ	3965	;# 
   142   000F7E                     UEP14           equ	3966	;# 
   143   000F7F                     UEP15           equ	3967	;# 
   144   000F80                     PORTA           equ	3968	;# 
   145   000F81                     PORTB           equ	3969	;# 
   146   000F82                     PORTC           equ	3970	;# 
   147   000F83                     PORTD           equ	3971	;# 
   148   000F84                     PORTE           equ	3972	;# 
   149   000F89                     LATA            equ	3977	;# 
   150   000F8A                     LATB            equ	3978	;# 
   151   000F8B                     LATC            equ	3979	;# 
   152   000F8C                     LATD            equ	3980	;# 
   153   000F8D                     LATE            equ	3981	;# 
   154   000F92                     TRISA           equ	3986	;# 
   155   000F92                     DDRA            equ	3986	;# 
   156   000F93                     TRISB           equ	3987	;# 
   157   000F93                     DDRB            equ	3987	;# 
   158   000F94                     TRISC           equ	3988	;# 
   159   000F94                     DDRC            equ	3988	;# 
   160   000F95                     TRISD           equ	3989	;# 
   161   000F95                     DDRD            equ	3989	;# 
   162   000F96                     TRISE           equ	3990	;# 
   163   000F96                     DDRE            equ	3990	;# 
   164   000F9B                     OSCTUNE         equ	3995	;# 
   165   000F9D                     PIE1            equ	3997	;# 
   166   000F9E                     PIR1            equ	3998	;# 
   167   000F9F                     IPR1            equ	3999	;# 
   168   000FA0                     PIE2            equ	4000	;# 
   169   000FA1                     PIR2            equ	4001	;# 
   170   000FA2                     IPR2            equ	4002	;# 
   171   000FA6                     EECON1          equ	4006	;# 
   172   000FA7                     EECON2          equ	4007	;# 
   173   000FA8                     EEDATA          equ	4008	;# 
   174   000FA9                     EEADR           equ	4009	;# 
   175   000FAB                     RCSTA           equ	4011	;# 
   176   000FAB                     RCSTA1          equ	4011	;# 
   177   000FAC                     TXSTA           equ	4012	;# 
   178   000FAC                     TXSTA1          equ	4012	;# 
   179   000FAD                     TXREG           equ	4013	;# 
   180   000FAD                     TXREG1          equ	4013	;# 
   181   000FAE                     RCREG           equ	4014	;# 
   182   000FAE                     RCREG1          equ	4014	;# 
   183   000FAF                     SPBRG           equ	4015	;# 
   184   000FAF                     SPBRG1          equ	4015	;# 
   185   000FB0                     SPBRGH          equ	4016	;# 
   186   000FB1                     T3CON           equ	4017	;# 
   187   000FB2                     TMR3            equ	4018	;# 
   188   000FB2                     TMR3L           equ	4018	;# 
   189   000FB3                     TMR3H           equ	4019	;# 
   190   000FB4                     CMCON           equ	4020	;# 
   191   000FB5                     CVRCON          equ	4021	;# 
   192   000FB6                     ECCP1AS         equ	4022	;# 
   193   000FB6                     CCP1AS          equ	4022	;# 
   194   000FB7                     ECCP1DEL        equ	4023	;# 
   195   000FB7                     CCP1DEL         equ	4023	;# 
   196   000FB8                     BAUDCON         equ	4024	;# 
   197   000FB8                     BAUDCTL         equ	4024	;# 
   198   000FBA                     CCP2CON         equ	4026	;# 
   199   000FBB                     CCPR2           equ	4027	;# 
   200   000FBB                     CCPR2L          equ	4027	;# 
   201   000FBC                     CCPR2H          equ	4028	;# 
   202   000FBD                     CCP1CON         equ	4029	;# 
   203   000FBD                     ECCP1CON        equ	4029	;# 
   204   000FBE                     CCPR1           equ	4030	;# 
   205   000FBE                     CCPR1L          equ	4030	;# 
   206   000FBF                     CCPR1H          equ	4031	;# 
   207   000FC0                     ADCON2          equ	4032	;# 
   208   000FC1                     ADCON1          equ	4033	;# 
   209   000FC2                     ADCON0          equ	4034	;# 
   210   000FC3                     ADRES           equ	4035	;# 
   211   000FC3                     ADRESL          equ	4035	;# 
   212   000FC4                     ADRESH          equ	4036	;# 
   213   000FC5                     SSPCON2         equ	4037	;# 
   214   000FC6                     SSPCON1         equ	4038	;# 
   215   000FC7                     SSPSTAT         equ	4039	;# 
   216   000FC8                     SSPADD          equ	4040	;# 
   217   000FC9                     SSPBUF          equ	4041	;# 
   218   000FCA                     T2CON           equ	4042	;# 
   219   000FCB                     PR2             equ	4043	;# 
   220   000FCB                     MEMCON          equ	4043	;# 
   221   000FCC                     TMR2            equ	4044	;# 
   222   000FCD                     T1CON           equ	4045	;# 
   223   000FCE                     TMR1            equ	4046	;# 
   224   000FCE                     TMR1L           equ	4046	;# 
   225   000FCF                     TMR1H           equ	4047	;# 
   226   000FD0                     RCON            equ	4048	;# 
   227   000FD1                     WDTCON          equ	4049	;# 
   228   000FD2                     HLVDCON         equ	4050	;# 
   229   000FD2                     LVDCON          equ	4050	;# 
   230   000FD3                     OSCCON          equ	4051	;# 
   231   000FD5                     T0CON           equ	4053	;# 
   232   000FD6                     TMR0            equ	4054	;# 
   233   000FD6                     TMR0L           equ	4054	;# 
   234   000FD7                     TMR0H           equ	4055	;# 
   235   000FD8                     STATUS          equ	4056	;# 
   236   000FD9                     FSR2            equ	4057	;# 
   237   000FD9                     FSR2L           equ	4057	;# 
   238   000FDA                     FSR2H           equ	4058	;# 
   239   000FDB                     PLUSW2          equ	4059	;# 
   240   000FDC                     PREINC2         equ	4060	;# 
   241   000FDD                     POSTDEC2        equ	4061	;# 
   242   000FDE                     POSTINC2        equ	4062	;# 
   243   000FDF                     INDF2           equ	4063	;# 
   244   000FE0                     BSR             equ	4064	;# 
   245   000FE1                     FSR1            equ	4065	;# 
   246   000FE1                     FSR1L           equ	4065	;# 
   247   000FE2                     FSR1H           equ	4066	;# 
   248   000FE3                     PLUSW1          equ	4067	;# 
   249   000FE4                     PREINC1         equ	4068	;# 
   250   000FE5                     POSTDEC1        equ	4069	;# 
   251   000FE6                     POSTINC1        equ	4070	;# 
   252   000FE7                     INDF1           equ	4071	;# 
   253   000FE8                     WREG            equ	4072	;# 
   254   000FE9                     FSR0            equ	4073	;# 
   255   000FE9                     FSR0L           equ	4073	;# 
   256   000FEA                     FSR0H           equ	4074	;# 
   257   000FEB                     PLUSW0          equ	4075	;# 
   258   000FEC                     PREINC0         equ	4076	;# 
   259   000FED                     POSTDEC0        equ	4077	;# 
   260   000FEE                     POSTINC0        equ	4078	;# 
   261   000FEF                     INDF0           equ	4079	;# 
   262   000FF0                     INTCON3         equ	4080	;# 
   263   000FF1                     INTCON2         equ	4081	;# 
   264   000FF2                     INTCON          equ	4082	;# 
   265   000FF3                     PROD            equ	4083	;# 
   266   000FF3                     PRODL           equ	4083	;# 
   267   000FF4                     PRODH           equ	4084	;# 
   268   000FF5                     TABLAT          equ	4085	;# 
   269   000FF6                     TBLPTR          equ	4086	;# 
   270   000FF6                     TBLPTRL         equ	4086	;# 
   271   000FF7                     TBLPTRH         equ	4087	;# 
   272   000FF8                     TBLPTRU         equ	4088	;# 
   273   000FF9                     PCLAT           equ	4089	;# 
   274   000FF9                     PC              equ	4089	;# 
   275   000FF9                     PCL             equ	4089	;# 
   276   000FFA                     PCLATH          equ	4090	;# 
   277   000FFB                     PCLATU          equ	4091	;# 
   278   000FFC                     STKPTR          equ	4092	;# 
   279   000FFD                     TOS             equ	4093	;# 
   280   000FFD                     TOSL            equ	4093	;# 
   281   000FFE                     TOSH            equ	4094	;# 
   282   000FFF                     TOSU            equ	4095	;# 
   283                           
   284                           	psect	idataCOMRAM
   285   00129E                     __pidataCOMRAM:
   286                           	callstack 0
   287                           
   288                           ;initializer for _lcd_backlight
   289   00129E  01                 	db	1
   290                           
   291                           	psect	smallconst
   292   000800                     __psmallconst:
   293                           	callstack 0
   294   000800  00                 	db	0
   295   000801                     _teclas:
   296                           	callstack 0
   297   000801  31                 	db	49
   298   000802  32                 	db	50
   299   000803  33                 	db	51
   300   000804  41                 	db	65
   301   000805  34                 	db	52
   302   000806  35                 	db	53
   303   000807  36                 	db	54
   304   000808  42                 	db	66
   305   000809  37                 	db	55
   306   00080A  38                 	db	56
   307   00080B  39                 	db	57
   308   00080C  43                 	db	67
   309   00080D  2A                 	db	42
   310   00080E  30                 	db	48
   311   00080F  23                 	db	35
   312   000810  44                 	db	68
   313   000811                     __end_of_teclas:
   314                           	callstack 0
   315   007F96                     _PEIE           set	32662
   316   007F97                     _GIE            set	32663
   317   007E87                     _IPEN           set	32391
   318   007EAF                     _TMR0ON         set	32431
   319   007F95                     _TMR0IE         set	32661
   320   007F92                     _TMR0IF         set	32658
   321   007C5A                     _LATC2          set	31834
   322   007CA2                     _TRISC2         set	31906
   323   007F8F                     _RBPU           set	32655
   324   007C66                     _LATD6          set	31846
   325   007CAE                     _TRISD6         set	31918
   326   007C61                     _LATD1          set	31841
   327   007C65                     _LATD5          set	31845
   328   007C64                     _LATD4          set	31844
   329   007C63                     _LATD3          set	31843
   330   007C62                     _LATD2          set	31842
   331   007C60                     _LATD0          set	31840
   332   000FD6                     _TMR0           set	4054
   333   000F81                     _PORTB          set	3969
   334   000FD5                     _T0CON          set	4053
   335   000F8D                     _LATE           set	3981
   336   000F96                     _TRISE          set	3990
   337   000F8B                     _LATC           set	3979
   338   000F94                     _TRISC          set	3988
   339   000F8A                     _LATB           set	3978
   340   000F93                     _TRISB          set	3987
   341   000F8C                     _LATD           set	3980
   342   000F95                     _TRISD          set	3989
   343   000811                     STR_10:
   344   000811  20                 	db	32
   345   000812  43                 	db	67	;'C'
   346   000813  6F                 	db	111	;'o'
   347   000814  6E                 	db	110	;'n'
   348   000815  74                 	db	116	;'t'
   349   000816  61                 	db	97	;'a'
   350   000817  64                 	db	100	;'d'
   351   000818  6F                 	db	111	;'o'
   352   000819  72                 	db	114	;'r'
   353   00081A  20                 	db	32
   354   00081B  44                 	db	68	;'D'
   355   00081C  65                 	db	101	;'e'
   356   00081D  20                 	db	32
   357   00081E  4F                 	db	79	;'O'
   358   00081F  62                 	db	98	;'b'
   359   000820  6A                 	db	106	;'j'
   360   000821  65                 	db	101	;'e'
   361   000822  74                 	db	116	;'t'
   362   000823  6F                 	db	111	;'o'
   363   000824  73                 	db	115	;'s'
   364   000825  20                 	db	32
   365   000826  00                 	db	0
   366   000827                     STR_5:
   367   000827  43                 	db	67	;'C'
   368   000828  6F                 	db	111	;'o'
   369   000829  6E                 	db	110	;'n'
   370   00082A  74                 	db	116	;'t'
   371   00082B  65                 	db	101	;'e'
   372   00082C  6F                 	db	111	;'o'
   373   00082D  20                 	db	32
   374   00082E  43                 	db	67	;'C'
   375   00082F  6F                 	db	111	;'o'
   376   000830  6D                 	db	109	;'m'
   377   000831  70                 	db	112	;'p'
   378   000832  6C                 	db	108	;'l'
   379   000833  65                 	db	101	;'e'
   380   000834  74                 	db	116	;'t'
   381   000835  6F                 	db	111	;'o'
   382   000836  21                 	db	33
   383   000837  00                 	db	0
   384   000838                     STR_2:
   385   000838  21                 	db	33
   386   000839  20                 	db	32
   387   00083A  45                 	db	69	;'E'
   388   00083B  4D                 	db	77	;'M'
   389   00083C  45                 	db	69	;'E'
   390   00083D  52                 	db	82	;'R'
   391   00083E  47                 	db	71	;'G'
   392   00083F  45                 	db	69	;'E'
   393   000840  4E                 	db	78	;'N'
   394   000841  43                 	db	67	;'C'
   395   000842  49                 	db	73	;'I'
   396   000843  41                 	db	65	;'A'
   397   000844  20                 	db	32
   398   000845  21                 	db	33
   399   000846  00                 	db	0
   400   000847                     STR_1:
   401   000847  49                 	db	73	;'I'
   402   000848  6E                 	db	110	;'n'
   403   000849  67                 	db	103	;'g'
   404   00084A  72                 	db	114	;'r'
   405   00084B  65                 	db	101	;'e'
   406   00084C  73                 	db	115	;'s'
   407   00084D  65                 	db	101	;'e'
   408   00084E  20                 	db	32
   409   00084F  76                 	db	118	;'v'
   410   000850  61                 	db	97	;'a'
   411   000851  6C                 	db	108	;'l'
   412   000852  6F                 	db	111	;'o'
   413   000853  72                 	db	114	;'r'
   414   000854  3A                 	db	58	;':'
   415   000855  00                 	db	0
   416   000856                     STR_4:
   417   000856  52                 	db	82	;'R'
   418   000857  61                 	db	97	;'a'
   419   000858  6E                 	db	110	;'n'
   420   000859  67                 	db	103	;'g'
   421   00085A  6F                 	db	111	;'o'
   422   00085B  20                 	db	32
   423   00085C  69                 	db	105	;'i'
   424   00085D  6E                 	db	110	;'n'
   425   00085E  76                 	db	118	;'v'
   426   00085F  61                 	db	97	;'a'
   427   000860  6C                 	db	108	;'l'
   428   000861  69                 	db	105	;'i'
   429   000862  64                 	db	100	;'d'
   430   000863  6F                 	db	111	;'o'
   431   000864  00                 	db	0
   432   000865                     STR_3:
   433   000865  52                 	db	82	;'R'
   434   000866  65                 	db	101	;'e'
   435   000867  73                 	db	115	;'s'
   436   000868  65                 	db	101	;'e'
   437   000869  74                 	db	116	;'t'
   438   00086A  20                 	db	32
   439   00086B  6D                 	db	109	;'m'
   440   00086C  61                 	db	97	;'a'
   441   00086D  6E                 	db	110	;'n'
   442   00086E  75                 	db	117	;'u'
   443   00086F  61                 	db	97	;'a'
   444   000870  6C                 	db	108	;'l'
   445   000871  00                 	db	0
   446   000872                     STR_6:
   447   000872  50                 	db	80	;'P'
   448   000873  72                 	db	114	;'r'
   449   000874  65                 	db	101	;'e'
   450   000875  73                 	db	115	;'s'
   451   000876  69                 	db	105	;'i'
   452   000877  6F                 	db	111	;'o'
   453   000878  6E                 	db	110	;'n'
   454   000879  65                 	db	101	;'e'
   455   00087A  20                 	db	32
   456   00087B  4F                 	db	79	;'O'
   457   00087C  4B                 	db	75	;'K'
   458   00087D  00                 	db	0
   459   00087E                     STR_8:
   460   00087E  46                 	db	70	;'F'
   461   00087F  61                 	db	97	;'a'
   462   000880  6C                 	db	108	;'l'
   463   000881  74                 	db	116	;'t'
   464   000882  61                 	db	97	;'a'
   465   000883  6E                 	db	110	;'n'
   466   000884  74                 	db	116	;'t'
   467   000885  65                 	db	101	;'e'
   468   000886  73                 	db	115	;'s'
   469   000887  3A                 	db	58	;':'
   470   000888  00                 	db	0
   471   000889                     STR_7:
   472   000889  4F                 	db	79	;'O'
   473   00088A  62                 	db	98	;'b'
   474   00088B  6A                 	db	106	;'j'
   475   00088C  65                 	db	101	;'e'
   476   00088D  74                 	db	116	;'t'
   477   00088E  69                 	db	105	;'i'
   478   00088F  76                 	db	118	;'v'
   479   000890  6F                 	db	111	;'o'
   480   000891  3A                 	db	58	;':'
   481   000892  00                 	db	0
   482   000847                     STR_9           equ	STR_1
   483   000893  00                 	db	0	; dummy byte at the end
   484   000002                     __activetblptr  equ	2
   485                           
   486                           ; #config settings
   487                           
   488                           	psect	cinit
   489   0011C4                     __pcinit:
   490                           	callstack 0
   491   0011C4                     start_initialization:
   492                           	callstack 0
   493   0011C4                     __initialization:
   494                           	callstack 0
   495                           
   496                           ; Initialize objects allocated to COMRAM (1 bytes)
   497                           ; load TBLPTR registers with __pidataCOMRAM
   498   0011C4  0E9E               	movlw	low __pidataCOMRAM
   499   0011C6  6EF6               	movwf	tblptrl,c
   500   0011C8  0E12               	movlw	high __pidataCOMRAM
   501   0011CA  6EF7               	movwf	tblptrh,c
   502   0011CC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   503   0011CE  6EF8               	movwf	tblptru,c
   504   0011D0  0009               	tblrd		*+	;fetch initializer
   505   0011D2  CFF5 F01D          	movff	tablat,__pdataCOMRAM
   506                           
   507                           ; Clear objects allocated to COMRAM (12 bytes)
   508   0011D6  EE00  F011         	lfsr	0,__pbssCOMRAM
   509   0011DA  0E0C               	movlw	12
   510   0011DC                     clear_0:
   511   0011DC  6AEE               	clrf	postinc0,c
   512   0011DE  06E8               	decf	wreg,f,c
   513   0011E0  E1FD               	bnz	clear_0
   514   0011E2                     end_of_initialization:
   515                           	callstack 0
   516   0011E2                     __end_of__initialization:
   517                           	callstack 0
   518   0011E2  901E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   519   0011E4  921E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   520   0011E6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   521   0011E8  6EF8               	movwf	tblptru,c
   522   0011EA  0100               	movlb	0
   523   0011EC  EF4A  F004         	goto	_main	;jump to C main() function
   524                           
   525                           	psect	bssCOMRAM
   526   000011                     __pbssCOMRAM:
   527                           	callstack 0
   528   000011                     _inactividad:
   529                           	callstack 0
   530   000011                     	ds	4
   531   000015                     _input:
   532                           	callstack 0
   533   000015                     	ds	2
   534   000017                     _contador:
   535                           	callstack 0
   536   000017                     	ds	2
   537   000019                     _objetivo:
   538                           	callstack 0
   539   000019                     	ds	2
   540   00001B                     _estado:
   541                           	callstack 0
   542   00001B                     	ds	2
   543                           
   544                           	psect	dataCOMRAM
   545   00001D                     __pdataCOMRAM:
   546                           	callstack 0
   547   00001D                     _lcd_backlight:
   548                           	callstack 0
   549   00001D                     	ds	1
   550                           
   551                           	psect	cstackCOMRAM
   552   000001                     __pcstackCOMRAM:
   553                           	callstack 0
   554   000001                     ?___awdiv:
   555                           	callstack 0
   556   000001                     ?___awmod:
   557                           	callstack 0
   558   000001                     ?___lwdiv:
   559                           	callstack 0
   560   000001                     ?___lwmod:
   561                           	callstack 0
   562   000001                     ___awdiv@dividend:
   563                           	callstack 0
   564   000001                     ___awmod@dividend:
   565                           	callstack 0
   566   000001                     ___lwdiv@dividend:
   567                           	callstack 0
   568   000001                     ___lwmod@dividend:
   569                           	callstack 0
   570   000001                     ??_Lcd_Cmd:
   571   000001                     ??_Teclado4x4:
   572   000001                     ??_Lcd_Char:
   573   000001                     
   574                           ; 1 bytes @ 0x0
   575   000001                     	ds	2
   576   000003                     Lcd_Cmd@cmd:
   577                           	callstack 0
   578   000003                     Lcd_Char@data:
   579                           	callstack 0
   580   000003                     Teclado4x4@fila:
   581                           	callstack 0
   582   000003                     ___awdiv@divisor:
   583                           	callstack 0
   584   000003                     ___awmod@divisor:
   585                           	callstack 0
   586   000003                     ___lwdiv@divisor:
   587                           	callstack 0
   588   000003                     ___lwmod@divisor:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x2
   592   000003                     	ds	1
   593   000004                     Lcd_String@str:
   594                           	callstack 0
   595   000004                     Lcd_Set_Cursor@column:
   596                           	callstack 0
   597   000004                     ??_Lcd_Init:
   598   000004                     
   599                           ; 1 bytes @ 0x3
   600   000004                     	ds	1
   601   000005                     Lcd_Set_Cursor@row:
   602                           	callstack 0
   603   000005                     ___awdiv@counter:
   604                           	callstack 0
   605   000005                     ___awmod@counter:
   606                           	callstack 0
   607   000005                     ___lwmod@counter:
   608                           	callstack 0
   609   000005                     Teclado4x4@col:
   610                           	callstack 0
   611   000005                     ___lwdiv@quotient:
   612                           	callstack 0
   613   000005                     
   614                           ; 1 bytes @ 0x4
   615   000005                     	ds	1
   616   000006                     ___awdiv@sign:
   617                           	callstack 0
   618   000006                     ___awmod@sign:
   619                           	callstack 0
   620   000006                     _Lcd_Set_Cursor$101:
   621                           	callstack 0
   622   000006                     unidad@i:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x5
   626   000006                     	ds	1
   627   000007                     ___lwdiv@counter:
   628                           	callstack 0
   629   000007                     ___awdiv@quotient:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x6
   633   000007                     	ds	1
   634   000008                     Lcd_Set_Cursor@pos:
   635                           	callstack 0
   636   000008                     color@i:
   637                           	callstack 0
   638   000008                     ??_unidad:
   639                           
   640                           ; 1 bytes @ 0x7
   641   000008                     	ds	1
   642   000009                     ??_lcd_animacion_bienvenida:
   643   000009                     
   644                           ; 1 bytes @ 0x8
   645   000009                     	ds	1
   646   00000A                     lcd_animacion_bienvenida@i:
   647                           	callstack 0
   648   00000A                     ??_color:
   649                           
   650                           ; 1 bytes @ 0x9
   651   00000A                     	ds	2
   652   00000C                     mostrar_conteo@faltan:
   653                           	callstack 0
   654   00000C                     lcd_animacion_bienvenida@i_152:
   655                           	callstack 0
   656   00000C                     
   657                           ; 1 bytes @ 0xB
   658   00000C                     	ds	2
   659   00000E                     ??_main:
   660                           
   661                           ; 1 bytes @ 0xD
   662   00000E                     	ds	2
   663   000010                     main@tecla:
   664                           	callstack 0
   665                           
   666                           ; 1 bytes @ 0xF
   667   000010                     	ds	1
   668                           
   669 ;;
   670 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   671 ;;
   672 ;; *************** function _main *****************
   673 ;; Defined at:
   674 ;;		line 43 in file "laboratorio_4.c"
   675 ;; Parameters:    Size  Location     Type
   676 ;;		None
   677 ;; Auto vars:     Size  Location     Type
   678 ;;  tecla           1   15[COMRAM] unsigned char 
   679 ;; Return value:  Size  Location     Type
   680 ;;                  1    wreg      void 
   681 ;; Registers used:
   682 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   683 ;; Tracked objects:
   684 ;;		On entry : 0/0
   685 ;;		On exit  : 0/0
   686 ;;		Unchanged: 0/0
   687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   688 ;;      Params:         0       0       0       0       0       0       0       0       0
   689 ;;      Locals:         1       0       0       0       0       0       0       0       0
   690 ;;      Temps:          2       0       0       0       0       0       0       0       0
   691 ;;      Totals:         3       0       0       0       0       0       0       0       0
   692 ;;Total ram usage:        3 bytes
   693 ;; Hardware stack levels required when called: 4
   694 ;; This function calls:
   695 ;;		_Lcd_Char
   696 ;;		_Lcd_Clear
   697 ;;		_Lcd_Init
   698 ;;		_Lcd_Set_Cursor
   699 ;;		_Lcd_String
   700 ;;		_Teclado4x4
   701 ;;		___lwdiv
   702 ;;		___lwmod
   703 ;;		_lcd_animacion_bienvenida
   704 ;;		_mostrar_conteo
   705 ;;		_mostrar_valor
   706 ;;		_unidad
   707 ;; This function is called by:
   708 ;;		Startup code after reset
   709 ;; This function uses a non-reentrant model
   710 ;;
   711                           
   712                           	psect	text0
   713   000894                     __ptext0:
   714                           	callstack 0
   715   000894                     _main:
   716                           	callstack 27
   717                           
   718                           ;laboratorio_4.c: 45: Lcd_Init();
   719                           
   720                           ;incstack = 0
   721   000894  ECC4  F008         	call	_Lcd_Init	;wreg free
   722                           
   723                           ;laboratorio_4.c: 46: TRISD = 0x00; LATD = 0x00;
   724   000898  6A95               	clrf	149,c	;volatile
   725   00089A  6A8C               	clrf	140,c	;volatile
   726                           
   727                           ;laboratorio_4.c: 47: TRISD6 = 0;
   728   00089C  9C95               	bcf	3989,6,c	;volatile
   729                           
   730                           ;laboratorio_4.c: 48: LATD6 = 1;
   731   00089E  8C8C               	bsf	3980,6,c	;volatile
   732                           
   733                           ;laboratorio_4.c: 51: TRISB = 0b11110000; LATB = 0x00;
   734   0008A0  0EF0               	movlw	240
   735   0008A2  6E93               	movwf	147,c	;volatile
   736   0008A4  6A8A               	clrf	138,c	;volatile
   737                           
   738                           ;laboratorio_4.c: 52: RBPU = 0;
   739   0008A6  9EF1               	bcf	4081,7,c	;volatile
   740                           
   741                           ;laboratorio_4.c: 55: TRISC = 0x00; LATC = 0x00;
   742   0008A8  6A94               	clrf	148,c	;volatile
   743   0008AA  6A8B               	clrf	139,c	;volatile
   744                           
   745                           ;laboratorio_4.c: 56: TRISE = 0x00; LATE = 0x00;
   746   0008AC  6A96               	clrf	150,c	;volatile
   747   0008AE  6A8D               	clrf	141,c	;volatile
   748                           
   749                           ;laboratorio_4.c: 57: TRISC2 = 0; LATC2 = 0;
   750   0008B0  9494               	bcf	3988,2,c	;volatile
   751   0008B2  948B               	bcf	3979,2,c	;volatile
   752                           
   753                           ;laboratorio_4.c: 60: T0CON = 0b00000001;
   754   0008B4  0E01               	movlw	1
   755   0008B6  6ED5               	movwf	213,c	;volatile
   756                           
   757                           ;laboratorio_4.c: 61: TMR0 = 3036;
   758   0008B8  0E0B               	movlw	11
   759   0008BA  6ED7               	movwf	215,c	;volatile
   760   0008BC  0EDC               	movlw	220
   761   0008BE  6ED6               	movwf	214,c	;volatile
   762                           
   763                           ;laboratorio_4.c: 62: TMR0IF = 0;
   764   0008C0  94F2               	bcf	4082,2,c	;volatile
   765                           
   766                           ;laboratorio_4.c: 63: TMR0IE = 1;
   767   0008C2  8AF2               	bsf	4082,5,c	;volatile
   768                           
   769                           ;laboratorio_4.c: 64: TMR0ON = 1;
   770   0008C4  8ED5               	bsf	4053,7,c	;volatile
   771                           
   772                           ;laboratorio_4.c: 66: IPEN = 0;
   773   0008C6  9ED0               	bcf	4048,7,c	;volatile
   774                           
   775                           ;laboratorio_4.c: 67: GIE = 1;
   776   0008C8  8EF2               	bsf	4082,7,c	;volatile
   777                           
   778                           ;laboratorio_4.c: 68: PEIE = 1;
   779   0008CA  8CF2               	bsf	4082,6,c	;volatile
   780                           
   781                           ;laboratorio_4.c: 71: lcd_animacion_bienvenida();
   782   0008CC  EC8D  F007         	call	_lcd_animacion_bienvenida	;wreg free
   783                           
   784                           ;laboratorio_4.c: 72: estado = 1;
   785   0008D0  0E00               	movlw	0
   786   0008D2  6E1C               	movwf	(_estado+1)^0,c
   787   0008D4  0E01               	movlw	1
   788   0008D6  6E1B               	movwf	_estado^0,c
   789                           
   790                           ;laboratorio_4.c: 74: Lcd_Clear();
   791   0008D8  EC3F  F009         	call	_Lcd_Clear	;wreg free
   792                           
   793                           ;laboratorio_4.c: 75: Lcd_Set_Cursor(1, 1);
   794   0008DC  0E01               	movlw	1
   795   0008DE  6E04               	movwf	Lcd_Set_Cursor@column^0,c
   796   0008E0  0E01               	movlw	1
   797   0008E2  EC0C  F009         	call	_Lcd_Set_Cursor
   798                           
   799                           ;laboratorio_4.c: 76: Lcd_String("Ingrese valor:");
   800   0008E6  0E47               	movlw	low STR_1
   801   0008E8  6E04               	movwf	Lcd_String@str^0,c
   802   0008EA  ECF8  F008         	call	_Lcd_String	;wreg free
   803   0008EE                     l1801:
   804                           
   805                           ;laboratorio_4.c: 79: char tecla = Teclado4x4();
   806   0008EE  EC2D  F007         	call	_Teclado4x4	;wreg free
   807   0008F2  6E10               	movwf	main@tecla^0,c
   808                           
   809                           ;laboratorio_4.c: 83: if (tecla == 'D') {
   810   0008F4  0E44               	movlw	68
   811   0008F6  1810               	xorwf	main@tecla^0,w,c
   812   0008F8  A4D8               	btfss	status,2,c
   813   0008FA  D01C               	goto	l1821
   814                           
   815                           ;laboratorio_4.c: 84: estado = 4;
   816   0008FC  0E00               	movlw	0
   817   0008FE  6E1C               	movwf	(_estado+1)^0,c
   818   000900  0E04               	movlw	4
   819   000902  6E1B               	movwf	_estado^0,c
   820                           
   821                           ;laboratorio_4.c: 85: Lcd_Clear();
   822   000904  EC3F  F009         	call	_Lcd_Clear	;wreg free
   823                           
   824                           ;laboratorio_4.c: 86: Lcd_Set_Cursor(1, 1);
   825   000908  0E01               	movlw	1
   826   00090A  6E04               	movwf	Lcd_Set_Cursor@column^0,c
   827   00090C  0E01               	movlw	1
   828   00090E  EC0C  F009         	call	_Lcd_Set_Cursor
   829                           
   830                           ;laboratorio_4.c: 87: Lcd_String("! EMERGENCIA !");
   831   000912  0E38               	movlw	low STR_2
   832   000914  6E04               	movwf	Lcd_String@str^0,c
   833   000916  ECF8  F008         	call	_Lcd_String	;wreg free
   834                           
   835                           ;laboratorio_4.c: 88: Lcd_Set_Cursor(2, 1);
   836   00091A  0E01               	movlw	1
   837   00091C  6E04               	movwf	Lcd_Set_Cursor@column^0,c
   838   00091E  0E02               	movlw	2
   839   000920  EC0C  F009         	call	_Lcd_Set_Cursor
   840                           
   841                           ;laboratorio_4.c: 89: Lcd_String("Reset manual");
   842   000924  0E65               	movlw	low STR_3
   843   000926  6E04               	movwf	Lcd_String@str^0,c
   844   000928  ECF8  F008         	call	_Lcd_String	;wreg free
   845                           
   846                           ;laboratorio_4.c: 90: LATE = 0b00000001;
   847   00092C  0E01               	movlw	1
   848   00092E  6E8D               	movwf	141,c	;volatile
   849                           
   850                           ;laboratorio_4.c: 91: TMR0ON = 0;
   851   000930  9ED5               	bcf	4053,7,c	;volatile
   852   000932                     l124:
   853   000932  D7FF               	goto	l124
   854   000934                     l1821:
   855                           
   856                           ;laboratorio_4.c: 94: };laboratorio_4.c: 96: if (tecla != 0) {
   857   000934  5010               	movf	main@tecla^0,w,c
   858   000936  B4D8               	btfsc	status,2,c
   859   000938  D7DA               	goto	l1801
   860                           
   861                           ;laboratorio_4.c: 97: inactividad = 0;
   862   00093A  0E00               	movlw	0
   863   00093C  6E11               	movwf	_inactividad^0,c
   864   00093E  0E00               	movlw	0
   865   000940  6E12               	movwf	(_inactividad+1)^0,c
   866   000942  0E00               	movlw	0
   867   000944  6E13               	movwf	(_inactividad+2)^0,c
   868   000946  0E00               	movlw	0
   869   000948  6E14               	movwf	(_inactividad+3)^0,c
   870                           
   871                           ;laboratorio_4.c: 99: if (tecla == 'C') {
   872   00094A  0E43               	movlw	67
   873   00094C  1810               	xorwf	main@tecla^0,w,c
   874   00094E  A4D8               	btfss	status,2,c
   875   000950  D11E               	goto	l1927
   876                           
   877                           ;laboratorio_4.c: 100: lcd_backlight = !lcd_backlight;
   878   000952  501D               	movf	_lcd_backlight^0,w,c
   879   000954  A4D8               	btfss	status,2,c
   880   000956  D002               	goto	u1350
   881   000958  0E01               	movlw	1
   882   00095A  D001               	goto	u1360
   883   00095C                     u1350:
   884   00095C  0E00               	movlw	0
   885   00095E                     u1360:
   886   00095E  6E1D               	movwf	_lcd_backlight^0,c
   887                           
   888                           ;laboratorio_4.c: 101: LATD6 = lcd_backlight;
   889   000960  A01D               	btfss	_lcd_backlight^0,0,c
   890   000962  D002               	goto	u1370
   891   000964  8C8C               	bsf	3980,6,c	;volatile
   892   000966  D113               	goto	l1927
   893   000968                     u1370:
   894   000968  9C8C               	bcf	3980,6,c	;volatile
   895   00096A  D111               	goto	l1927
   896   00096C                     l1831:
   897                           
   898                           ;laboratorio_4.c: 106: if (tecla >= '0' && tecla <= '9') {
   899   00096C  0E2F               	movlw	47
   900   00096E  6410               	cpfsgt	main@tecla^0,c
   901   000970  D044               	goto	l1849
   902   000972  0E3A               	movlw	58
   903   000974  6010               	cpfslt	main@tecla^0,c
   904   000976  D041               	goto	l1849
   905                           
   906                           ;laboratorio_4.c: 107: input = input * 10 + (tecla - '0');
   907   000978  0E0A               	movlw	10
   908   00097A  0215               	mulwf	_input^0,c
   909   00097C  CFF3 F00E          	movff	prodl,??_main
   910   000980  CFF4 F00F          	movff	prodh,??_main+1
   911   000984  0216               	mulwf	(_input+1)^0,c
   912   000986  50F3               	movf	prodl,w,c
   913   000988  260F               	addwf	(??_main+1)^0,f,c
   914   00098A  5010               	movf	main@tecla^0,w,c
   915   00098C  260E               	addwf	??_main^0,f,c
   916   00098E  0E00               	movlw	0
   917   000990  220F               	addwfc	(??_main+1)^0,f,c
   918   000992  0ED0               	movlw	208
   919   000994  240E               	addwf	??_main^0,w,c
   920   000996  6E15               	movwf	_input^0,c
   921   000998  0EFF               	movlw	255
   922   00099A  200F               	addwfc	(??_main+1)^0,w,c
   923   00099C  6E16               	movwf	(_input+1)^0,c
   924                           
   925                           ;laboratorio_4.c: 108: if (input > 99) input = 0;
   926   00099E  5016               	movf	(_input+1)^0,w,c
   927   0009A0  E104               	bnz	u1410
   928   0009A2  0E64               	movlw	100
   929   0009A4  5C15               	subwf	_input^0,w,c
   930   0009A6  A0D8               	btfss	status,0,c
   931   0009A8  D004               	goto	l1841
   932   0009AA                     u1410:
   933   0009AA  0E00               	movlw	0
   934   0009AC  6E16               	movwf	(_input+1)^0,c
   935   0009AE  0E00               	movlw	0
   936   0009B0  6E15               	movwf	_input^0,c
   937   0009B2                     l1841:
   938                           
   939                           ;laboratorio_4.c: 109: mostrar_valor();
   940   0009B2  EC1E  F009         	call	_mostrar_valor	;wreg free
   941                           
   942                           ;laboratorio_4.c: 110: Lcd_Set_Cursor(2, 7);
   943   0009B6  0E07               	movlw	7
   944   0009B8  6E04               	movwf	Lcd_Set_Cursor@column^0,c
   945   0009BA  0E02               	movlw	2
   946   0009BC  EC0C  F009         	call	_Lcd_Set_Cursor
   947                           
   948                           ;laboratorio_4.c: 111: Lcd_Char((input / 10) + '0');
   949   0009C0  C015  F001         	movff	_input,___lwdiv@dividend
   950   0009C4  C016  F002         	movff	_input+1,___lwdiv@dividend+1
   951   0009C8  0E00               	movlw	0
   952   0009CA  6E04               	movwf	(___lwdiv@divisor+1)^0,c
   953   0009CC  0E0A               	movlw	10
   954   0009CE  6E03               	movwf	___lwdiv@divisor^0,c
   955   0009D0  EC7A  F008         	call	___lwdiv	;wreg free
   956   0009D4  5001               	movf	?___lwdiv^0,w,c
   957   0009D6  0F30               	addlw	48
   958   0009D8  EC5B  F006         	call	_Lcd_Char
   959                           
   960                           ;laboratorio_4.c: 112: Lcd_Char((input % 10) + '0');
   961   0009DC  C015  F001         	movff	_input,___lwmod@dividend
   962   0009E0  C016  F002         	movff	_input+1,___lwmod@dividend+1
   963   0009E4  0E00               	movlw	0
   964   0009E6  6E04               	movwf	(___lwmod@divisor+1)^0,c
   965   0009E8  0E0A               	movlw	10
   966   0009EA  6E03               	movwf	___lwmod@divisor^0,c
   967   0009EC  ECA3  F008         	call	___lwmod	;wreg free
   968   0009F0  5001               	movf	?___lwmod^0,w,c
   969   0009F2  0F30               	addlw	48
   970   0009F4  EC5B  F006         	call	_Lcd_Char
   971                           
   972                           ;laboratorio_4.c: 113: } else if (tecla == '*') {
   973   0009F8  D0DC               	goto	l1929
   974   0009FA                     l1849:
   975   0009FA  0E2A               	movlw	42
   976   0009FC  1810               	xorwf	main@tecla^0,w,c
   977   0009FE  A4D8               	btfss	status,2,c
   978   000A00  D032               	goto	l1861
   979                           
   980                           ;laboratorio_4.c: 114: input = input / 10;
   981   000A02  C015  F001         	movff	_input,___lwdiv@dividend
   982   000A06  C016  F002         	movff	_input+1,___lwdiv@dividend+1
   983   000A0A  0E00               	movlw	0
   984   000A0C  6E04               	movwf	(___lwdiv@divisor+1)^0,c
   985   000A0E  0E0A               	movlw	10
   986   000A10  6E03               	movwf	___lwdiv@divisor^0,c
   987   000A12  EC7A  F008         	call	___lwdiv	;wreg free
   988   000A16  C001  F015         	movff	?___lwdiv,_input
   989   000A1A  C002  F016         	movff	?___lwdiv+1,_input+1
   990                           
   991                           ;laboratorio_4.c: 115: mostrar_valor();
   992   000A1E  EC1E  F009         	call	_mostrar_valor	;wreg free
   993                           
   994                           ;laboratorio_4.c: 116: Lcd_Set_Cursor(2, 7);
   995   000A22  0E07               	movlw	7
   996   000A24  6E04               	movwf	Lcd_Set_Cursor@column^0,c
   997   000A26  0E02               	movlw	2
   998   000A28  EC0C  F009         	call	_Lcd_Set_Cursor
   999                           
  1000                           ;laboratorio_4.c: 117: Lcd_Char((input / 10) + '0');
  1001   000A2C  C015  F001         	movff	_input,___lwdiv@dividend
  1002   000A30  C016  F002         	movff	_input+1,___lwdiv@dividend+1
  1003   000A34  0E00               	movlw	0
  1004   000A36  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  1005   000A38  0E0A               	movlw	10
  1006   000A3A  6E03               	movwf	___lwdiv@divisor^0,c
  1007   000A3C  EC7A  F008         	call	___lwdiv	;wreg free
  1008   000A40  5001               	movf	?___lwdiv^0,w,c
  1009   000A42  0F30               	addlw	48
  1010   000A44  EC5B  F006         	call	_Lcd_Char
  1011                           
  1012                           ;laboratorio_4.c: 118: Lcd_Char((input % 10) + '0');
  1013   000A48  C015  F001         	movff	_input,___lwmod@dividend
  1014   000A4C  C016  F002         	movff	_input+1,___lwmod@dividend+1
  1015   000A50  0E00               	movlw	0
  1016   000A52  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1017   000A54  0E0A               	movlw	10
  1018   000A56  6E03               	movwf	___lwmod@divisor^0,c
  1019   000A58  ECA3  F008         	call	___lwmod	;wreg free
  1020   000A5C  5001               	movf	?___lwmod^0,w,c
  1021   000A5E  0F30               	addlw	48
  1022   000A60  EC5B  F006         	call	_Lcd_Char
  1023                           
  1024                           ;laboratorio_4.c: 119: } else if (tecla == '#') {
  1025   000A64  D0A6               	goto	l1929
  1026   000A66                     l1861:
  1027   000A66  0E23               	movlw	35
  1028   000A68  1810               	xorwf	main@tecla^0,w,c
  1029   000A6A  A4D8               	btfss	status,2,c
  1030   000A6C  D0A2               	goto	l1929
  1031                           
  1032                           ;laboratorio_4.c: 120: if (input >= 1 && input <= 59) {
  1033   000A6E  5015               	movf	_input^0,w,c
  1034   000A70  1016               	iorwf	(_input+1)^0,w,c
  1035   000A72  B4D8               	btfsc	status,2,c
  1036   000A74  D019               	goto	l1873
  1037   000A76  5016               	movf	(_input+1)^0,w,c
  1038   000A78  E117               	bnz	l1873
  1039   000A7A  0E3C               	movlw	60
  1040   000A7C  5C15               	subwf	_input^0,w,c
  1041   000A7E  B0D8               	btfsc	status,0,c
  1042   000A80  D013               	goto	l1873
  1043                           
  1044                           ;laboratorio_4.c: 121: objetivo = input;
  1045   000A82  C015  F019         	movff	_input,_objetivo
  1046   000A86  C016  F01A         	movff	_input+1,_objetivo+1
  1047                           
  1048                           ;laboratorio_4.c: 122: contador = 0;
  1049   000A8A  0E00               	movlw	0
  1050   000A8C  6E18               	movwf	(_contador+1)^0,c
  1051   000A8E  0E00               	movlw	0
  1052   000A90  6E17               	movwf	_contador^0,c
  1053                           
  1054                           ;laboratorio_4.c: 123: input = 0;
  1055   000A92  0E00               	movlw	0
  1056   000A94  6E16               	movwf	(_input+1)^0,c
  1057   000A96  0E00               	movlw	0
  1058   000A98  6E15               	movwf	_input^0,c
  1059                           
  1060                           ;laboratorio_4.c: 124: estado = 2;
  1061   000A9A  0E00               	movlw	0
  1062   000A9C  6E1C               	movwf	(_estado+1)^0,c
  1063   000A9E  0E02               	movlw	2
  1064   000AA0  6E1B               	movwf	_estado^0,c
  1065   000AA2                     l1871:
  1066                           
  1067                           ;laboratorio_4.c: 125: mostrar_conteo();
  1068   000AA2  ECE2  F005         	call	_mostrar_conteo	;wreg free
  1069                           
  1070                           ;laboratorio_4.c: 126: } else {
  1071   000AA6  D085               	goto	l1929
  1072   000AA8                     l1873:
  1073                           
  1074                           ;laboratorio_4.c: 127: Lcd_Clear();
  1075   000AA8  EC3F  F009         	call	_Lcd_Clear	;wreg free
  1076                           
  1077                           ;laboratorio_4.c: 128: Lcd_Set_Cursor(1, 1);
  1078   000AAC  0E01               	movlw	1
  1079   000AAE  6E04               	movwf	Lcd_Set_Cursor@column^0,c
  1080   000AB0  0E01               	movlw	1
  1081   000AB2  EC0C  F009         	call	_Lcd_Set_Cursor
  1082                           
  1083                           ;laboratorio_4.c: 129: Lcd_String("Rango invalido");
  1084   000AB6  0E56               	movlw	low STR_4
  1085   000AB8  6E04               	movwf	Lcd_String@str^0,c
  1086   000ABA  ECF8  F008         	call	_Lcd_String	;wreg free
  1087                           
  1088                           ;laboratorio_4.c: 130: _delay((unsigned long)((1500)*(1000000/4000.0)));
  1089   000ABE  0E02               	movlw	2
  1090   000AC0  6E0F               	movwf	(??_main+1)^0,c
  1091   000AC2  0EE7               	movlw	231
  1092   000AC4  6E0E               	movwf	??_main^0,c
  1093   000AC6  0E00               	movlw	0
  1094   000AC8                     u1527:
  1095   000AC8  2EE8               	decfsz	wreg,f,c
  1096   000ACA  D7FE               	bra	u1527
  1097   000ACC  2E0E               	decfsz	??_main^0,f,c
  1098   000ACE  D7FC               	bra	u1527
  1099   000AD0  2E0F               	decfsz	(??_main+1)^0,f,c
  1100   000AD2  D7FA               	bra	u1527
  1101   000AD4  D000               	nop2	
  1102   000AD6                     l1879:
  1103                           
  1104                           ;laboratorio_4.c: 131: input = 0;
  1105   000AD6  0E00               	movlw	0
  1106   000AD8  6E16               	movwf	(_input+1)^0,c
  1107   000ADA  0E00               	movlw	0
  1108   000ADC  6E15               	movwf	_input^0,c
  1109   000ADE                     l1881:
  1110                           
  1111                           ;laboratorio_4.c: 132: mostrar_valor();
  1112   000ADE  EC1E  F009         	call	_mostrar_valor	;wreg free
  1113   000AE2  D067               	goto	l1929
  1114   000AE4                     l1883:
  1115                           
  1116                           ;laboratorio_4.c: 138: if (tecla == 'A') {
  1117   000AE4  0E41               	movlw	65
  1118   000AE6  1810               	xorwf	main@tecla^0,w,c
  1119   000AE8  A4D8               	btfss	status,2,c
  1120   000AEA  D02F               	goto	l1909
  1121                           
  1122                           ;laboratorio_4.c: 139: if (contador < 59) contador++;
  1123   000AEC  5018               	movf	(_contador+1)^0,w,c
  1124   000AEE  E106               	bnz	l1889
  1125   000AF0  0E3B               	movlw	59
  1126   000AF2  5C17               	subwf	_contador^0,w,c
  1127   000AF4  B0D8               	btfsc	status,0,c
  1128   000AF6  D002               	goto	l1889
  1129   000AF8  4A17               	infsnz	_contador^0,f,c
  1130   000AFA  2A18               	incf	(_contador+1)^0,f,c
  1131   000AFC                     l1889:
  1132                           
  1133                           ;laboratorio_4.c: 140: if (contador >= objetivo || contador >= 59) {
  1134   000AFC  5019               	movf	_objetivo^0,w,c
  1135   000AFE  5C17               	subwf	_contador^0,w,c
  1136   000B00  501A               	movf	(_objetivo+1)^0,w,c
  1137   000B02  5818               	subwfb	(_contador+1)^0,w,c
  1138   000B04  B0D8               	btfsc	status,0,c
  1139   000B06  D006               	goto	u1490
  1140   000B08  5018               	movf	(_contador+1)^0,w,c
  1141   000B0A  E104               	bnz	u1490
  1142   000B0C  0E3B               	movlw	59
  1143   000B0E  5C17               	subwf	_contador^0,w,c
  1144   000B10  A0D8               	btfss	status,0,c
  1145   000B12  D7C7               	goto	l1871
  1146   000B14                     u1490:
  1147                           
  1148                           ;laboratorio_4.c: 141: mostrar_conteo();
  1149   000B14  ECE2  F005         	call	_mostrar_conteo	;wreg free
  1150                           
  1151                           ;laboratorio_4.c: 142: estado = 3;
  1152   000B18  0E00               	movlw	0
  1153   000B1A  6E1C               	movwf	(_estado+1)^0,c
  1154   000B1C  0E03               	movlw	3
  1155   000B1E  6E1B               	movwf	_estado^0,c
  1156                           
  1157                           ;laboratorio_4.c: 143: Lcd_Clear();
  1158   000B20  EC3F  F009         	call	_Lcd_Clear	;wreg free
  1159                           
  1160                           ;laboratorio_4.c: 144: Lcd_Set_Cursor(1, 1);
  1161   000B24  0E01               	movlw	1
  1162   000B26  6E04               	movwf	Lcd_Set_Cursor@column^0,c
  1163   000B28  0E01               	movlw	1
  1164   000B2A  EC0C  F009         	call	_Lcd_Set_Cursor
  1165                           
  1166                           ;laboratorio_4.c: 145: Lcd_String("Conteo Completo!");
  1167   000B2E  0E27               	movlw	low STR_5
  1168   000B30  6E04               	movwf	Lcd_String@str^0,c
  1169   000B32  ECF8  F008         	call	_Lcd_String	;wreg free
  1170                           
  1171                           ;laboratorio_4.c: 146: Lcd_Set_Cursor(2, 1);
  1172   000B36  0E01               	movlw	1
  1173   000B38  6E04               	movwf	Lcd_Set_Cursor@column^0,c
  1174   000B3A  0E02               	movlw	2
  1175   000B3C  EC0C  F009         	call	_Lcd_Set_Cursor
  1176                           
  1177                           ;laboratorio_4.c: 147: Lcd_String("Presione OK");
  1178   000B40  0E72               	movlw	low STR_6
  1179   000B42  6E04               	movwf	Lcd_String@str^0,c
  1180   000B44  ECF8  F008         	call	_Lcd_String	;wreg free
  1181                           
  1182                           ;laboratorio_4.c: 148: } else {
  1183   000B48  D034               	goto	l1929
  1184   000B4A                     l1909:
  1185   000B4A  0E42               	movlw	66
  1186   000B4C  1810               	xorwf	main@tecla^0,w,c
  1187   000B4E  A4D8               	btfss	status,2,c
  1188   000B50  D030               	goto	l1929
  1189                           
  1190                           ;laboratorio_4.c: 152: estado = 1;
  1191   000B52  0E00               	movlw	0
  1192   000B54  6E1C               	movwf	(_estado+1)^0,c
  1193   000B56  0E01               	movlw	1
  1194   000B58  6E1B               	movwf	_estado^0,c
  1195                           
  1196                           ;laboratorio_4.c: 153: input = 0;
  1197   000B5A  0E00               	movlw	0
  1198   000B5C  6E16               	movwf	(_input+1)^0,c
  1199   000B5E  0E00               	movlw	0
  1200   000B60  6E15               	movwf	_input^0,c
  1201                           
  1202                           ;laboratorio_4.c: 154: contador = 0;
  1203   000B62  0E00               	movlw	0
  1204   000B64  6E18               	movwf	(_contador+1)^0,c
  1205   000B66  0E00               	movlw	0
  1206   000B68  6E17               	movwf	_contador^0,c
  1207                           
  1208                           ;laboratorio_4.c: 155: unidad(0);
  1209   000B6A  0E00               	movlw	0
  1210   000B6C  6E07               	movwf	(unidad@i+1)^0,c
  1211   000B6E  0E00               	movlw	0
  1212   000B70  6E06               	movwf	unidad@i^0,c
  1213   000B72  EC35  F009         	call	_unidad	;wreg free
  1214                           
  1215                           ;laboratorio_4.c: 156: LATE = 0b00000101;
  1216   000B76  0E05               	movlw	5
  1217   000B78  6E8D               	movwf	141,c	;volatile
  1218   000B7A  D7B1               	goto	l1881
  1219   000B7C                     l1919:
  1220                           
  1221                           ;laboratorio_4.c: 163: if (tecla == '#') {
  1222   000B7C  0E23               	movlw	35
  1223   000B7E  1810               	xorwf	main@tecla^0,w,c
  1224   000B80  A4D8               	btfss	status,2,c
  1225   000B82  D017               	goto	l1929
  1226                           
  1227                           ;laboratorio_4.c: 164: estado = 1;
  1228   000B84  0E00               	movlw	0
  1229   000B86  6E1C               	movwf	(_estado+1)^0,c
  1230   000B88  0E01               	movlw	1
  1231   000B8A  6E1B               	movwf	_estado^0,c
  1232   000B8C  D7A4               	goto	l1879
  1233   000B8E                     l1927:
  1234   000B8E  C01B  F00E         	movff	_estado,??_main
  1235   000B92  C01C  F00F         	movff	_estado+1,??_main+1
  1236                           
  1237                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1238                           ; Switch size 1, requested type "simple"
  1239                           ; Number of cases is 1, Range of values is 0 to 0
  1240                           ; switch strategies available:
  1241                           ; Name         Instructions Cycles
  1242                           ; simple_byte            4     3 (average)
  1243                           ;	Chosen strategy is simple_byte
  1244   000B96  500F               	movf	(??_main+1)^0,w,c
  1245   000B98  0A00               	xorlw	0	; case 0
  1246   000B9A  A4D8               	btfss	status,2,c
  1247   000B9C  D00A               	goto	l1929
  1248                           
  1249                           ; Switch size 1, requested type "simple"
  1250                           ; Number of cases is 3, Range of values is 1 to 3
  1251                           ; switch strategies available:
  1252                           ; Name         Instructions Cycles
  1253                           ; simple_byte           10     6 (average)
  1254                           ;	Chosen strategy is simple_byte
  1255   000B9E  500E               	movf	??_main^0,w,c
  1256   000BA0  0A01               	xorlw	1	; case 1
  1257   000BA2  B4D8               	btfsc	status,2,c
  1258   000BA4  D6E3               	goto	l1831
  1259   000BA6  0A03               	xorlw	3	; case 2
  1260   000BA8  B4D8               	btfsc	status,2,c
  1261   000BAA  D79C               	goto	l1883
  1262   000BAC  0A01               	xorlw	1	; case 3
  1263   000BAE  B4D8               	btfsc	status,2,c
  1264   000BB0  D7E5               	goto	l1919
  1265   000BB2                     l1929:
  1266                           
  1267                           ;laboratorio_4.c: 170: _delay((unsigned long)((200)*(1000000/4000.0)));
  1268   000BB2  0E41               	movlw	65
  1269   000BB4  6E0E               	movwf	??_main^0,c
  1270   000BB6  0EEE               	movlw	238
  1271   000BB8                     u1537:
  1272   000BB8  2EE8               	decfsz	wreg,f,c
  1273   000BBA  D7FE               	bra	u1537
  1274   000BBC  2E0E               	decfsz	??_main^0,f,c
  1275   000BBE  D7FC               	bra	u1537
  1276   000BC0  D000               	nop2	
  1277   000BC2  D695               	goto	l1801
  1278   000BC4                     __end_of_main:
  1279                           	callstack 0
  1280                           
  1281 ;; *************** function _mostrar_valor *****************
  1282 ;; Defined at:
  1283 ;;		line 231 in file "laboratorio_4.c"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;		None
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;		None
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  1    wreg      void 
  1290 ;; Registers used:
  1291 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1297 ;;      Params:         0       0       0       0       0       0       0       0       0
  1298 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1299 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1300 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1301 ;;Total ram usage:        0 bytes
  1302 ;; Hardware stack levels used: 1
  1303 ;; Hardware stack levels required when called: 3
  1304 ;; This function calls:
  1305 ;;		_Lcd_Clear
  1306 ;;		_Lcd_Set_Cursor
  1307 ;;		_Lcd_String
  1308 ;; This function is called by:
  1309 ;;		_main
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           	psect	text1
  1314   00123C                     __ptext1:
  1315                           	callstack 0
  1316   00123C                     _mostrar_valor:
  1317                           	callstack 27
  1318                           
  1319                           ;laboratorio_4.c: 232: Lcd_Clear();
  1320                           
  1321                           ;incstack = 0
  1322   00123C  EC3F  F009         	call	_Lcd_Clear	;wreg free
  1323                           
  1324                           ;laboratorio_4.c: 233: Lcd_Set_Cursor(1, 1);
  1325   001240  0E01               	movlw	1
  1326   001242  6E04               	movwf	Lcd_Set_Cursor@column^0,c
  1327   001244  0E01               	movlw	1
  1328   001246  EC0C  F009         	call	_Lcd_Set_Cursor
  1329                           
  1330                           ;laboratorio_4.c: 234: Lcd_String("Ingrese valor:");
  1331   00124A  0E47               	movlw	low STR_1
  1332   00124C  6E04               	movwf	Lcd_String@str^0,c
  1333   00124E  ECF8  F008         	call	_Lcd_String	;wreg free
  1334   001252  0012               	return		;funcret
  1335   001254                     __end_of_mostrar_valor:
  1336                           	callstack 0
  1337                           
  1338 ;; *************** function _mostrar_conteo *****************
  1339 ;; Defined at:
  1340 ;;		line 190 in file "laboratorio_4.c"
  1341 ;; Parameters:    Size  Location     Type
  1342 ;;		None
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;  faltan          2   11[COMRAM] int 
  1345 ;; Return value:  Size  Location     Type
  1346 ;;                  1    wreg      void 
  1347 ;; Registers used:
  1348 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1349 ;; Tracked objects:
  1350 ;;		On entry : 0/0
  1351 ;;		On exit  : 0/0
  1352 ;;		Unchanged: 0/0
  1353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1354 ;;      Params:         0       0       0       0       0       0       0       0       0
  1355 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1356 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1357 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1358 ;;Total ram usage:        2 bytes
  1359 ;; Hardware stack levels used: 1
  1360 ;; Hardware stack levels required when called: 3
  1361 ;; This function calls:
  1362 ;;		_Lcd_Char
  1363 ;;		_Lcd_Clear
  1364 ;;		_Lcd_Set_Cursor
  1365 ;;		_Lcd_String
  1366 ;;		___awdiv
  1367 ;;		___awmod
  1368 ;;		___lwdiv
  1369 ;;		___lwmod
  1370 ;;		_color
  1371 ;;		_unidad
  1372 ;; This function is called by:
  1373 ;;		_main
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377                           	psect	text2
  1378   000BC4                     __ptext2:
  1379                           	callstack 0
  1380   000BC4                     _mostrar_conteo:
  1381                           	callstack 27
  1382                           
  1383                           ;laboratorio_4.c: 191: Lcd_Clear();
  1384                           
  1385                           ;incstack = 0
  1386   000BC4  EC3F  F009         	call	_Lcd_Clear	;wreg free
  1387                           
  1388                           ;laboratorio_4.c: 192: Lcd_Set_Cursor(1, 1);
  1389   000BC8  0E01               	movlw	1
  1390   000BCA  6E04               	movwf	Lcd_Set_Cursor@column^0,c
  1391   000BCC  0E01               	movlw	1
  1392   000BCE  EC0C  F009         	call	_Lcd_Set_Cursor
  1393                           
  1394                           ;laboratorio_4.c: 193: Lcd_String("Objetivo:");
  1395   000BD2  0E89               	movlw	low STR_7
  1396   000BD4  6E04               	movwf	Lcd_String@str^0,c
  1397   000BD6  ECF8  F008         	call	_Lcd_String	;wreg free
  1398                           
  1399                           ;laboratorio_4.c: 194: Lcd_Char((objetivo / 10) + '0');
  1400   000BDA  C019  F001         	movff	_objetivo,___lwdiv@dividend
  1401   000BDE  C01A  F002         	movff	_objetivo+1,___lwdiv@dividend+1
  1402   000BE2  0E00               	movlw	0
  1403   000BE4  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  1404   000BE6  0E0A               	movlw	10
  1405   000BE8  6E03               	movwf	___lwdiv@divisor^0,c
  1406   000BEA  EC7A  F008         	call	___lwdiv	;wreg free
  1407   000BEE  5001               	movf	?___lwdiv^0,w,c
  1408   000BF0  0F30               	addlw	48
  1409   000BF2  EC5B  F006         	call	_Lcd_Char
  1410                           
  1411                           ;laboratorio_4.c: 195: Lcd_Char((objetivo % 10) + '0');
  1412   000BF6  C019  F001         	movff	_objetivo,___lwmod@dividend
  1413   000BFA  C01A  F002         	movff	_objetivo+1,___lwmod@dividend+1
  1414   000BFE  0E00               	movlw	0
  1415   000C00  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1416   000C02  0E0A               	movlw	10
  1417   000C04  6E03               	movwf	___lwmod@divisor^0,c
  1418   000C06  ECA3  F008         	call	___lwmod	;wreg free
  1419   000C0A  5001               	movf	?___lwmod^0,w,c
  1420   000C0C  0F30               	addlw	48
  1421   000C0E  EC5B  F006         	call	_Lcd_Char
  1422                           
  1423                           ;laboratorio_4.c: 197: Lcd_Set_Cursor(2, 1);
  1424   000C12  0E01               	movlw	1
  1425   000C14  6E04               	movwf	Lcd_Set_Cursor@column^0,c
  1426   000C16  0E02               	movlw	2
  1427   000C18  EC0C  F009         	call	_Lcd_Set_Cursor
  1428                           
  1429                           ;laboratorio_4.c: 198: Lcd_String("Faltantes:");
  1430   000C1C  0E7E               	movlw	low STR_8
  1431   000C1E  6E04               	movwf	Lcd_String@str^0,c
  1432   000C20  ECF8  F008         	call	_Lcd_String	;wreg free
  1433                           
  1434                           ;laboratorio_4.c: 199: int faltan = objetivo - contador;
  1435   000C24  5017               	movf	_contador^0,w,c
  1436   000C26  5C19               	subwf	_objetivo^0,w,c
  1437   000C28  6E0C               	movwf	mostrar_conteo@faltan^0,c
  1438   000C2A  5018               	movf	(_contador+1)^0,w,c
  1439   000C2C  581A               	subwfb	(_objetivo+1)^0,w,c
  1440   000C2E  6E0D               	movwf	(mostrar_conteo@faltan+1)^0,c
  1441                           
  1442                           ;laboratorio_4.c: 200: if (faltan < 0) faltan = 0;
  1443   000C30  AE0D               	btfss	(mostrar_conteo@faltan+1)^0,7,c
  1444   000C32  D004               	goto	l1739
  1445   000C34  0E00               	movlw	0
  1446   000C36  6E0D               	movwf	(mostrar_conteo@faltan+1)^0,c
  1447   000C38  0E00               	movlw	0
  1448   000C3A  6E0C               	movwf	mostrar_conteo@faltan^0,c
  1449   000C3C                     l1739:
  1450                           
  1451                           ;laboratorio_4.c: 201: Lcd_Char((faltan / 10) + '0');
  1452   000C3C  C00C  F001         	movff	mostrar_conteo@faltan,___awdiv@dividend
  1453   000C40  C00D  F002         	movff	mostrar_conteo@faltan+1,___awdiv@dividend+1
  1454   000C44  0E00               	movlw	0
  1455   000C46  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1456   000C48  0E0A               	movlw	10
  1457   000C4A  6E03               	movwf	___awdiv@divisor^0,c
  1458   000C4C  ECD1  F007         	call	___awdiv	;wreg free
  1459   000C50  5001               	movf	?___awdiv^0,w,c
  1460   000C52  0F30               	addlw	48
  1461   000C54  EC5B  F006         	call	_Lcd_Char
  1462                           
  1463                           ;laboratorio_4.c: 202: Lcd_Char((faltan % 10) + '0');
  1464   000C58  C00C  F001         	movff	mostrar_conteo@faltan,___awmod@dividend
  1465   000C5C  C00D  F002         	movff	mostrar_conteo@faltan+1,___awmod@dividend+1
  1466   000C60  0E00               	movlw	0
  1467   000C62  6E04               	movwf	(___awmod@divisor+1)^0,c
  1468   000C64  0E0A               	movlw	10
  1469   000C66  6E03               	movwf	___awmod@divisor^0,c
  1470   000C68  EC12  F008         	call	___awmod	;wreg free
  1471   000C6C  5001               	movf	?___awmod^0,w,c
  1472   000C6E  0F30               	addlw	48
  1473   000C70  EC5B  F006         	call	_Lcd_Char
  1474                           
  1475                           ;laboratorio_4.c: 204: unidad(contador % 10);
  1476   000C74  C017  F001         	movff	_contador,___lwmod@dividend
  1477   000C78  C018  F002         	movff	_contador+1,___lwmod@dividend+1
  1478   000C7C  0E00               	movlw	0
  1479   000C7E  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1480   000C80  0E0A               	movlw	10
  1481   000C82  6E03               	movwf	___lwmod@divisor^0,c
  1482   000C84  ECA3  F008         	call	___lwmod	;wreg free
  1483   000C88  C001  F006         	movff	?___lwmod,unidad@i
  1484   000C8C  C002  F007         	movff	?___lwmod+1,unidad@i+1
  1485   000C90  EC35  F009         	call	_unidad	;wreg free
  1486                           
  1487                           ;laboratorio_4.c: 205: color(contador / 10);
  1488   000C94  C017  F001         	movff	_contador,___lwdiv@dividend
  1489   000C98  C018  F002         	movff	_contador+1,___lwdiv@dividend+1
  1490   000C9C  0E00               	movlw	0
  1491   000C9E  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  1492   000CA0  0E0A               	movlw	10
  1493   000CA2  6E03               	movwf	___lwdiv@divisor^0,c
  1494   000CA4  EC7A  F008         	call	___lwdiv	;wreg free
  1495   000CA8  C001  F008         	movff	?___lwdiv,color@i
  1496   000CAC  C002  F009         	movff	?___lwdiv+1,color@i+1
  1497   000CB0  EC49  F008         	call	_color	;wreg free
  1498   000CB4  0012               	return		;funcret
  1499   000CB6                     __end_of_mostrar_conteo:
  1500                           	callstack 0
  1501                           
  1502 ;; *************** function _unidad *****************
  1503 ;; Defined at:
  1504 ;;		line 208 in file "laboratorio_4.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;  i               2    5[COMRAM] int 
  1507 ;; Auto vars:     Size  Location     Type
  1508 ;;		None
  1509 ;; Return value:  Size  Location     Type
  1510 ;;                  1    wreg      void 
  1511 ;; Registers used:
  1512 ;;		wreg, status,2, status,0
  1513 ;; Tracked objects:
  1514 ;;		On entry : 0/0
  1515 ;;		On exit  : 0/0
  1516 ;;		Unchanged: 0/0
  1517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1518 ;;      Params:         2       0       0       0       0       0       0       0       0
  1519 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1520 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1521 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1522 ;;Total ram usage:        3 bytes
  1523 ;; Hardware stack levels used: 1
  1524 ;; Hardware stack levels required when called: 1
  1525 ;; This function calls:
  1526 ;;		Nothing
  1527 ;; This function is called by:
  1528 ;;		_main
  1529 ;;		_mostrar_conteo
  1530 ;; This function uses a non-reentrant model
  1531 ;;
  1532                           
  1533                           	psect	text3
  1534   00126A                     __ptext3:
  1535                           	callstack 0
  1536   00126A                     _unidad:
  1537                           	callstack 29
  1538                           
  1539                           ;laboratorio_4.c: 209: LATC = (LATC & 0x0F) | (i << 4);
  1540                           
  1541                           ;incstack = 0
  1542   00126A  C006  F008         	movff	unidad@i,??_unidad
  1543   00126E  3A08               	swapf	??_unidad^0,f,c
  1544   001270  0EF0               	movlw	240
  1545   001272  1608               	andwf	??_unidad^0,f,c
  1546   001274  508B               	movf	139,w,c	;volatile
  1547   001276  0B0F               	andlw	15
  1548   001278  1008               	iorwf	??_unidad^0,w,c
  1549   00127A  6E8B               	movwf	139,c	;volatile
  1550   00127C  0012               	return		;funcret
  1551   00127E                     __end_of_unidad:
  1552                           	callstack 0
  1553                           
  1554 ;; *************** function _color *****************
  1555 ;; Defined at:
  1556 ;;		line 212 in file "laboratorio_4.c"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;  i               2    7[COMRAM] int 
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;		None
  1561 ;; Return value:  Size  Location     Type
  1562 ;;                  1    wreg      void 
  1563 ;; Registers used:
  1564 ;;		wreg, status,2, status,0
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1570 ;;      Params:         2       0       0       0       0       0       0       0       0
  1571 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1572 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1573 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1574 ;;Total ram usage:        4 bytes
  1575 ;; Hardware stack levels used: 1
  1576 ;; Hardware stack levels required when called: 1
  1577 ;; This function calls:
  1578 ;;		Nothing
  1579 ;; This function is called by:
  1580 ;;		_mostrar_conteo
  1581 ;; This function uses a non-reentrant model
  1582 ;;
  1583                           
  1584                           	psect	text4
  1585   001092                     __ptext4:
  1586                           	callstack 0
  1587   001092                     _color:
  1588                           	callstack 28
  1589                           
  1590                           ;laboratorio_4.c: 213: switch (i) {
  1591                           
  1592                           ;incstack = 0
  1593   001092  D014               	goto	l1545
  1594   001094                     l1531:
  1595   001094  0E05               	movlw	5
  1596   001096  6E8D               	movwf	141,c	;volatile
  1597   001098  0012               	return	
  1598   00109A                     l1533:
  1599   00109A  0E04               	movlw	4
  1600   00109C  6E8D               	movwf	141,c	;volatile
  1601   00109E  0012               	return	
  1602   0010A0                     l1535:
  1603   0010A0  0E06               	movlw	6
  1604   0010A2  6E8D               	movwf	141,c	;volatile
  1605   0010A4  0012               	return	
  1606   0010A6                     l1537:
  1607   0010A6  0E02               	movlw	2
  1608   0010A8  6E8D               	movwf	141,c	;volatile
  1609   0010AA  0012               	return	
  1610   0010AC                     l1539:
  1611   0010AC  0E03               	movlw	3
  1612   0010AE  6E8D               	movwf	141,c	;volatile
  1613   0010B0  0012               	return	
  1614   0010B2                     l1541:
  1615   0010B2  0E07               	movlw	7
  1616   0010B4  6E8D               	movwf	141,c	;volatile
  1617   0010B6  0012               	return	
  1618   0010B8                     l182:
  1619   0010B8  6A8D               	clrf	141,c	;volatile
  1620   0010BA  0012               	return	
  1621   0010BC                     l1545:
  1622   0010BC  C008  F00A         	movff	color@i,??_color
  1623   0010C0  C009  F00B         	movff	color@i+1,??_color+1
  1624                           
  1625                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1626                           ; Switch size 1, requested type "simple"
  1627                           ; Number of cases is 1, Range of values is 0 to 0
  1628                           ; switch strategies available:
  1629                           ; Name         Instructions Cycles
  1630                           ; simple_byte            4     3 (average)
  1631                           ;	Chosen strategy is simple_byte
  1632   0010C4  500B               	movf	(??_color+1)^0,w,c
  1633   0010C6  0A00               	xorlw	0	; case 0
  1634   0010C8  A4D8               	btfss	status,2,c
  1635   0010CA  D7F6               	goto	l182
  1636                           
  1637                           ; Switch size 1, requested type "simple"
  1638                           ; Number of cases is 6, Range of values is 0 to 5
  1639                           ; switch strategies available:
  1640                           ; Name         Instructions Cycles
  1641                           ; simple_byte           19    10 (average)
  1642                           ;	Chosen strategy is simple_byte
  1643   0010CC  500A               	movf	??_color^0,w,c
  1644   0010CE  0A00               	xorlw	0	; case 0
  1645   0010D0  B4D8               	btfsc	status,2,c
  1646   0010D2  D7E0               	goto	l1531
  1647   0010D4  0A01               	xorlw	1	; case 1
  1648   0010D6  B4D8               	btfsc	status,2,c
  1649   0010D8  D7E0               	goto	l1533
  1650   0010DA  0A03               	xorlw	3	; case 2
  1651   0010DC  B4D8               	btfsc	status,2,c
  1652   0010DE  D7E0               	goto	l1535
  1653   0010E0  0A01               	xorlw	1	; case 3
  1654   0010E2  B4D8               	btfsc	status,2,c
  1655   0010E4  D7E0               	goto	l1537
  1656   0010E6  0A07               	xorlw	7	; case 4
  1657   0010E8  B4D8               	btfsc	status,2,c
  1658   0010EA  D7E0               	goto	l1539
  1659   0010EC  0A01               	xorlw	1	; case 5
  1660   0010EE  B4D8               	btfsc	status,2,c
  1661   0010F0  D7E0               	goto	l1541
  1662   0010F2  D7E2               	goto	l182
  1663   0010F4                     __end_of_color:
  1664                           	callstack 0
  1665                           
  1666 ;; *************** function ___lwmod *****************
  1667 ;; Defined at:
  1668 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lwmod.c"
  1669 ;; Parameters:    Size  Location     Type
  1670 ;;  dividend        2    0[COMRAM] unsigned int 
  1671 ;;  divisor         2    2[COMRAM] unsigned int 
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;  counter         1    4[COMRAM] unsigned char 
  1674 ;; Return value:  Size  Location     Type
  1675 ;;                  2    0[COMRAM] unsigned int 
  1676 ;; Registers used:
  1677 ;;		wreg, status,2, status,0
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1683 ;;      Params:         4       0       0       0       0       0       0       0       0
  1684 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1685 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1686 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1687 ;;Total ram usage:        5 bytes
  1688 ;; Hardware stack levels used: 1
  1689 ;; Hardware stack levels required when called: 1
  1690 ;; This function calls:
  1691 ;;		Nothing
  1692 ;; This function is called by:
  1693 ;;		_main
  1694 ;;		_mostrar_conteo
  1695 ;; This function uses a non-reentrant model
  1696 ;;
  1697                           
  1698                           	psect	text5
  1699   001146                     __ptext5:
  1700                           	callstack 0
  1701   001146                     ___lwmod:
  1702                           	callstack 28
  1703                           
  1704                           ;incstack = 0
  1705   001146  5003               	movf	___lwmod@divisor^0,w,c
  1706   001148  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  1707   00114A  B4D8               	btfsc	status,2,c
  1708   00114C  D018               	goto	l691
  1709   00114E  0E01               	movlw	1
  1710   001150  6E05               	movwf	___lwmod@counter^0,c
  1711   001152  D004               	goto	l1659
  1712   001154                     l1657:
  1713   001154  90D8               	bcf	status,0,c
  1714   001156  3603               	rlcf	___lwmod@divisor^0,f,c
  1715   001158  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  1716   00115A  2A05               	incf	___lwmod@counter^0,f,c
  1717   00115C                     l1659:
  1718   00115C  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  1719   00115E  D7FA               	goto	l1657
  1720   001160                     u1270:
  1721   001160  5003               	movf	___lwmod@divisor^0,w,c
  1722   001162  5C01               	subwf	___lwmod@dividend^0,w,c
  1723   001164  5004               	movf	(___lwmod@divisor+1)^0,w,c
  1724   001166  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  1725   001168  A0D8               	btfss	status,0,c
  1726   00116A  D004               	goto	l1665
  1727   00116C  5003               	movf	___lwmod@divisor^0,w,c
  1728   00116E  5E01               	subwf	___lwmod@dividend^0,f,c
  1729   001170  5004               	movf	(___lwmod@divisor+1)^0,w,c
  1730   001172  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  1731   001174                     l1665:
  1732   001174  90D8               	bcf	status,0,c
  1733   001176  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  1734   001178  3203               	rrcf	___lwmod@divisor^0,f,c
  1735   00117A  2E05               	decfsz	___lwmod@counter^0,f,c
  1736   00117C  D7F1               	goto	u1270
  1737   00117E                     l691:
  1738   00117E  C001  F001         	movff	___lwmod@dividend,?___lwmod
  1739   001182  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  1740   001186  0012               	return		;funcret
  1741   001188                     __end_of___lwmod:
  1742                           	callstack 0
  1743                           
  1744 ;; *************** function ___lwdiv *****************
  1745 ;; Defined at:
  1746 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\lwdiv.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;  dividend        2    0[COMRAM] unsigned int 
  1749 ;;  divisor         2    2[COMRAM] unsigned int 
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;  quotient        2    4[COMRAM] unsigned int 
  1752 ;;  counter         1    6[COMRAM] unsigned char 
  1753 ;; Return value:  Size  Location     Type
  1754 ;;                  2    0[COMRAM] unsigned int 
  1755 ;; Registers used:
  1756 ;;		wreg, status,2, status,0
  1757 ;; Tracked objects:
  1758 ;;		On entry : 0/0
  1759 ;;		On exit  : 0/0
  1760 ;;		Unchanged: 0/0
  1761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1762 ;;      Params:         4       0       0       0       0       0       0       0       0
  1763 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1764 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1765 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1766 ;;Total ram usage:        7 bytes
  1767 ;; Hardware stack levels used: 1
  1768 ;; Hardware stack levels required when called: 1
  1769 ;; This function calls:
  1770 ;;		Nothing
  1771 ;; This function is called by:
  1772 ;;		_main
  1773 ;;		_mostrar_conteo
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777                           	psect	text6
  1778   0010F4                     __ptext6:
  1779                           	callstack 0
  1780   0010F4                     ___lwdiv:
  1781                           	callstack 28
  1782                           
  1783                           ;incstack = 0
  1784   0010F4  0E00               	movlw	0
  1785   0010F6  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  1786   0010F8  0E00               	movlw	0
  1787   0010FA  6E05               	movwf	___lwdiv@quotient^0,c
  1788   0010FC  5003               	movf	___lwdiv@divisor^0,w,c
  1789   0010FE  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1790   001100  B4D8               	btfsc	status,2,c
  1791   001102  D01C               	goto	l681
  1792   001104  0E01               	movlw	1
  1793   001106  6E07               	movwf	___lwdiv@counter^0,c
  1794   001108  D004               	goto	l1639
  1795   00110A                     l1637:
  1796   00110A  90D8               	bcf	status,0,c
  1797   00110C  3603               	rlcf	___lwdiv@divisor^0,f,c
  1798   00110E  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1799   001110  2A07               	incf	___lwdiv@counter^0,f,c
  1800   001112                     l1639:
  1801   001112  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  1802   001114  D7FA               	goto	l1637
  1803   001116                     u1240:
  1804   001116  90D8               	bcf	status,0,c
  1805   001118  3605               	rlcf	___lwdiv@quotient^0,f,c
  1806   00111A  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1807   00111C  5003               	movf	___lwdiv@divisor^0,w,c
  1808   00111E  5C01               	subwf	___lwdiv@dividend^0,w,c
  1809   001120  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1810   001122  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1811   001124  A0D8               	btfss	status,0,c
  1812   001126  D005               	goto	l1649
  1813   001128  5003               	movf	___lwdiv@divisor^0,w,c
  1814   00112A  5E01               	subwf	___lwdiv@dividend^0,f,c
  1815   00112C  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1816   00112E  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1817   001130  8005               	bsf	___lwdiv@quotient^0,0,c
  1818   001132                     l1649:
  1819   001132  90D8               	bcf	status,0,c
  1820   001134  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1821   001136  3203               	rrcf	___lwdiv@divisor^0,f,c
  1822   001138  2E07               	decfsz	___lwdiv@counter^0,f,c
  1823   00113A  D7ED               	goto	u1240
  1824   00113C                     l681:
  1825   00113C  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1826   001140  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1827   001144  0012               	return		;funcret
  1828   001146                     __end_of___lwdiv:
  1829                           	callstack 0
  1830                           
  1831 ;; *************** function ___awmod *****************
  1832 ;; Defined at:
  1833 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awmod.c"
  1834 ;; Parameters:    Size  Location     Type
  1835 ;;  dividend        2    0[COMRAM] int 
  1836 ;;  divisor         2    2[COMRAM] int 
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;  sign            1    5[COMRAM] unsigned char 
  1839 ;;  counter         1    4[COMRAM] unsigned char 
  1840 ;; Return value:  Size  Location     Type
  1841 ;;                  2    0[COMRAM] int 
  1842 ;; Registers used:
  1843 ;;		wreg, status,2, status,0
  1844 ;; Tracked objects:
  1845 ;;		On entry : 0/0
  1846 ;;		On exit  : 0/0
  1847 ;;		Unchanged: 0/0
  1848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1849 ;;      Params:         4       0       0       0       0       0       0       0       0
  1850 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1851 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1852 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1853 ;;Total ram usage:        6 bytes
  1854 ;; Hardware stack levels used: 1
  1855 ;; Hardware stack levels required when called: 1
  1856 ;; This function calls:
  1857 ;;		Nothing
  1858 ;; This function is called by:
  1859 ;;		_mostrar_conteo
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863                           	psect	text7
  1864   001024                     __ptext7:
  1865                           	callstack 0
  1866   001024                     ___awmod:
  1867                           	callstack 28
  1868                           
  1869                           ;incstack = 0
  1870   001024  6A06               	clrf	___awmod@sign^0,c
  1871   001026  AE02               	btfss	(___awmod@dividend+1)^0,7,c
  1872   001028  D006               	goto	l1603
  1873   00102A  6C01               	negf	___awmod@dividend^0,c
  1874   00102C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1875   00102E  B0D8               	btfsc	status,0,c
  1876   001030  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1877   001032  0E01               	movlw	1
  1878   001034  6E06               	movwf	___awmod@sign^0,c
  1879   001036                     l1603:
  1880   001036  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1881   001038  D004               	goto	l1607
  1882   00103A  6C03               	negf	___awmod@divisor^0,c
  1883   00103C  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1884   00103E  B0D8               	btfsc	status,0,c
  1885   001040  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1886   001042                     l1607:
  1887   001042  5003               	movf	___awmod@divisor^0,w,c
  1888   001044  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1889   001046  B4D8               	btfsc	status,2,c
  1890   001048  D018               	goto	l1623
  1891   00104A  0E01               	movlw	1
  1892   00104C  6E05               	movwf	___awmod@counter^0,c
  1893   00104E  D004               	goto	l1613
  1894   001050                     l1611:
  1895   001050  90D8               	bcf	status,0,c
  1896   001052  3603               	rlcf	___awmod@divisor^0,f,c
  1897   001054  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1898   001056  2A05               	incf	___awmod@counter^0,f,c
  1899   001058                     l1613:
  1900   001058  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1901   00105A  D7FA               	goto	l1611
  1902   00105C                     u1200:
  1903   00105C  5003               	movf	___awmod@divisor^0,w,c
  1904   00105E  5C01               	subwf	___awmod@dividend^0,w,c
  1905   001060  5004               	movf	(___awmod@divisor+1)^0,w,c
  1906   001062  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1907   001064  A0D8               	btfss	status,0,c
  1908   001066  D004               	goto	l1619
  1909   001068  5003               	movf	___awmod@divisor^0,w,c
  1910   00106A  5E01               	subwf	___awmod@dividend^0,f,c
  1911   00106C  5004               	movf	(___awmod@divisor+1)^0,w,c
  1912   00106E  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1913   001070                     l1619:
  1914   001070  90D8               	bcf	status,0,c
  1915   001072  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1916   001074  3203               	rrcf	___awmod@divisor^0,f,c
  1917   001076  2E05               	decfsz	___awmod@counter^0,f,c
  1918   001078  D7F1               	goto	u1200
  1919   00107A                     l1623:
  1920   00107A  5006               	movf	___awmod@sign^0,w,c
  1921   00107C  B4D8               	btfsc	status,2,c
  1922   00107E  D004               	goto	l1627
  1923   001080  6C01               	negf	___awmod@dividend^0,c
  1924   001082  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1925   001084  B0D8               	btfsc	status,0,c
  1926   001086  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1927   001088                     l1627:
  1928   001088  C001  F001         	movff	___awmod@dividend,?___awmod
  1929   00108C  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1930   001090  0012               	return		;funcret
  1931   001092                     __end_of___awmod:
  1932                           	callstack 0
  1933                           
  1934 ;; *************** function ___awdiv *****************
  1935 ;; Defined at:
  1936 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awdiv.c"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;  dividend        2    0[COMRAM] int 
  1939 ;;  divisor         2    2[COMRAM] int 
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;  quotient        2    6[COMRAM] int 
  1942 ;;  sign            1    5[COMRAM] unsigned char 
  1943 ;;  counter         1    4[COMRAM] unsigned char 
  1944 ;; Return value:  Size  Location     Type
  1945 ;;                  2    0[COMRAM] int 
  1946 ;; Registers used:
  1947 ;;		wreg, status,2, status,0
  1948 ;; Tracked objects:
  1949 ;;		On entry : 0/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1953 ;;      Params:         4       0       0       0       0       0       0       0       0
  1954 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1955 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1956 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1957 ;;Total ram usage:        8 bytes
  1958 ;; Hardware stack levels used: 1
  1959 ;; Hardware stack levels required when called: 1
  1960 ;; This function calls:
  1961 ;;		Nothing
  1962 ;; This function is called by:
  1963 ;;		_mostrar_conteo
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967                           	psect	text8
  1968   000FA2                     __ptext8:
  1969                           	callstack 0
  1970   000FA2                     ___awdiv:
  1971                           	callstack 28
  1972                           
  1973                           ;incstack = 0
  1974   000FA2  6A06               	clrf	___awdiv@sign^0,c
  1975   000FA4  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1976   000FA6  D006               	goto	l1559
  1977   000FA8  6C03               	negf	___awdiv@divisor^0,c
  1978   000FAA  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1979   000FAC  B0D8               	btfsc	status,0,c
  1980   000FAE  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1981   000FB0  0E01               	movlw	1
  1982   000FB2  6E06               	movwf	___awdiv@sign^0,c
  1983   000FB4                     l1559:
  1984   000FB4  AE02               	btfss	(___awdiv@dividend+1)^0,7,c
  1985   000FB6  D006               	goto	l1565
  1986   000FB8  6C01               	negf	___awdiv@dividend^0,c
  1987   000FBA  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1988   000FBC  B0D8               	btfsc	status,0,c
  1989   000FBE  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1990   000FC0  0E01               	movlw	1
  1991   000FC2  1A06               	xorwf	___awdiv@sign^0,f,c
  1992   000FC4                     l1565:
  1993   000FC4  0E00               	movlw	0
  1994   000FC6  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1995   000FC8  0E00               	movlw	0
  1996   000FCA  6E07               	movwf	___awdiv@quotient^0,c
  1997   000FCC  5003               	movf	___awdiv@divisor^0,w,c
  1998   000FCE  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1999   000FD0  B4D8               	btfsc	status,2,c
  2000   000FD2  D01C               	goto	l1587
  2001   000FD4  0E01               	movlw	1
  2002   000FD6  6E05               	movwf	___awdiv@counter^0,c
  2003   000FD8  D004               	goto	l1573
  2004   000FDA                     l1571:
  2005   000FDA  90D8               	bcf	status,0,c
  2006   000FDC  3603               	rlcf	___awdiv@divisor^0,f,c
  2007   000FDE  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2008   000FE0  2A05               	incf	___awdiv@counter^0,f,c
  2009   000FE2                     l1573:
  2010   000FE2  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2011   000FE4  D7FA               	goto	l1571
  2012   000FE6                     u1140:
  2013   000FE6  90D8               	bcf	status,0,c
  2014   000FE8  3607               	rlcf	___awdiv@quotient^0,f,c
  2015   000FEA  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2016   000FEC  5003               	movf	___awdiv@divisor^0,w,c
  2017   000FEE  5C01               	subwf	___awdiv@dividend^0,w,c
  2018   000FF0  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2019   000FF2  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2020   000FF4  A0D8               	btfss	status,0,c
  2021   000FF6  D005               	goto	l1583
  2022   000FF8  5003               	movf	___awdiv@divisor^0,w,c
  2023   000FFA  5E01               	subwf	___awdiv@dividend^0,f,c
  2024   000FFC  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2025   000FFE  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2026   001000  8007               	bsf	___awdiv@quotient^0,0,c
  2027   001002                     l1583:
  2028   001002  90D8               	bcf	status,0,c
  2029   001004  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2030   001006  3203               	rrcf	___awdiv@divisor^0,f,c
  2031   001008  2E05               	decfsz	___awdiv@counter^0,f,c
  2032   00100A  D7ED               	goto	u1140
  2033   00100C                     l1587:
  2034   00100C  5006               	movf	___awdiv@sign^0,w,c
  2035   00100E  B4D8               	btfsc	status,2,c
  2036   001010  D004               	goto	l1591
  2037   001012  6C07               	negf	___awdiv@quotient^0,c
  2038   001014  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2039   001016  B0D8               	btfsc	status,0,c
  2040   001018  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2041   00101A                     l1591:
  2042   00101A  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2043   00101E  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2044   001022  0012               	return		;funcret
  2045   001024                     __end_of___awdiv:
  2046                           	callstack 0
  2047                           
  2048 ;; *************** function _lcd_animacion_bienvenida *****************
  2049 ;; Defined at:
  2050 ;;		line 236 in file "laboratorio_4.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;		None
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;  i               2   11[COMRAM] int 
  2055 ;;  i               2    9[COMRAM] int 
  2056 ;; Return value:  Size  Location     Type
  2057 ;;                  1    wreg      void 
  2058 ;; Registers used:
  2059 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2060 ;; Tracked objects:
  2061 ;;		On entry : 0/0
  2062 ;;		On exit  : 0/0
  2063 ;;		Unchanged: 0/0
  2064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2065 ;;      Params:         0       0       0       0       0       0       0       0       0
  2066 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2067 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2068 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2069 ;;Total ram usage:        5 bytes
  2070 ;; Hardware stack levels used: 1
  2071 ;; Hardware stack levels required when called: 3
  2072 ;; This function calls:
  2073 ;;		_Lcd_Clear
  2074 ;;		_Lcd_Set_Cursor
  2075 ;;		_Lcd_Shift_Left
  2076 ;;		_Lcd_Shift_Right
  2077 ;;		_Lcd_String
  2078 ;; This function is called by:
  2079 ;;		_main
  2080 ;; This function uses a non-reentrant model
  2081 ;;
  2082                           
  2083                           	psect	text9
  2084   000F1A                     __ptext9:
  2085                           	callstack 0
  2086   000F1A                     _lcd_animacion_bienvenida:
  2087                           	callstack 27
  2088                           
  2089                           ;laboratorio_4.c: 237: Lcd_Clear();
  2090                           
  2091                           ;incstack = 0
  2092   000F1A  EC3F  F009         	call	_Lcd_Clear	;wreg free
  2093                           
  2094                           ;laboratorio_4.c: 238: Lcd_Set_Cursor(1, 1);
  2095   000F1E  0E01               	movlw	1
  2096   000F20  6E04               	movwf	Lcd_Set_Cursor@column^0,c
  2097   000F22  0E01               	movlw	1
  2098   000F24  EC0C  F009         	call	_Lcd_Set_Cursor
  2099                           
  2100                           ;laboratorio_4.c: 239: Lcd_String(" Contador De Objetos ");
  2101   000F28  0E11               	movlw	low STR_10
  2102   000F2A  6E04               	movwf	Lcd_String@str^0,c
  2103   000F2C  ECF8  F008         	call	_Lcd_String	;wreg free
  2104                           
  2105                           ;laboratorio_4.c: 240: _delay((unsigned long)((300)*(1000000/4000.0)));
  2106   000F30  0E62               	movlw	98
  2107   000F32  6E09               	movwf	??_lcd_animacion_bienvenida^0,c
  2108   000F34  0E66               	movlw	102
  2109   000F36                     u1547:
  2110   000F36  2EE8               	decfsz	wreg,f,c
  2111   000F38  D7FE               	bra	u1547
  2112   000F3A  2E09               	decfsz	??_lcd_animacion_bienvenida^0,f,c
  2113   000F3C  D7FC               	bra	u1547
  2114                           
  2115                           ;laboratorio_4.c: 241: for (int i = 0; i < 8; i++) {
  2116   000F3E  0E00               	movlw	0
  2117   000F40  6E0B               	movwf	(lcd_animacion_bienvenida@i+1)^0,c
  2118   000F42  0E00               	movlw	0
  2119   000F44  6E0A               	movwf	lcd_animacion_bienvenida@i^0,c
  2120   000F46                     l1697:
  2121                           
  2122                           ;laboratorio_4.c: 242: Lcd_Shift_Left();
  2123   000F46  EC4B  F009         	call	_Lcd_Shift_Left	;wreg free
  2124                           
  2125                           ;laboratorio_4.c: 243: _delay((unsigned long)((500)*(1000000/4000.0)));
  2126   000F4A  0EA3               	movlw	163
  2127   000F4C  6E09               	movwf	??_lcd_animacion_bienvenida^0,c
  2128   000F4E  0E55               	movlw	85
  2129   000F50                     u1557:
  2130   000F50  2EE8               	decfsz	wreg,f,c
  2131   000F52  D7FE               	bra	u1557
  2132   000F54  2E09               	decfsz	??_lcd_animacion_bienvenida^0,f,c
  2133   000F56  D7FC               	bra	u1557
  2134   000F58  0000               	nop	
  2135   000F5A  4A0A               	infsnz	lcd_animacion_bienvenida@i^0,f,c
  2136   000F5C  2A0B               	incf	(lcd_animacion_bienvenida@i+1)^0,f,c
  2137   000F5E  BE0B               	btfsc	(lcd_animacion_bienvenida@i+1)^0,7,c
  2138   000F60  D7F2               	goto	l1697
  2139   000F62  500B               	movf	(lcd_animacion_bienvenida@i+1)^0,w,c
  2140   000F64  E104               	bnz	u1290
  2141   000F66  0E08               	movlw	8
  2142   000F68  5C0A               	subwf	lcd_animacion_bienvenida@i^0,w,c
  2143   000F6A  A0D8               	btfss	status,0,c
  2144   000F6C  D7EC               	goto	l1697
  2145   000F6E                     u1290:
  2146                           
  2147                           ;laboratorio_4.c: 244: };laboratorio_4.c: 245: for (int i = 0; i < 8; i++) {
  2148   000F6E  0E00               	movlw	0
  2149   000F70  6E0D               	movwf	(lcd_animacion_bienvenida@i_152+1)^0,c
  2150   000F72  0E00               	movlw	0
  2151   000F74  6E0C               	movwf	lcd_animacion_bienvenida@i_152^0,c
  2152   000F76                     l1711:
  2153                           
  2154                           ;laboratorio_4.c: 246: Lcd_Shift_Right();
  2155   000F76  EC47  F009         	call	_Lcd_Shift_Right	;wreg free
  2156                           
  2157                           ;laboratorio_4.c: 247: _delay((unsigned long)((500)*(1000000/4000.0)));
  2158   000F7A  0EA3               	movlw	163
  2159   000F7C  6E09               	movwf	??_lcd_animacion_bienvenida^0,c
  2160   000F7E  0E55               	movlw	85
  2161   000F80                     u1567:
  2162   000F80  2EE8               	decfsz	wreg,f,c
  2163   000F82  D7FE               	bra	u1567
  2164   000F84  2E09               	decfsz	??_lcd_animacion_bienvenida^0,f,c
  2165   000F86  D7FC               	bra	u1567
  2166   000F88  0000               	nop	
  2167   000F8A  4A0C               	infsnz	lcd_animacion_bienvenida@i_152^0,f,c
  2168   000F8C  2A0D               	incf	(lcd_animacion_bienvenida@i_152+1)^0,f,c
  2169   000F8E  BE0D               	btfsc	(lcd_animacion_bienvenida@i_152+1)^0,7,c
  2170   000F90  D7F2               	goto	l1711
  2171   000F92  500D               	movf	(lcd_animacion_bienvenida@i_152+1)^0,w,c
  2172   000F94  E105               	bnz	u1300
  2173   000F96  0E08               	movlw	8
  2174   000F98  5C0C               	subwf	lcd_animacion_bienvenida@i_152^0,w,c
  2175   000F9A  B0D8               	btfsc	status,0,c
  2176   000F9C  0012               	return	
  2177   000F9E  D7EB               	goto	l1711
  2178   000FA0                     u1300:
  2179   000FA0  0012               	return		;funcret
  2180   000FA2                     __end_of_lcd_animacion_bienvenida:
  2181                           	callstack 0
  2182                           
  2183 ;; *************** function _Lcd_String *****************
  2184 ;; Defined at:
  2185 ;;		line 46 in file "lcd.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;  str             1    3[COMRAM] PTR const unsigned char 
  2188 ;;		 -> STR_10(22), STR_9(15), STR_8(11), STR_7(10), 
  2189 ;;		 -> STR_6(12), STR_5(17), STR_4(15), STR_3(13), 
  2190 ;;		 -> STR_2(15), STR_1(15), 
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;		None
  2193 ;; Return value:  Size  Location     Type
  2194 ;;                  1    wreg      void 
  2195 ;; Registers used:
  2196 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2197 ;; Tracked objects:
  2198 ;;		On entry : 0/0
  2199 ;;		On exit  : 0/0
  2200 ;;		Unchanged: 0/0
  2201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2202 ;;      Params:         1       0       0       0       0       0       0       0       0
  2203 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2204 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2205 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2206 ;;Total ram usage:        1 bytes
  2207 ;; Hardware stack levels used: 1
  2208 ;; Hardware stack levels required when called: 2
  2209 ;; This function calls:
  2210 ;;		_Lcd_Char
  2211 ;; This function is called by:
  2212 ;;		_main
  2213 ;;		_mostrar_conteo
  2214 ;;		_mostrar_valor
  2215 ;;		_lcd_animacion_bienvenida
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219                           	psect	text10
  2220   0011F0                     __ptext10:
  2221                           	callstack 0
  2222   0011F0                     _Lcd_String:
  2223                           	callstack 27
  2224                           
  2225                           ;lcd.c: 47: while (*str) {
  2226                           
  2227                           ;incstack = 0
  2228   0011F0  D009               	goto	l1507
  2229   0011F2                     l1503:
  2230                           
  2231                           ;lcd.c: 48: Lcd_Char(*str++);
  2232   0011F2  C004  FFF6         	movff	Lcd_String@str,tblptrl
  2233   0011F6                     	if	1	;There is more than 1 active tblptr byte
  2234   0011F6  0E08               	movlw	high __smallconst
  2235   0011F8  6EF7               	movwf	tblptrh,c
  2236   0011FA                     	endif
  2237   0011FA                     	if	0	;tblptru may be non-zero
  2238   0011FA                     	endif
  2239   0011FA                     	if	0	;tblptru may be non-zero
  2240   0011FA                     	endif
  2241   0011FA  0008               	tblrd		*
  2242   0011FC  50F5               	movf	tablat,w,c
  2243   0011FE  EC5B  F006         	call	_Lcd_Char
  2244   001202  2A04               	incf	Lcd_String@str^0,f,c
  2245   001204                     l1507:
  2246   001204  C004  FFF6         	movff	Lcd_String@str,tblptrl
  2247   001208                     	if	1	;There is more than 1 active tblptr byte
  2248   001208  0E08               	movlw	high __smallconst
  2249   00120A  6EF7               	movwf	tblptrh,c
  2250   00120C                     	endif
  2251   00120C                     	if	0	;tblptru may be non-zero
  2252   00120C                     	endif
  2253   00120C                     	if	0	;tblptru may be non-zero
  2254   00120C                     	endif
  2255   00120C  0008               	tblrd		*
  2256   00120E  50F5               	movf	tablat,w,c
  2257   001210  0900               	iorlw	0
  2258   001212  B4D8               	btfsc	status,2,c
  2259   001214  0012               	return	
  2260   001216  D7ED               	goto	l1503
  2261   001218                     __end_of_Lcd_String:
  2262                           	callstack 0
  2263                           
  2264 ;; *************** function _Lcd_Char *****************
  2265 ;; Defined at:
  2266 ;;		line 31 in file "lcd.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;  data            1    wreg     unsigned char 
  2269 ;; Auto vars:     Size  Location     Type
  2270 ;;  data            1    2[COMRAM] unsigned char 
  2271 ;; Return value:  Size  Location     Type
  2272 ;;                  1    wreg      void 
  2273 ;; Registers used:
  2274 ;;		wreg, status,2, status,0
  2275 ;; Tracked objects:
  2276 ;;		On entry : 0/0
  2277 ;;		On exit  : 0/0
  2278 ;;		Unchanged: 0/0
  2279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2280 ;;      Params:         0       0       0       0       0       0       0       0       0
  2281 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2282 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2283 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2284 ;;Total ram usage:        3 bytes
  2285 ;; Hardware stack levels used: 1
  2286 ;; Hardware stack levels required when called: 1
  2287 ;; This function calls:
  2288 ;;		Nothing
  2289 ;; This function is called by:
  2290 ;;		_Lcd_String
  2291 ;;		_main
  2292 ;;		_mostrar_conteo
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           
  2296                           	psect	text11
  2297   000CB6                     __ptext11:
  2298                           	callstack 0
  2299   000CB6                     _Lcd_Char:
  2300                           	callstack 27
  2301                           
  2302                           ;incstack = 0
  2303                           ;Lcd_Char@data stored from wreg
  2304   000CB6  6E03               	movwf	Lcd_Char@data^0,c
  2305                           
  2306                           ;lcd.c: 32: LATD0 = 1;
  2307   000CB8  808C               	bsf	3980,0,c	;volatile
  2308                           
  2309                           ;lcd.c: 33: LATD2 = (data >> 4) & 1;
  2310   000CBA  C003  F001         	movff	Lcd_Char@data,??_Lcd_Char
  2311   000CBE  3A01               	swapf	??_Lcd_Char^0,f,c
  2312   000CC0  0E0F               	movlw	15
  2313   000CC2  1601               	andwf	??_Lcd_Char^0,f,c
  2314   000CC4  3001               	rrcf	??_Lcd_Char^0,w,c
  2315   000CC6  A0D8               	btfss	status,0,c
  2316   000CC8  D002               	goto	u200
  2317   000CCA  848C               	bsf	3980,2,c	;volatile
  2318   000CCC  D001               	goto	u215
  2319   000CCE                     u200:
  2320   000CCE  948C               	bcf	3980,2,c	;volatile
  2321   000CD0                     u215:
  2322                           
  2323                           ;lcd.c: 34: LATD3 = (data >> 5) & 1;
  2324   000CD0  C003  F001         	movff	Lcd_Char@data,??_Lcd_Char
  2325   000CD4  0E05               	movlw	5
  2326   000CD6  6E02               	movwf	(??_Lcd_Char+1)^0,c
  2327   000CD8                     u225:
  2328   000CD8  90D8               	bcf	status,0,c
  2329   000CDA  3201               	rrcf	??_Lcd_Char^0,f,c
  2330   000CDC  2E02               	decfsz	(??_Lcd_Char+1)^0,f,c
  2331   000CDE  D7FC               	goto	u225
  2332   000CE0  3001               	rrcf	??_Lcd_Char^0,w,c
  2333   000CE2  A0D8               	btfss	status,0,c
  2334   000CE4  D002               	goto	u230
  2335   000CE6  868C               	bsf	3980,3,c	;volatile
  2336   000CE8  D001               	goto	u245
  2337   000CEA                     u230:
  2338   000CEA  968C               	bcf	3980,3,c	;volatile
  2339   000CEC                     u245:
  2340                           
  2341                           ;lcd.c: 35: LATD4 = (data >> 6) & 1;
  2342   000CEC  C003  F001         	movff	Lcd_Char@data,??_Lcd_Char
  2343   000CF0  0E06               	movlw	6
  2344   000CF2  6E02               	movwf	(??_Lcd_Char+1)^0,c
  2345   000CF4                     u255:
  2346   000CF4  90D8               	bcf	status,0,c
  2347   000CF6  3201               	rrcf	??_Lcd_Char^0,f,c
  2348   000CF8  2E02               	decfsz	(??_Lcd_Char+1)^0,f,c
  2349   000CFA  D7FC               	goto	u255
  2350   000CFC  3001               	rrcf	??_Lcd_Char^0,w,c
  2351   000CFE  A0D8               	btfss	status,0,c
  2352   000D00  D002               	goto	u260
  2353   000D02  888C               	bsf	3980,4,c	;volatile
  2354   000D04  D001               	goto	u275
  2355   000D06                     u260:
  2356   000D06  988C               	bcf	3980,4,c	;volatile
  2357   000D08                     u275:
  2358                           
  2359                           ;lcd.c: 36: LATD5 = (data >> 7) & 1;
  2360   000D08  6A01               	clrf	??_Lcd_Char^0,c
  2361   000D0A  AE03               	btfss	Lcd_Char@data^0,7,c
  2362   000D0C  D001               	bra	u285
  2363   000D0E  2A01               	incf	??_Lcd_Char^0,f,c
  2364   000D10                     u285:
  2365   000D10  3001               	rrcf	??_Lcd_Char^0,w,c
  2366   000D12  A0D8               	btfss	status,0,c
  2367   000D14  D002               	goto	u290
  2368   000D16  8A8C               	bsf	3980,5,c	;volatile
  2369   000D18  D001               	goto	u305
  2370   000D1A                     u290:
  2371   000D1A  9A8C               	bcf	3980,5,c	;volatile
  2372   000D1C                     u305:
  2373                           
  2374                           ;lcd.c: 37: LATD1 = 1; _delay((unsigned long)((200)*(1000000/4000000.0))); LATD1 = 0;
  2375   000D1C  828C               	bsf	3980,1,c	;volatile
  2376   000D1E  0E10               	movlw	16
  2377   000D20                     u1577:
  2378   000D20  2EE8               	decfsz	wreg,f,c
  2379   000D22  D7FE               	bra	u1577
  2380   000D24  D000               	nop2	
  2381   000D26  928C               	bcf	3980,1,c	;volatile
  2382                           
  2383                           ;lcd.c: 39: LATD2 = data & 1;
  2384   000D28  A003               	btfss	Lcd_Char@data^0,0,c
  2385   000D2A  D002               	goto	u310
  2386   000D2C  848C               	bsf	3980,2,c	;volatile
  2387   000D2E  D001               	goto	u325
  2388   000D30                     u310:
  2389   000D30  948C               	bcf	3980,2,c	;volatile
  2390   000D32                     u325:
  2391                           
  2392                           ;lcd.c: 40: LATD3 = (data >> 1) & 1;
  2393   000D32  C003  F001         	movff	Lcd_Char@data,??_Lcd_Char
  2394   000D36  90D8               	bcf	status,0,c
  2395   000D38  3201               	rrcf	??_Lcd_Char^0,f,c
  2396   000D3A  3001               	rrcf	??_Lcd_Char^0,w,c
  2397   000D3C  A0D8               	btfss	status,0,c
  2398   000D3E  D002               	goto	u330
  2399   000D40  868C               	bsf	3980,3,c	;volatile
  2400   000D42  D001               	goto	u345
  2401   000D44                     u330:
  2402   000D44  968C               	bcf	3980,3,c	;volatile
  2403   000D46                     u345:
  2404                           
  2405                           ;lcd.c: 41: LATD4 = (data >> 2) & 1;
  2406   000D46  C003  F001         	movff	Lcd_Char@data,??_Lcd_Char
  2407   000D4A  90D8               	bcf	status,0,c
  2408   000D4C  3201               	rrcf	??_Lcd_Char^0,f,c
  2409   000D4E  90D8               	bcf	status,0,c
  2410   000D50  3201               	rrcf	??_Lcd_Char^0,f,c
  2411   000D52  3001               	rrcf	??_Lcd_Char^0,w,c
  2412   000D54  A0D8               	btfss	status,0,c
  2413   000D56  D002               	goto	u350
  2414   000D58  888C               	bsf	3980,4,c	;volatile
  2415   000D5A  D001               	goto	u365
  2416   000D5C                     u350:
  2417   000D5C  988C               	bcf	3980,4,c	;volatile
  2418   000D5E                     u365:
  2419                           
  2420                           ;lcd.c: 42: LATD5 = (data >> 3) & 1;
  2421   000D5E  C003  F001         	movff	Lcd_Char@data,??_Lcd_Char
  2422   000D62  90D8               	bcf	status,0,c
  2423   000D64  3201               	rrcf	??_Lcd_Char^0,f,c
  2424   000D66  90D8               	bcf	status,0,c
  2425   000D68  3201               	rrcf	??_Lcd_Char^0,f,c
  2426   000D6A  90D8               	bcf	status,0,c
  2427   000D6C  3201               	rrcf	??_Lcd_Char^0,f,c
  2428   000D6E  3001               	rrcf	??_Lcd_Char^0,w,c
  2429   000D70  A0D8               	btfss	status,0,c
  2430   000D72  D002               	goto	u370
  2431   000D74  8A8C               	bsf	3980,5,c	;volatile
  2432   000D76  D001               	goto	u385
  2433   000D78                     u370:
  2434   000D78  9A8C               	bcf	3980,5,c	;volatile
  2435   000D7A                     u385:
  2436                           
  2437                           ;lcd.c: 43: LATD1 = 1; _delay((unsigned long)((200)*(1000000/4000000.0))); LATD1 = 0;
  2438   000D7A  828C               	bsf	3980,1,c	;volatile
  2439   000D7C  0E10               	movlw	16
  2440   000D7E                     u1587:
  2441   000D7E  2EE8               	decfsz	wreg,f,c
  2442   000D80  D7FE               	bra	u1587
  2443   000D82  D000               	nop2	
  2444   000D84  928C               	bcf	3980,1,c	;volatile
  2445   000D86  0012               	return		;funcret
  2446   000D88                     __end_of_Lcd_Char:
  2447                           	callstack 0
  2448                           
  2449 ;; *************** function _Lcd_Shift_Right *****************
  2450 ;; Defined at:
  2451 ;;		line 66 in file "lcd.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;		None
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;		None
  2456 ;; Return value:  Size  Location     Type
  2457 ;;                  1    wreg      void 
  2458 ;; Registers used:
  2459 ;;		wreg, status,2, status,0, cstack
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2465 ;;      Params:         0       0       0       0       0       0       0       0       0
  2466 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2467 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2468 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2469 ;;Total ram usage:        0 bytes
  2470 ;; Hardware stack levels used: 1
  2471 ;; Hardware stack levels required when called: 2
  2472 ;; This function calls:
  2473 ;;		_Lcd_Cmd
  2474 ;; This function is called by:
  2475 ;;		_lcd_animacion_bienvenida
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           	psect	text12
  2480   00128E                     __ptext12:
  2481                           	callstack 0
  2482   00128E                     _Lcd_Shift_Right:
  2483                           	callstack 27
  2484                           
  2485                           ;lcd.c: 67: Lcd_Cmd(0x1C);
  2486                           
  2487                           ;incstack = 0
  2488   00128E  0E1C               	movlw	28
  2489   001290  ECC4  F006         	call	_Lcd_Cmd
  2490   001294  0012               	return		;funcret
  2491   001296                     __end_of_Lcd_Shift_Right:
  2492                           	callstack 0
  2493                           
  2494 ;; *************** function _Lcd_Shift_Left *****************
  2495 ;; Defined at:
  2496 ;;		line 62 in file "lcd.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;		None
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;		None
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  1    wreg      void 
  2503 ;; Registers used:
  2504 ;;		wreg, status,2, status,0, cstack
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2510 ;;      Params:         0       0       0       0       0       0       0       0       0
  2511 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2512 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2513 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2514 ;;Total ram usage:        0 bytes
  2515 ;; Hardware stack levels used: 1
  2516 ;; Hardware stack levels required when called: 2
  2517 ;; This function calls:
  2518 ;;		_Lcd_Cmd
  2519 ;; This function is called by:
  2520 ;;		_lcd_animacion_bienvenida
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           	psect	text13
  2525   001296                     __ptext13:
  2526                           	callstack 0
  2527   001296                     _Lcd_Shift_Left:
  2528                           	callstack 27
  2529                           
  2530                           ;lcd.c: 63: Lcd_Cmd(0x18);
  2531                           
  2532                           ;incstack = 0
  2533   001296  0E18               	movlw	24
  2534   001298  ECC4  F006         	call	_Lcd_Cmd
  2535   00129C  0012               	return		;funcret
  2536   00129E                     __end_of_Lcd_Shift_Left:
  2537                           	callstack 0
  2538                           
  2539 ;; *************** function _Lcd_Set_Cursor *****************
  2540 ;; Defined at:
  2541 ;;		line 52 in file "lcd.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;  row             1    wreg     unsigned char 
  2544 ;;  column          1    3[COMRAM] unsigned char 
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;  row             1    4[COMRAM] unsigned char 
  2547 ;;  pos             1    7[COMRAM] unsigned char 
  2548 ;; Return value:  Size  Location     Type
  2549 ;;                  1    wreg      void 
  2550 ;; Registers used:
  2551 ;;		wreg, status,2, status,0, cstack
  2552 ;; Tracked objects:
  2553 ;;		On entry : 0/0
  2554 ;;		On exit  : 0/0
  2555 ;;		Unchanged: 0/0
  2556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2557 ;;      Params:         1       0       0       0       0       0       0       0       0
  2558 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2559 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2560 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2561 ;;Total ram usage:        5 bytes
  2562 ;; Hardware stack levels used: 1
  2563 ;; Hardware stack levels required when called: 2
  2564 ;; This function calls:
  2565 ;;		_Lcd_Cmd
  2566 ;; This function is called by:
  2567 ;;		_main
  2568 ;;		_mostrar_conteo
  2569 ;;		_mostrar_valor
  2570 ;;		_lcd_animacion_bienvenida
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           	psect	text14
  2575   001218                     __ptext14:
  2576                           	callstack 0
  2577   001218                     _Lcd_Set_Cursor:
  2578                           	callstack 27
  2579                           
  2580                           ;incstack = 0
  2581                           ;Lcd_Set_Cursor@row stored from wreg
  2582   001218  6E05               	movwf	Lcd_Set_Cursor@row^0,c
  2583                           
  2584                           ;lcd.c: 53: char pos = (row == 1) ? 0x80 + (column - 1) : 0xC0 + (column - 1);
  2585   00121A  0405               	decf	Lcd_Set_Cursor@row^0,w,c
  2586   00121C  B4D8               	btfsc	status,2,c
  2587   00121E  D002               	goto	l1513
  2588   001220  0EBF               	movlw	191
  2589   001222  D001               	goto	L1
  2590   001224                     l1513:
  2591   001224  0E7F               	movlw	127
  2592   001226                     L1:
  2593   001226  2404               	addwf	Lcd_Set_Cursor@column^0,w,c
  2594   001228  6E06               	movwf	_Lcd_Set_Cursor$101^0,c
  2595   00122A  6A07               	clrf	(_Lcd_Set_Cursor$101+1)^0,c
  2596   00122C  0E00               	movlw	0
  2597   00122E  2207               	addwfc	(_Lcd_Set_Cursor$101+1)^0,f,c
  2598   001230  C006  F008         	movff	_Lcd_Set_Cursor$101,Lcd_Set_Cursor@pos
  2599                           
  2600                           ;lcd.c: 54: Lcd_Cmd(pos);
  2601   001234  5008               	movf	Lcd_Set_Cursor@pos^0,w,c
  2602   001236  ECC4  F006         	call	_Lcd_Cmd
  2603   00123A  0012               	return		;funcret
  2604   00123C                     __end_of_Lcd_Set_Cursor:
  2605                           	callstack 0
  2606                           
  2607 ;; *************** function _Lcd_Clear *****************
  2608 ;; Defined at:
  2609 ;;		line 57 in file "lcd.c"
  2610 ;; Parameters:    Size  Location     Type
  2611 ;;		None
  2612 ;; Auto vars:     Size  Location     Type
  2613 ;;		None
  2614 ;; Return value:  Size  Location     Type
  2615 ;;                  1    wreg      void 
  2616 ;; Registers used:
  2617 ;;		wreg, status,2, status,0, cstack
  2618 ;; Tracked objects:
  2619 ;;		On entry : 0/0
  2620 ;;		On exit  : 0/0
  2621 ;;		Unchanged: 0/0
  2622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2623 ;;      Params:         0       0       0       0       0       0       0       0       0
  2624 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2625 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2626 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2627 ;;Total ram usage:        0 bytes
  2628 ;; Hardware stack levels used: 1
  2629 ;; Hardware stack levels required when called: 2
  2630 ;; This function calls:
  2631 ;;		_Lcd_Cmd
  2632 ;; This function is called by:
  2633 ;;		_main
  2634 ;;		_mostrar_conteo
  2635 ;;		_mostrar_valor
  2636 ;;		_lcd_animacion_bienvenida
  2637 ;; This function uses a non-reentrant model
  2638 ;;
  2639                           
  2640                           	psect	text15
  2641   00127E                     __ptext15:
  2642                           	callstack 0
  2643   00127E                     _Lcd_Clear:
  2644                           	callstack 27
  2645                           
  2646                           ;lcd.c: 58: Lcd_Cmd(0x01);
  2647                           
  2648                           ;incstack = 0
  2649   00127E  0E01               	movlw	1
  2650   001280  ECC4  F006         	call	_Lcd_Cmd
  2651                           
  2652                           ;lcd.c: 59: _delay((unsigned long)((2)*(1000000/4000.0)));
  2653   001284  0EA6               	movlw	166
  2654   001286                     u1597:
  2655   001286  2EE8               	decfsz	wreg,f,c
  2656   001288  D7FE               	bra	u1597
  2657   00128A  D000               	nop2	
  2658   00128C  0012               	return		;funcret
  2659   00128E                     __end_of_Lcd_Clear:
  2660                           	callstack 0
  2661                           
  2662 ;; *************** function _Teclado4x4 *****************
  2663 ;; Defined at:
  2664 ;;		line 176 in file "laboratorio_4.c"
  2665 ;; Parameters:    Size  Location     Type
  2666 ;;		None
  2667 ;; Auto vars:     Size  Location     Type
  2668 ;;  col             2    4[COMRAM] int 
  2669 ;;  fila            2    2[COMRAM] int 
  2670 ;; Return value:  Size  Location     Type
  2671 ;;                  1    wreg      unsigned char 
  2672 ;; Registers used:
  2673 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2674 ;; Tracked objects:
  2675 ;;		On entry : 0/0
  2676 ;;		On exit  : 0/0
  2677 ;;		Unchanged: 0/0
  2678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2679 ;;      Params:         0       0       0       0       0       0       0       0       0
  2680 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2681 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2682 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2683 ;;Total ram usage:        6 bytes
  2684 ;; Hardware stack levels used: 1
  2685 ;; Hardware stack levels required when called: 1
  2686 ;; This function calls:
  2687 ;;		Nothing
  2688 ;; This function is called by:
  2689 ;;		_main
  2690 ;; This function uses a non-reentrant model
  2691 ;;
  2692                           
  2693                           	psect	text16
  2694   000E5A                     __ptext16:
  2695                           	callstack 0
  2696   000E5A                     _Teclado4x4:
  2697                           	callstack 29
  2698                           
  2699                           ;laboratorio_4.c: 177: for (int fila = 0; fila < 4; fila++) {
  2700                           
  2701                           ;incstack = 0
  2702   000E5A  0E00               	movlw	0
  2703   000E5C  6E04               	movwf	(Teclado4x4@fila+1)^0,c
  2704   000E5E  0E00               	movlw	0
  2705   000E60  6E03               	movwf	Teclado4x4@fila^0,c
  2706   000E62                     l1211:
  2707   000E62  BE04               	btfsc	(Teclado4x4@fila+1)^0,7,c
  2708   000E64  D006               	goto	l1215
  2709   000E66  5004               	movf	(Teclado4x4@fila+1)^0,w,c
  2710   000E68  E156               	bnz	l1243
  2711   000E6A  0E04               	movlw	4
  2712   000E6C  5C03               	subwf	Teclado4x4@fila^0,w,c
  2713   000E6E  B0D8               	btfsc	status,0,c
  2714   000E70  D052               	goto	l1243
  2715   000E72                     l1215:
  2716                           
  2717                           ;laboratorio_4.c: 178: LATB = ~(1 << fila) & 0x0F;
  2718   000E72  C003  F001         	movff	Teclado4x4@fila,??_Teclado4x4
  2719   000E76  0E01               	movlw	1
  2720   000E78  6E02               	movwf	(??_Teclado4x4+1)^0,c
  2721   000E7A  2A01               	incf	??_Teclado4x4^0,f,c
  2722   000E7C  D002               	goto	u624
  2723   000E7E                     u625:
  2724   000E7E  90D8               	bcf	status,0,c
  2725   000E80  3602               	rlcf	(??_Teclado4x4+1)^0,f,c
  2726   000E82                     u624:
  2727   000E82  2E01               	decfsz	??_Teclado4x4^0,f,c
  2728   000E84  D7FC               	goto	u625
  2729   000E86  5002               	movf	(??_Teclado4x4+1)^0,w,c
  2730   000E88  0AFF               	xorlw	255
  2731   000E8A  0B0F               	andlw	15
  2732   000E8C  6E8A               	movwf	138,c	;volatile
  2733                           
  2734                           ;laboratorio_4.c: 179: _delay((unsigned long)((5)*(1000000/4000.0)));
  2735   000E8E  0EFA               	movlw	250
  2736   000E90                     u1607:
  2737   000E90  D000               	nop2	
  2738   000E92  2EE8               	decfsz	wreg,f,c
  2739   000E94  D7FD               	bra	u1607
  2740                           
  2741                           ;laboratorio_4.c: 180: for (int col = 0; col < 4; col++) {
  2742   000E96  0E00               	movlw	0
  2743   000E98  6E06               	movwf	(Teclado4x4@col+1)^0,c
  2744   000E9A  0E00               	movlw	0
  2745   000E9C  6E05               	movwf	Teclado4x4@col^0,c
  2746   000E9E                     l1225:
  2747                           
  2748                           ;laboratorio_4.c: 181: if (!(PORTB & (1 << (col + 4)))) {
  2749   000E9E  C005  F001         	movff	Teclado4x4@col,??_Teclado4x4
  2750   000EA2  0E04               	movlw	4
  2751   000EA4  2601               	addwf	??_Teclado4x4^0,f,c
  2752   000EA6  0E01               	movlw	1
  2753   000EA8  6E02               	movwf	(??_Teclado4x4+1)^0,c
  2754   000EAA  2A01               	incf	??_Teclado4x4^0,f,c
  2755   000EAC  D002               	goto	u634
  2756   000EAE                     u635:
  2757   000EAE  90D8               	bcf	status,0,c
  2758   000EB0  3602               	rlcf	(??_Teclado4x4+1)^0,f,c
  2759   000EB2                     u634:
  2760   000EB2  2E01               	decfsz	??_Teclado4x4^0,f,c
  2761   000EB4  D7FC               	goto	u635
  2762   000EB6  5002               	movf	(??_Teclado4x4+1)^0,w,c
  2763   000EB8  1481               	andwf	129,w,c	;volatile
  2764   000EBA  0900               	iorlw	0
  2765   000EBC  A4D8               	btfss	status,2,c
  2766   000EBE  D01E               	goto	l1235
  2767   000EC0                     u640:
  2768   000EC0  C005  F001         	movff	Teclado4x4@col,??_Teclado4x4
  2769   000EC4  0E04               	movlw	4
  2770   000EC6  2601               	addwf	??_Teclado4x4^0,f,c
  2771   000EC8  0E01               	movlw	1
  2772   000ECA  6E02               	movwf	(??_Teclado4x4+1)^0,c
  2773   000ECC  2A01               	incf	??_Teclado4x4^0,f,c
  2774   000ECE  D002               	goto	u654
  2775   000ED0                     u655:
  2776   000ED0  90D8               	bcf	status,0,c
  2777   000ED2  3602               	rlcf	(??_Teclado4x4+1)^0,f,c
  2778   000ED4                     u654:
  2779   000ED4  2E01               	decfsz	??_Teclado4x4^0,f,c
  2780   000ED6  D7FC               	goto	u655
  2781   000ED8  5002               	movf	(??_Teclado4x4+1)^0,w,c
  2782   000EDA  1481               	andwf	129,w,c	;volatile
  2783   000EDC  0900               	iorlw	0
  2784   000EDE  B4D8               	btfsc	status,2,c
  2785   000EE0  D7EF               	goto	u640
  2786                           
  2787                           ;laboratorio_4.c: 183: return teclas[fila][col];
  2788   000EE2  5003               	movf	Teclado4x4@fila^0,w,c
  2789   000EE4  0D04               	mullw	4
  2790   000EE6  50F3               	movf	243,w,c
  2791   000EE8  0F01               	addlw	low _teclas
  2792   000EEA  2405               	addwf	Teclado4x4@col^0,w,c
  2793   000EEC  6E01               	movwf	??_Teclado4x4^0,c
  2794   000EEE  C001  FFF6         	movff	??_Teclado4x4,tblptrl
  2795   000EF2                     	if	1	;There is more than 1 active tblptr byte
  2796   000EF2  0E08               	movlw	high __smallconst
  2797   000EF4  6EF7               	movwf	tblptrh,c
  2798   000EF6                     	endif
  2799   000EF6                     	if	0	;tblptru may be non-zero
  2800   000EF6                     	endif
  2801   000EF6                     	if	0	;tblptru may be non-zero
  2802   000EF6                     	endif
  2803   000EF6  0008               	tblrd		*
  2804   000EF8  50F5               	movf	tablat,w,c
  2805   000EFA  0012               	return	
  2806   000EFC                     l1235:
  2807   000EFC  4A05               	infsnz	Teclado4x4@col^0,f,c
  2808   000EFE  2A06               	incf	(Teclado4x4@col+1)^0,f,c
  2809   000F00  BE06               	btfsc	(Teclado4x4@col+1)^0,7,c
  2810   000F02  D7CD               	goto	l1225
  2811   000F04  5006               	movf	(Teclado4x4@col+1)^0,w,c
  2812   000F06  E104               	bnz	u670
  2813   000F08  0E04               	movlw	4
  2814   000F0A  5C05               	subwf	Teclado4x4@col^0,w,c
  2815   000F0C  A0D8               	btfss	status,0,c
  2816   000F0E  D7C7               	goto	l1225
  2817   000F10                     u670:
  2818   000F10  4A03               	infsnz	Teclado4x4@fila^0,f,c
  2819   000F12  2A04               	incf	(Teclado4x4@fila+1)^0,f,c
  2820   000F14  D7A6               	goto	l1211
  2821   000F16                     l1243:
  2822                           
  2823                           ;laboratorio_4.c: 184: };laboratorio_4.c: 185: };laboratorio_4.c: 186: };laboratorio_4.c
      +                          : 187: return 0;
  2824   000F16  0E00               	movlw	0
  2825   000F18  0012               	return		;funcret
  2826   000F1A                     __end_of_Teclado4x4:
  2827                           	callstack 0
  2828                           
  2829 ;; *************** function _Lcd_Init *****************
  2830 ;; Defined at:
  2831 ;;		line 3 in file "lcd.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;		None
  2834 ;; Auto vars:     Size  Location     Type
  2835 ;;		None
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  1    wreg      void 
  2838 ;; Registers used:
  2839 ;;		wreg, status,2, status,0, cstack
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2845 ;;      Params:         0       0       0       0       0       0       0       0       0
  2846 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2847 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2848 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2849 ;;Total ram usage:        1 bytes
  2850 ;; Hardware stack levels used: 1
  2851 ;; Hardware stack levels required when called: 2
  2852 ;; This function calls:
  2853 ;;		_Lcd_Cmd
  2854 ;; This function is called by:
  2855 ;;		_main
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859                           	psect	text17
  2860   001188                     __ptext17:
  2861                           	callstack 0
  2862   001188                     _Lcd_Init:
  2863                           	callstack 28
  2864                           
  2865                           ;lcd.c: 4: TRISD = 0x00;
  2866                           
  2867                           ;incstack = 0
  2868   001188  6A95               	clrf	149,c	;volatile
  2869                           
  2870                           ;lcd.c: 5: LATD = 0x00;
  2871   00118A  6A8C               	clrf	140,c	;volatile
  2872                           
  2873                           ;lcd.c: 7: _delay((unsigned long)((20)*(1000000/4000.0)));
  2874   00118C  0E07               	movlw	7
  2875   00118E  6E04               	movwf	??_Lcd_Init^0,c
  2876   001190  0E7D               	movlw	125
  2877   001192                     u1617:
  2878   001192  2EE8               	decfsz	wreg,f,c
  2879   001194  D7FE               	bra	u1617
  2880   001196  2E04               	decfsz	??_Lcd_Init^0,f,c
  2881   001198  D7FC               	bra	u1617
  2882   00119A  0000               	nop	
  2883                           
  2884                           ;lcd.c: 8: Lcd_Cmd(0x02);
  2885   00119C  0E02               	movlw	2
  2886   00119E  ECC4  F006         	call	_Lcd_Cmd
  2887                           
  2888                           ;lcd.c: 9: Lcd_Cmd(0x28);
  2889   0011A2  0E28               	movlw	40
  2890   0011A4  ECC4  F006         	call	_Lcd_Cmd
  2891                           
  2892                           ;lcd.c: 10: Lcd_Cmd(0x0C);
  2893   0011A8  0E0C               	movlw	12
  2894   0011AA  ECC4  F006         	call	_Lcd_Cmd
  2895                           
  2896                           ;lcd.c: 11: Lcd_Cmd(0x06);
  2897   0011AE  0E06               	movlw	6
  2898   0011B0  ECC4  F006         	call	_Lcd_Cmd
  2899                           
  2900                           ;lcd.c: 12: Lcd_Cmd(0x01);
  2901   0011B4  0E01               	movlw	1
  2902   0011B6  ECC4  F006         	call	_Lcd_Cmd
  2903                           
  2904                           ;lcd.c: 13: _delay((unsigned long)((2)*(1000000/4000.0)));
  2905   0011BA  0EA6               	movlw	166
  2906   0011BC                     u1627:
  2907   0011BC  2EE8               	decfsz	wreg,f,c
  2908   0011BE  D7FE               	bra	u1627
  2909   0011C0  D000               	nop2	
  2910   0011C2  0012               	return		;funcret
  2911   0011C4                     __end_of_Lcd_Init:
  2912                           	callstack 0
  2913                           
  2914 ;; *************** function _Lcd_Cmd *****************
  2915 ;; Defined at:
  2916 ;;		line 16 in file "lcd.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;  cmd             1    wreg     unsigned char 
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;  cmd             1    2[COMRAM] unsigned char 
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      void 
  2923 ;; Registers used:
  2924 ;;		wreg, status,2, status,0
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2930 ;;      Params:         0       0       0       0       0       0       0       0       0
  2931 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2932 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2933 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2934 ;;Total ram usage:        3 bytes
  2935 ;; Hardware stack levels used: 1
  2936 ;; Hardware stack levels required when called: 1
  2937 ;; This function calls:
  2938 ;;		Nothing
  2939 ;; This function is called by:
  2940 ;;		_Lcd_Init
  2941 ;;		_Lcd_Set_Cursor
  2942 ;;		_Lcd_Clear
  2943 ;;		_Lcd_Shift_Left
  2944 ;;		_Lcd_Shift_Right
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           	psect	text18
  2949   000D88                     __ptext18:
  2950                           	callstack 0
  2951   000D88                     _Lcd_Cmd:
  2952                           	callstack 27
  2953                           
  2954                           ;incstack = 0
  2955                           ;Lcd_Cmd@cmd stored from wreg
  2956   000D88  6E03               	movwf	Lcd_Cmd@cmd^0,c
  2957                           
  2958                           ;lcd.c: 17: LATD0 = 0;
  2959   000D8A  908C               	bcf	3980,0,c	;volatile
  2960                           
  2961                           ;lcd.c: 18: LATD2 = (cmd >> 4) & 1;
  2962   000D8C  C003  F001         	movff	Lcd_Cmd@cmd,??_Lcd_Cmd
  2963   000D90  3A01               	swapf	??_Lcd_Cmd^0,f,c
  2964   000D92  0E0F               	movlw	15
  2965   000D94  1601               	andwf	??_Lcd_Cmd^0,f,c
  2966   000D96  3001               	rrcf	??_Lcd_Cmd^0,w,c
  2967   000D98  A0D8               	btfss	status,0,c
  2968   000D9A  D002               	goto	u900
  2969   000D9C  848C               	bsf	3980,2,c	;volatile
  2970   000D9E  D001               	goto	u915
  2971   000DA0                     u900:
  2972   000DA0  948C               	bcf	3980,2,c	;volatile
  2973   000DA2                     u915:
  2974                           
  2975                           ;lcd.c: 19: LATD3 = (cmd >> 5) & 1;
  2976   000DA2  C003  F001         	movff	Lcd_Cmd@cmd,??_Lcd_Cmd
  2977   000DA6  0E05               	movlw	5
  2978   000DA8  6E02               	movwf	(??_Lcd_Cmd+1)^0,c
  2979   000DAA                     u925:
  2980   000DAA  90D8               	bcf	status,0,c
  2981   000DAC  3201               	rrcf	??_Lcd_Cmd^0,f,c
  2982   000DAE  2E02               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  2983   000DB0  D7FC               	goto	u925
  2984   000DB2  3001               	rrcf	??_Lcd_Cmd^0,w,c
  2985   000DB4  A0D8               	btfss	status,0,c
  2986   000DB6  D002               	goto	u930
  2987   000DB8  868C               	bsf	3980,3,c	;volatile
  2988   000DBA  D001               	goto	u945
  2989   000DBC                     u930:
  2990   000DBC  968C               	bcf	3980,3,c	;volatile
  2991   000DBE                     u945:
  2992                           
  2993                           ;lcd.c: 20: LATD4 = (cmd >> 6) & 1;
  2994   000DBE  C003  F001         	movff	Lcd_Cmd@cmd,??_Lcd_Cmd
  2995   000DC2  0E06               	movlw	6
  2996   000DC4  6E02               	movwf	(??_Lcd_Cmd+1)^0,c
  2997   000DC6                     u955:
  2998   000DC6  90D8               	bcf	status,0,c
  2999   000DC8  3201               	rrcf	??_Lcd_Cmd^0,f,c
  3000   000DCA  2E02               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  3001   000DCC  D7FC               	goto	u955
  3002   000DCE  3001               	rrcf	??_Lcd_Cmd^0,w,c
  3003   000DD0  A0D8               	btfss	status,0,c
  3004   000DD2  D002               	goto	u960
  3005   000DD4  888C               	bsf	3980,4,c	;volatile
  3006   000DD6  D001               	goto	u975
  3007   000DD8                     u960:
  3008   000DD8  988C               	bcf	3980,4,c	;volatile
  3009   000DDA                     u975:
  3010                           
  3011                           ;lcd.c: 21: LATD5 = (cmd >> 7) & 1;
  3012   000DDA  6A01               	clrf	??_Lcd_Cmd^0,c
  3013   000DDC  AE03               	btfss	Lcd_Cmd@cmd^0,7,c
  3014   000DDE  D001               	bra	u985
  3015   000DE0  2A01               	incf	??_Lcd_Cmd^0,f,c
  3016   000DE2                     u985:
  3017   000DE2  3001               	rrcf	??_Lcd_Cmd^0,w,c
  3018   000DE4  A0D8               	btfss	status,0,c
  3019   000DE6  D002               	goto	u990
  3020   000DE8  8A8C               	bsf	3980,5,c	;volatile
  3021   000DEA  D001               	goto	u1005
  3022   000DEC                     u990:
  3023   000DEC  9A8C               	bcf	3980,5,c	;volatile
  3024   000DEE                     u1005:
  3025                           
  3026                           ;lcd.c: 22: LATD1 = 1; _delay((unsigned long)((2)*(1000000/4000.0))); LATD1 = 0;
  3027   000DEE  828C               	bsf	3980,1,c	;volatile
  3028   000DF0  0EA6               	movlw	166
  3029   000DF2                     u1637:
  3030   000DF2  2EE8               	decfsz	wreg,f,c
  3031   000DF4  D7FE               	bra	u1637
  3032   000DF6  D000               	nop2	
  3033   000DF8  928C               	bcf	3980,1,c	;volatile
  3034                           
  3035                           ;lcd.c: 24: LATD2 = cmd & 1;
  3036   000DFA  A003               	btfss	Lcd_Cmd@cmd^0,0,c
  3037   000DFC  D002               	goto	u1010
  3038   000DFE  848C               	bsf	3980,2,c	;volatile
  3039   000E00  D001               	goto	u1025
  3040   000E02                     u1010:
  3041   000E02  948C               	bcf	3980,2,c	;volatile
  3042   000E04                     u1025:
  3043                           
  3044                           ;lcd.c: 25: LATD3 = (cmd >> 1) & 1;
  3045   000E04  C003  F001         	movff	Lcd_Cmd@cmd,??_Lcd_Cmd
  3046   000E08  90D8               	bcf	status,0,c
  3047   000E0A  3201               	rrcf	??_Lcd_Cmd^0,f,c
  3048   000E0C  3001               	rrcf	??_Lcd_Cmd^0,w,c
  3049   000E0E  A0D8               	btfss	status,0,c
  3050   000E10  D002               	goto	u1030
  3051   000E12  868C               	bsf	3980,3,c	;volatile
  3052   000E14  D001               	goto	u1045
  3053   000E16                     u1030:
  3054   000E16  968C               	bcf	3980,3,c	;volatile
  3055   000E18                     u1045:
  3056                           
  3057                           ;lcd.c: 26: LATD4 = (cmd >> 2) & 1;
  3058   000E18  C003  F001         	movff	Lcd_Cmd@cmd,??_Lcd_Cmd
  3059   000E1C  90D8               	bcf	status,0,c
  3060   000E1E  3201               	rrcf	??_Lcd_Cmd^0,f,c
  3061   000E20  90D8               	bcf	status,0,c
  3062   000E22  3201               	rrcf	??_Lcd_Cmd^0,f,c
  3063   000E24  3001               	rrcf	??_Lcd_Cmd^0,w,c
  3064   000E26  A0D8               	btfss	status,0,c
  3065   000E28  D002               	goto	u1050
  3066   000E2A  888C               	bsf	3980,4,c	;volatile
  3067   000E2C  D001               	goto	u1065
  3068   000E2E                     u1050:
  3069   000E2E  988C               	bcf	3980,4,c	;volatile
  3070   000E30                     u1065:
  3071                           
  3072                           ;lcd.c: 27: LATD5 = (cmd >> 3) & 1;
  3073   000E30  C003  F001         	movff	Lcd_Cmd@cmd,??_Lcd_Cmd
  3074   000E34  90D8               	bcf	status,0,c
  3075   000E36  3201               	rrcf	??_Lcd_Cmd^0,f,c
  3076   000E38  90D8               	bcf	status,0,c
  3077   000E3A  3201               	rrcf	??_Lcd_Cmd^0,f,c
  3078   000E3C  90D8               	bcf	status,0,c
  3079   000E3E  3201               	rrcf	??_Lcd_Cmd^0,f,c
  3080   000E40  3001               	rrcf	??_Lcd_Cmd^0,w,c
  3081   000E42  A0D8               	btfss	status,0,c
  3082   000E44  D002               	goto	u1070
  3083   000E46  8A8C               	bsf	3980,5,c	;volatile
  3084   000E48  D001               	goto	u1085
  3085   000E4A                     u1070:
  3086   000E4A  9A8C               	bcf	3980,5,c	;volatile
  3087   000E4C                     u1085:
  3088                           
  3089                           ;lcd.c: 28: LATD1 = 1; _delay((unsigned long)((2)*(1000000/4000.0))); LATD1 = 0;
  3090   000E4C  828C               	bsf	3980,1,c	;volatile
  3091   000E4E  0EA6               	movlw	166
  3092   000E50                     u1647:
  3093   000E50  2EE8               	decfsz	wreg,f,c
  3094   000E52  D7FE               	bra	u1647
  3095   000E54  D000               	nop2	
  3096   000E56  928C               	bcf	3980,1,c	;volatile
  3097   000E58  0012               	return		;funcret
  3098   000E5A                     __end_of_Lcd_Cmd:
  3099                           	callstack 0
  3100                           
  3101 ;; *************** function _ISR *****************
  3102 ;; Defined at:
  3103 ;;		line 224 in file "laboratorio_4.c"
  3104 ;; Parameters:    Size  Location     Type
  3105 ;;		None
  3106 ;; Auto vars:     Size  Location     Type
  3107 ;;		None
  3108 ;; Return value:  Size  Location     Type
  3109 ;;                  1    wreg      void 
  3110 ;; Registers used:
  3111 ;;		wreg, status,2
  3112 ;; Tracked objects:
  3113 ;;		On entry : 0/0
  3114 ;;		On exit  : 0/0
  3115 ;;		Unchanged: 0/0
  3116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3117 ;;      Params:         0       0       0       0       0       0       0       0       0
  3118 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3119 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3120 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3121 ;;Total ram usage:        0 bytes
  3122 ;; Hardware stack levels used: 1
  3123 ;; This function calls:
  3124 ;;		Nothing
  3125 ;; This function is called by:
  3126 ;;		Interrupt level 2
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129                           
  3130                           	psect	intcode
  3131   000008                     __pintcode:
  3132                           	callstack 0
  3133   000008                     _ISR:
  3134                           	callstack 27
  3135                           
  3136                           ;incstack = 0
  3137   000008  821E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3138   00000A  ED2A  F009         	call	int_func,f	;refresh shadow registers
  3139                           
  3140                           	psect	intcode_body
  3141   001254                     __pintcode_body:
  3142                           	callstack 27
  3143   001254                     int_func:
  3144                           	callstack 27
  3145   001254  0006               	pop		; remove dummy address from shadow register refresh
  3146                           
  3147                           ;laboratorio_4.c: 225: if (TMR0IF) {
  3148   001256  A4F2               	btfss	4082,2,c	;volatile
  3149   001258  D006               	goto	i2l189
  3150                           
  3151                           ;laboratorio_4.c: 226: TMR0 = 3036;
  3152   00125A  0E0B               	movlw	11
  3153   00125C  6ED7               	movwf	215,c	;volatile
  3154   00125E  0EDC               	movlw	220
  3155   001260  6ED6               	movwf	214,c	;volatile
  3156                           
  3157                           ;laboratorio_4.c: 227: TMR0IF = 0;
  3158   001262  94F2               	bcf	4082,2,c	;volatile
  3159                           
  3160                           ;laboratorio_4.c: 228: LATC2 ^= 1;
  3161   001264  748B               	btg	3979,2,c	;volatile
  3162   001266                     i2l189:
  3163   001266  921E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3164   001268  0011               	retfie		f
  3165   00126A                     __end_of_ISR:
  3166                           	callstack 0
  3167                           
  3168                           	psect	rparam
  3169   000001                     ___rparam_used  equ	1
  3170   000000                     ___param_bank   equ	0
  3171   000000                     __Lparam        equ	__Lrparam
  3172   000000                     __Hparam        equ	__Hrparam
  3173                           
  3174                           	psect	temp
  3175   00001E                     btemp:
  3176                           	callstack 0
  3177   00001E                     	ds	1
  3178   00001E                     int$flags       set	btemp
  3179   00001F                     wtemp8          set	btemp+1
  3180   00001F                     ttemp5          set	btemp+1
  3181   000022                     ttemp6          set	btemp+4
  3182   000026                     ttemp7          set	btemp+8
  3183                           
  3184                           	psect	idloc
  3185                           
  3186                           ;Config register IDLOC0 @ 0x200000
  3187                           ;	unspecified, using default values
  3188   200000                     	org	2097152
  3189   200000  FF                 	db	255
  3190                           
  3191                           ;Config register IDLOC1 @ 0x200001
  3192                           ;	unspecified, using default values
  3193   200001                     	org	2097153
  3194   200001  FF                 	db	255
  3195                           
  3196                           ;Config register IDLOC2 @ 0x200002
  3197                           ;	unspecified, using default values
  3198   200002                     	org	2097154
  3199   200002  FF                 	db	255
  3200                           
  3201                           ;Config register IDLOC3 @ 0x200003
  3202                           ;	unspecified, using default values
  3203   200003                     	org	2097155
  3204   200003  FF                 	db	255
  3205                           
  3206                           ;Config register IDLOC4 @ 0x200004
  3207                           ;	unspecified, using default values
  3208   200004                     	org	2097156
  3209   200004  FF                 	db	255
  3210                           
  3211                           ;Config register IDLOC5 @ 0x200005
  3212                           ;	unspecified, using default values
  3213   200005                     	org	2097157
  3214   200005  FF                 	db	255
  3215                           
  3216                           ;Config register IDLOC6 @ 0x200006
  3217                           ;	unspecified, using default values
  3218   200006                     	org	2097158
  3219   200006  FF                 	db	255
  3220                           
  3221                           ;Config register IDLOC7 @ 0x200007
  3222                           ;	unspecified, using default values
  3223   200007                     	org	2097159
  3224   200007  FF                 	db	255
  3225                           
  3226                           	psect	config
  3227                           
  3228                           ;Config register CONFIG1L @ 0x300000
  3229                           ;	unspecified, using default values
  3230                           ;	PLL Prescaler Selection bits
  3231                           ;	PLLDIV = 0x0, unprogrammed default
  3232                           ;	System Clock Postscaler Selection bits
  3233                           ;	CPUDIV = 0x0, unprogrammed default
  3234                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3235                           ;	USBDIV = 0x0, unprogrammed default
  3236   300000                     	org	3145728
  3237   300000  00                 	db	0
  3238                           
  3239                           ;Config register CONFIG1H @ 0x300001
  3240                           ;	Oscillator Selection bits
  3241                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  3242                           ;	Fail-Safe Clock Monitor Enable bit
  3243                           ;	FCMEN = 0x0, unprogrammed default
  3244                           ;	Internal/External Oscillator Switchover bit
  3245                           ;	IESO = 0x0, unprogrammed default
  3246   300001                     	org	3145729
  3247   300001  09                 	db	9
  3248                           
  3249                           ;Config register CONFIG2L @ 0x300002
  3250                           ;	unspecified, using default values
  3251                           ;	Power-up Timer Enable bit
  3252                           ;	PWRT = 0x1, unprogrammed default
  3253                           ;	Brown-out Reset Enable bits
  3254                           ;	BOR = 0x3, unprogrammed default
  3255                           ;	Brown-out Reset Voltage bits
  3256                           ;	BORV = 0x3, unprogrammed default
  3257                           ;	USB Voltage Regulator Enable bit
  3258                           ;	VREGEN = 0x0, unprogrammed default
  3259   300002                     	org	3145730
  3260   300002  1F                 	db	31
  3261                           
  3262                           ;Config register CONFIG2H @ 0x300003
  3263                           ;	Watchdog Timer Enable bit
  3264                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3265                           ;	Watchdog Timer Postscale Select bits
  3266                           ;	WDTPS = 0xF, unprogrammed default
  3267   300003                     	org	3145731
  3268   300003  1E                 	db	30
  3269                           
  3270                           ; Padding undefined space
  3271   300004                     	org	3145732
  3272   300004  FF                 	db	255
  3273                           
  3274                           ;Config register CONFIG3H @ 0x300005
  3275                           ;	CCP2 MUX bit
  3276                           ;	CCP2MX = 0x1, unprogrammed default
  3277                           ;	PORTB A/D Enable bit
  3278                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3279                           ;	Low-Power Timer 1 Oscillator Enable bit
  3280                           ;	LPT1OSC = 0x0, unprogrammed default
  3281                           ;	MCLR Pin Enable bit
  3282                           ;	MCLRE = 0x1, unprogrammed default
  3283   300005                     	org	3145733
  3284   300005  81                 	db	129
  3285                           
  3286                           ;Config register CONFIG4L @ 0x300006
  3287                           ;	unspecified, using default values
  3288                           ;	Stack Full/Underflow Reset Enable bit
  3289                           ;	STVREN = 0x1, unprogrammed default
  3290                           ;	Single-Supply ICSP Enable bit
  3291                           ;	LVP = 0x1, unprogrammed default
  3292                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3293                           ;	ICPRT = 0x0, unprogrammed default
  3294                           ;	Extended Instruction Set Enable bit
  3295                           ;	XINST = 0x0, unprogrammed default
  3296                           ;	Background Debugger Enable bit
  3297                           ;	DEBUG = 0x1, unprogrammed default
  3298   300006                     	org	3145734
  3299   300006  85                 	db	133
  3300                           
  3301                           ; Padding undefined space
  3302   300007                     	org	3145735
  3303   300007  FF                 	db	255
  3304                           
  3305                           ;Config register CONFIG5L @ 0x300008
  3306                           ;	unspecified, using default values
  3307                           ;	Code Protection bit
  3308                           ;	CP0 = 0x1, unprogrammed default
  3309                           ;	Code Protection bit
  3310                           ;	CP1 = 0x1, unprogrammed default
  3311                           ;	Code Protection bit
  3312                           ;	CP2 = 0x1, unprogrammed default
  3313                           ;	Code Protection bit
  3314                           ;	CP3 = 0x1, unprogrammed default
  3315   300008                     	org	3145736
  3316   300008  0F                 	db	15
  3317                           
  3318                           ;Config register CONFIG5H @ 0x300009
  3319                           ;	unspecified, using default values
  3320                           ;	Boot Block Code Protection bit
  3321                           ;	CPB = 0x1, unprogrammed default
  3322                           ;	Data EEPROM Code Protection bit
  3323                           ;	CPD = 0x1, unprogrammed default
  3324   300009                     	org	3145737
  3325   300009  C0                 	db	192
  3326                           
  3327                           ;Config register CONFIG6L @ 0x30000A
  3328                           ;	unspecified, using default values
  3329                           ;	Write Protection bit
  3330                           ;	WRT0 = 0x1, unprogrammed default
  3331                           ;	Write Protection bit
  3332                           ;	WRT1 = 0x1, unprogrammed default
  3333                           ;	Write Protection bit
  3334                           ;	WRT2 = 0x1, unprogrammed default
  3335                           ;	Write Protection bit
  3336                           ;	WRT3 = 0x1, unprogrammed default
  3337   30000A                     	org	3145738
  3338   30000A  0F                 	db	15
  3339                           
  3340                           ;Config register CONFIG6H @ 0x30000B
  3341                           ;	unspecified, using default values
  3342                           ;	Configuration Register Write Protection bit
  3343                           ;	WRTC = 0x1, unprogrammed default
  3344                           ;	Boot Block Write Protection bit
  3345                           ;	WRTB = 0x1, unprogrammed default
  3346                           ;	Data EEPROM Write Protection bit
  3347                           ;	WRTD = 0x1, unprogrammed default
  3348   30000B                     	org	3145739
  3349   30000B  E0                 	db	224
  3350                           
  3351                           ;Config register CONFIG7L @ 0x30000C
  3352                           ;	unspecified, using default values
  3353                           ;	Table Read Protection bit
  3354                           ;	EBTR0 = 0x1, unprogrammed default
  3355                           ;	Table Read Protection bit
  3356                           ;	EBTR1 = 0x1, unprogrammed default
  3357                           ;	Table Read Protection bit
  3358                           ;	EBTR2 = 0x1, unprogrammed default
  3359                           ;	Table Read Protection bit
  3360                           ;	EBTR3 = 0x1, unprogrammed default
  3361   30000C                     	org	3145740
  3362   30000C  0F                 	db	15
  3363                           
  3364                           ;Config register CONFIG7H @ 0x30000D
  3365                           ;	unspecified, using default values
  3366                           ;	Boot Block Table Read Protection bit
  3367                           ;	EBTRB = 0x1, unprogrammed default
  3368   30000D                     	org	3145741
  3369   30000D  40                 	db	64
  3370                           tosu	equ	0xFFF
  3371                           tosh	equ	0xFFE
  3372                           tosl	equ	0xFFD
  3373                           stkptr	equ	0xFFC
  3374                           pclatu	equ	0xFFB
  3375                           pclath	equ	0xFFA
  3376                           pcl	equ	0xFF9
  3377                           tblptru	equ	0xFF8
  3378                           tblptrh	equ	0xFF7
  3379                           tblptrl	equ	0xFF6
  3380                           tablat	equ	0xFF5
  3381                           prodh	equ	0xFF4
  3382                           prodl	equ	0xFF3
  3383                           indf0	equ	0xFEF
  3384                           postinc0	equ	0xFEE
  3385                           postdec0	equ	0xFED
  3386                           preinc0	equ	0xFEC
  3387                           plusw0	equ	0xFEB
  3388                           fsr0h	equ	0xFEA
  3389                           fsr0l	equ	0xFE9
  3390                           wreg	equ	0xFE8
  3391                           indf1	equ	0xFE7
  3392                           postinc1	equ	0xFE6
  3393                           postdec1	equ	0xFE5
  3394                           preinc1	equ	0xFE4
  3395                           plusw1	equ	0xFE3
  3396                           fsr1h	equ	0xFE2
  3397                           fsr1l	equ	0xFE1
  3398                           bsr	equ	0xFE0
  3399                           indf2	equ	0xFDF
  3400                           postinc2	equ	0xFDE
  3401                           postdec2	equ	0xFDD
  3402                           preinc2	equ	0xFDC
  3403                           plusw2	equ	0xFDB
  3404                           fsr2h	equ	0xFDA
  3405                           fsr2l	equ	0xFD9
  3406                           status	equ	0xFD8

Data Sizes:
    Strings     130
    Constant    16
    Data        1
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     16      29
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    Lcd_String@str	PTR const unsigned char  size(1) Largest target is 22
		 -> STR_1(CODE[15]), STR_10(CODE[22]), STR_2(CODE[15]), STR_3(CODE[13]), 
		 -> STR_4(CODE[15]), STR_5(CODE[17]), STR_6(CODE[12]), STR_7(CODE[10]), 
		 -> STR_8(CODE[11]), STR_9(CODE[15]), 


Critical Paths under _main in COMRAM

    _main->_lcd_animacion_bienvenida
    _main->_mostrar_conteo
    _mostrar_valor->_Lcd_Set_Cursor
    _mostrar_conteo->_color
    _unidad->___lwmod
    _color->___lwdiv
    _lcd_animacion_bienvenida->_Lcd_Set_Cursor
    _Lcd_String->_Lcd_Char
    _Lcd_Shift_Right->_Lcd_Cmd
    _Lcd_Shift_Left->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5907
                                             13 COMRAM     3     3      0
                           _Lcd_Char
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                         _Lcd_String
                         _Teclado4x4
                            ___lwdiv
                            ___lwmod
           _lcd_animacion_bienvenida
                     _mostrar_conteo
                      _mostrar_valor
                             _unidad
 ---------------------------------------------------------------------------------
 (1) _mostrar_valor                                        0     0      0     771
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                         _Lcd_String
 ---------------------------------------------------------------------------------
 (1) _mostrar_conteo                                       2     2      0    1945
                                             11 COMRAM     2     2      0
                           _Lcd_Char
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                         _Lcd_String
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                              _color
                             _unidad
 ---------------------------------------------------------------------------------
 (1) _unidad                                               3     1      2      24
                                              5 COMRAM     3     1      2
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _color                                                4     2      2      23
                                              7 COMRAM     4     2      2
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     167
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     172
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     302
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _lcd_animacion_bienvenida                             5     5      0    1327
                                              8 COMRAM     5     5      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                     _Lcd_Shift_Left
                    _Lcd_Shift_Right
                         _Lcd_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_String                                           1     0      1     175
                                              3 COMRAM     1     0      1
                           _Lcd_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Char                                             3     3      0     120
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Shift_Right                                      0     0      0     232
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Shift_Left                                       0     0      0     232
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1     364
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     232
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Teclado4x4                                           6     6      0     135
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     232
                                              3 COMRAM     1     1      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     232
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Char
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_String
     _Lcd_Char
   _Teclado4x4
   ___lwdiv
   ___lwmod
   _lcd_animacion_bienvenida
     _Lcd_Clear
     _Lcd_Set_Cursor
     _Lcd_Shift_Left
       _Lcd_Cmd
     _Lcd_Shift_Right
       _Lcd_Cmd
     _Lcd_String
   _mostrar_conteo
     _Lcd_Char
     _Lcd_Clear
     _Lcd_Set_Cursor
     _Lcd_String
     ___awdiv
     ___awmod
     ___lwdiv
     ___lwmod
     _color
       ___lwdiv (ARG)
     _unidad
       ___lwmod (ARG)
   _mostrar_valor
     _Lcd_Clear
     _Lcd_Set_Cursor
     _Lcd_String
   _unidad

 _ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0       0      0.0%
BITBIGSFRh         115      0       0      0.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     16      29     30.9%
BITBIGSFRll         33      0       0      0.0%
BITBIGSFRlh         10      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      29      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Jun 19 02:48:26 2025

                    ___awdiv@sign 0006                               l124 0932                               l182 10B8  
                             l681 113C                               l691 117E                               _GIE 7F97  
                             u200 0CCE                               u310 0D30                               u230 0CEA  
                             u215 0CD0                               u305 0D1C                               u225 0CD8  
                             u330 0D44                               u260 0D06                               u325 0D32  
                             u245 0CEC                               u350 0D5C                               u255 0CF4  
                             u345 0D46                               u370 0D78                               u290 0D1A  
                             u275 0D08                               _ISR 0008                               u365 0D5E  
                             u285 0D10                               u640 0EC0                               u624 0E82  
                             u625 0E7E                               u385 0D7A                               u634 0EB2  
                             u635 0EAE                               u900 0DA0                               u670 0F10  
                             u654 0ED4                               u655 0ED0                               u930 0DBC  
                             u915 0DA2                               u925 0DAA                               u960 0DD8  
                             u945 0DBE                               u955 0DC6                               u990 0DEC  
                             u975 0DDA                               u985 0DE2                     Teclado4x4@col 0005  
                    ___awmod@sign 0006                               wreg 0FE8              mostrar_conteo@faltan 000C  
                 ??_mostrar_valor 0009                              ?_ISR 0001                              l1211 0E62  
                            l1215 0E72                              l1225 0E9E                              l1235 0EFC  
                            l1243 0F16                              l1503 11F2                              l1513 1224  
                            l1507 1204                              l1611 1050                              l1603 1036  
                            l1531 1094                              l1613 1058                              l1541 10B2  
                            l1533 109A                              l1711 0F76                              l1623 107A  
                            l1607 1042                              l1535 10A0                              l1537 10A6  
                            l1545 10BC                              l1801 08EE                              l1571 0FDA  
                            l1627 1088                              l1619 1070                              l1539 10AC  
                            l1573 0FE2                              l1565 0FC4                              l1637 110A  
                            l1821 0934                              l1591 101A                              l1583 1002  
                            l1559 0FB4                              l1639 1112                              l1831 096C  
                            l1649 1132                              l1665 1174                              l1657 1154  
                            l1841 09B2                              l1587 100C                              l1659 115C  
                            l1739 0C3C                              l1909 0B4A                              l1861 0A66  
                            l1919 0B7C                              l1871 0AA2                              l1927 0B8E  
                            l1697 0F46                              l1881 0ADE                              l1873 0AA8  
                            l1929 0BB2                              l1849 09FA                              l1883 0AE4  
                            l1879 0AD6                              l1889 0AFC                              STR_1 0847  
                            STR_2 0838                              STR_3 0865                              STR_4 0856  
                            STR_5 0827                              STR_6 0872                              STR_7 0889  
                            STR_8 087E                              STR_9 0847                              u1010 0E02  
                            u1005 0DEE                              u1030 0E16                              u1200 105C  
                            u1025 0E04                              u1050 0E2E                              u1300 0FA0  
                            u1140 0FE6                              u1045 0E18                              u1070 0E4A  
                            u1240 1116                              u1065 0E30                              u1410 09AA  
                            u1085 0E4C                              u1270 1160                              u1350 095C  
                            _LATB 0F8A                              _LATC 0F8B                              u1360 095E  
                            _LATD 0F8C                              _LATE 0F8D                              u1290 0F6E  
                            u1370 0968                              u1607 0E90                              u1527 0AC8  
                            u1617 1192                              u1537 0BB8                              u1490 0B14  
                            u1627 11BC                              u1547 0F36                              u1637 0DF2  
                            u1557 0F50                              u1647 0E50                              u1567 0F80  
                            _IPEN 7E87                              u1577 0D20                              u1587 0D7E  
                            u1597 1286                              _PEIE 7F96                              _RBPU 7F8F  
                            _TMR0 0FD6                              _main 0894                    Teclado4x4@fila 0003  
                            btemp 001E                              prodh 0FF4                              prodl 0FF3  
                            start 000E                   __end_of_Lcd_Cmd 0E5A                      ___param_bank 0000  
                ??_mostrar_conteo 000C                             ??_ISR 0001                        _Lcd_String 11F0  
                           ?_main 0001                   __end_of___awdiv 1024                             STR_10 0811  
                 __end_of___awmod 1092                             _T0CON 0FD5                   ___awdiv@divisor 0003  
                           _LATD0 7C60                             _LATC2 7C5A                             _LATD1 7C61  
                           _LATD2 7C62                             _LATD3 7C63                             _LATD4 7C64  
                           _LATD5 7C65                             _LATD6 7C66                   __end_of___lwdiv 1146  
                 __end_of___lwmod 1188                             i2l189 1266                   ___awdiv@counter 0005  
                           _PORTB 0F81                             _TRISB 0F93                             _TRISC 0F94  
                           _TRISD 0F95                             _TRISE 0F96                             _color 1092  
                           _input 0015  __end_of_lcd_animacion_bienvenida 0FA2                             tablat 0FF5  
                           ttemp5 001F                             ttemp6 0022                             ttemp7 0026  
                           status 0FD8                             wtemp8 001F                  __end_of_Lcd_Char 0D88  
                __end_of_Lcd_Init 11C4                   __initialization 11C4                      __end_of_main 0BC4  
                          ??_main 000E                     __activetblptr 0002                            ?_color 0008  
                      _Teclado4x4 0E5A                  ___awdiv@dividend 0001                         ??_Lcd_Cmd 0001  
                          _TMR0IE 7F95                            _TMR0IF 7F92                            _TMR0ON 7EAF  
                          _TRISC2 7CA2                            _TRISD6 7CAE                         ??___awdiv 0005  
                       ??___awmod 0005                         ??___lwdiv 0005                         ??___lwmod 0005  
                          _estado 001B                            clear_0 11DC                  ___awdiv@quotient 0007  
                          _teclas 0801                   ___awmod@divisor 0003                            isa$std 0001  
                 ___awmod@counter 0005                            _unidad 126A                       ?_Lcd_String 0004  
                          color@i 0008                      __pdataCOMRAM 001D                      __mediumconst 0000  
                          tblptrh 0FF7                            tblptrl 0FF6                            tblptru 0FF8  
                      __accesstop 0060           __end_of__initialization 11E2                 __end_of_Lcd_Clear 128E  
                   ___rparam_used 0001                    __pcstackCOMRAM 0001                     __end_of_color 10F4  
       ?_lcd_animacion_bienvenida 0001                    _Lcd_Set_Cursor 1218                         ?_Lcd_Char 0001  
                  _Lcd_Shift_Left 1296                         ?_Lcd_Init 0001                           ??_color 000A  
                     ?_Teclado4x4 0001            __end_of_Lcd_Set_Cursor 123C                           ?_unidad 0006  
          __end_of_Lcd_Shift_Left 129E                 ??_Lcd_Shift_Right 0004                        ??_Lcd_Char 0001  
                      ??_Lcd_Init 0004             __end_of_mostrar_valor 1254                           _Lcd_Cmd 0D88  
                         __Hparam 0000                           __Lparam 0000                           ___awdiv 0FA2  
                         ___awmod 1024                           ___lwdiv 10F4                           ___lwmod 1146  
                    __psmallconst 0800                           __pcinit 11C4                           __ramtop 0800  
                 ?_Lcd_Set_Cursor 0004                           __ptext0 0894                           __ptext1 123C  
                         __ptext2 0BC4                           __ptext3 126A                           __ptext4 1092  
                         __ptext5 1146                           __ptext6 10F4                           __ptext7 1024  
                         __ptext8 0FA2                           __ptext9 0F1A                   ?_Lcd_Shift_Left 0001  
                ___awmod@dividend 0001                    __pintcode_body 1254              end_of_initialization 11E2  
                   __Lmediumconst 0000                           int_func 1254                           unidad@i 0006  
                         postinc0 0FEE                      ??_Lcd_String 0005         lcd_animacion_bienvenida@i 000A  
              __end_of_Lcd_String 1218                         _Lcd_Clear 127E                     __pidataCOMRAM 129E  
                  __end_of_teclas 0811                    __end_of_unidad 127E     lcd_animacion_bienvenida@i_152 000C  
             start_initialization 11C4                       __end_of_ISR 126A                      ??_Teclado4x4 0001  
                      ?_Lcd_Clear 0001                   _Lcd_Shift_Right 128E                __end_of_Teclado4x4 0F1A  
                        ??_unidad 0008                       __pbssCOMRAM 0011                _Lcd_Set_Cursor$101 0006  
                   Lcd_String@str 0004                          ?_Lcd_Cmd 0001                  ___lwdiv@dividend 0001  
        _lcd_animacion_bienvenida 0F1A                  ??_Lcd_Set_Cursor 0005                         __pintcode 0008  
                        ?___awdiv 0001                          ?___awmod 0001                          ?___lwdiv 0001  
                        ?___lwmod 0001                  ??_Lcd_Shift_Left 0004                       __smallconst 0800  
                  _mostrar_conteo 0BC4                      Lcd_Char@data 0003                  ___lwdiv@quotient 0005  
         __end_of_Lcd_Shift_Right 1296                       ??_Lcd_Clear 0004            __end_of_mostrar_conteo 0CB6  
                       main@tecla 0010                          _Lcd_Char 0CB6                          _Lcd_Init 1188  
                     _inactividad 0011              Lcd_Set_Cursor@column 0004                          __Hrparam 0000  
                        __Lrparam 0000                   ?_mostrar_conteo 0001                   ___lwdiv@divisor 0003  
                 ___lwdiv@counter 0007                          __ptext10 11F0                          __ptext11 0CB6  
                        __ptext12 128E                          __ptext13 1296                          __ptext14 1218  
                        __ptext15 127E                          __ptext16 0E5A                          __ptext17 1188  
                        __ptext18 0D88                          _contador 0017                     _mostrar_valor 123C  
                        _objetivo 0019                  ?_Lcd_Shift_Right 0001                     _lcd_backlight 001D  
                        isa$xinst 0000                          int$flags 001E                    ?_mostrar_valor 0001  
                        intlevel2 0000        ??_lcd_animacion_bienvenida 0009                  ___lwmod@dividend 0001  
                      Lcd_Cmd@cmd 0003                   ___lwmod@divisor 0003                   ___lwmod@counter 0005  
               Lcd_Set_Cursor@pos 0008                 Lcd_Set_Cursor@row 0005  
